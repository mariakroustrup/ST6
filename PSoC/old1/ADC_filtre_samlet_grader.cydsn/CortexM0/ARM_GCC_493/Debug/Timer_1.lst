ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Timer_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	Timer_1_initVar
  18              		.bss
  19              		.type	Timer_1_initVar, %object
  20              		.size	Timer_1_initVar, 1
  21              	Timer_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.Timer_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	Timer_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	Timer_1_Init, %function
  29              	Timer_1_Init:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\Timer_1.c"
   1:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Timer_1.c **** * File Name: Timer_1.c
   3:.\Generated_Source\PSoC4/Timer_1.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/Timer_1.c **** *
   5:.\Generated_Source\PSoC4/Timer_1.c **** * Description:
   6:.\Generated_Source\PSoC4/Timer_1.c **** *  This file provides the source code to the API for the Timer_1
   7:.\Generated_Source\PSoC4/Timer_1.c **** *  component
   8:.\Generated_Source\PSoC4/Timer_1.c **** *
   9:.\Generated_Source\PSoC4/Timer_1.c **** * Note:
  10:.\Generated_Source\PSoC4/Timer_1.c **** *  None
  11:.\Generated_Source\PSoC4/Timer_1.c **** *
  12:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/Timer_1.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/Timer_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/Timer_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/Timer_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/Timer_1.c **** 
  19:.\Generated_Source\PSoC4/Timer_1.c **** #include "Timer_1.h"
  20:.\Generated_Source\PSoC4/Timer_1.c **** 
  21:.\Generated_Source\PSoC4/Timer_1.c **** uint8 Timer_1_initVar = 0u;
  22:.\Generated_Source\PSoC4/Timer_1.c **** 
  23:.\Generated_Source\PSoC4/Timer_1.c **** 
  24:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Init
  26:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 2


  27:.\Generated_Source\PSoC4/Timer_1.c **** *
  28:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
  29:.\Generated_Source\PSoC4/Timer_1.c **** *  Initialize/Restore default Timer_1 configuration.
  30:.\Generated_Source\PSoC4/Timer_1.c **** *
  31:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
  32:.\Generated_Source\PSoC4/Timer_1.c **** *  None
  33:.\Generated_Source\PSoC4/Timer_1.c **** *
  34:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
  35:.\Generated_Source\PSoC4/Timer_1.c **** *  None
  36:.\Generated_Source\PSoC4/Timer_1.c **** *
  37:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Init(void)
  39:.\Generated_Source\PSoC4/Timer_1.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/Timer_1.c **** 
  41:.\Generated_Source\PSoC4/Timer_1.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__QUAD == Timer_1_CONFIG)
  43:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL_REG = Timer_1_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/Timer_1.c ****         
  45:.\Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_TRIG_CONTROL1_REG  = Timer_1_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/Timer_1.c **** 
  48:.\Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_SetInterruptMode(Timer_1_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/Timer_1.c ****         
  51:.\Generated_Source\PSoC4/Timer_1.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_SetCounterMode(Timer_1_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WritePeriod(Timer_1_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WriteCounter(Timer_1_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/Timer_1.c ****     #endif  /* (Timer_1__QUAD == Timer_1_CONFIG) */
  56:.\Generated_Source\PSoC4/Timer_1.c **** 
  57:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__TIMER == Timer_1_CONFIG)
  58:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL_REG = Timer_1_CTRL_TIMER_BASE_CONFIG;
  40              		.loc 1 58 0
  41 0004 094B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 9204     		lsl	r2, r2, #18
  44 000a 1A60     		str	r2, [r3]
  59:.\Generated_Source\PSoC4/Timer_1.c ****         
  60:.\Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_TRIG_CONTROL1_REG  = Timer_1_TIMER_SIGNALS_MODES;
  45              		.loc 1 61 0
  46 000c 084B     		ldr	r3, .L2+4
  47 000e 8E22     		mov	r2, #142
  48 0010 5200     		lsl	r2, r2, #1
  49 0012 1A60     		str	r2, [r3]
  62:.\Generated_Source\PSoC4/Timer_1.c ****     
  63:.\Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_SetInterruptMode(Timer_1_TC_INTERRUPT_MASK);
  50              		.loc 1 64 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 3


  51 0014 0220     		mov	r0, #2
  52 0016 FFF7FEFF 		bl	Timer_1_SetInterruptMode
  65:.\Generated_Source\PSoC4/Timer_1.c ****         
  66:.\Generated_Source\PSoC4/Timer_1.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WritePeriod(Timer_1_TC_PERIOD_VALUE );
  53              		.loc 1 67 0
  54 001a 064B     		ldr	r3, .L2+8
  55 001c 181C     		mov	r0, r3
  56 001e FFF7FEFF 		bl	Timer_1_WritePeriod
  68:.\Generated_Source\PSoC4/Timer_1.c **** 
  69:.\Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__COMPARE == Timer_1_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCompare(Timer_1_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/Timer_1.c **** 
  72:.\Generated_Source\PSoC4/Timer_1.c ****             #if (1u == Timer_1_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_WriteCompareBuf(Timer_1_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/Timer_1.c ****             #endif  /* (1u == Timer_1_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__COMPARE == Timer_1_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/Timer_1.c **** 
  78:.\Generated_Source\PSoC4/Timer_1.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1_CY_TCPWM_V2 && Timer_1_TIMER_UPDOWN_CNT_USED && !Timer_1_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/Timer_1.c ****         #elif(Timer_1__COUNT_DOWN == Timer_1_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCounter(Timer_1_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/Timer_1.c ****         #else
  84:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCounter(0u);
  57              		.loc 1 84 0
  58 0022 0020     		mov	r0, #0
  59 0024 FFF7FEFF 		bl	Timer_1_WriteCounter
  85:.\Generated_Source\PSoC4/Timer_1.c ****         #endif /* (Timer_1_CY_TCPWM_V2 && Timer_1_TIMER_UPDOWN_CNT_USED && !Timer_1_CY_TCPWM_4000) 
  86:.\Generated_Source\PSoC4/Timer_1.c ****     #endif  /* (Timer_1__TIMER == Timer_1_CONFIG) */
  87:.\Generated_Source\PSoC4/Timer_1.c **** 
  88:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__PWM_SEL == Timer_1_CONFIG)
  89:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL_REG = Timer_1_CTRL_PWM_BASE_CONFIG;
  90:.\Generated_Source\PSoC4/Timer_1.c **** 
  91:.\Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__PWM_PR == Timer_1_PWM_MODE)
  92:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL_REG |= Timer_1_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCounter(Timer_1_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/Timer_1.c ****         #else
  95:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL_REG |= Timer_1_CTRL_PWM_ALIGN | Timer_1_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/Timer_1.c ****             
  97:.\Generated_Source\PSoC4/Timer_1.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1_CY_TCPWM_V2 && Timer_1_PWM_UPDOWN_CNT_USED && !Timer_1_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/Timer_1.c ****             #elif (Timer_1__RIGHT == Timer_1_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_WriteCounter(Timer_1_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/Timer_1.c ****             #else 
 103:.\Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/Timer_1.c ****             #endif  /* (Timer_1_CY_TCPWM_V2 && Timer_1_PWM_UPDOWN_CNT_USED && !Timer_1_CY_TCPWM_400
 105:.\Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__PWM_PR == Timer_1_PWM_MODE) */
 106:.\Generated_Source\PSoC4/Timer_1.c **** 
 107:.\Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__PWM_DT == Timer_1_PWM_MODE)
 108:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL_REG |= Timer_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__PWM_DT == Timer_1_PWM_MODE) */
 110:.\Generated_Source\PSoC4/Timer_1.c **** 
 111:.\Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__PWM == Timer_1_PWM_MODE)
 112:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL_REG |= Timer_1_CTRL_PWM_PRESCALER;
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 4


 113:.\Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__PWM == Timer_1_PWM_MODE) */
 114:.\Generated_Source\PSoC4/Timer_1.c **** 
 115:.\Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_TRIG_CONTROL1_REG  = Timer_1_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/Timer_1.c ****     
 118:.\Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_SetInterruptMode(Timer_1_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/Timer_1.c **** 
 121:.\Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__PWM_PR == Timer_1_PWM_MODE)
 123:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/Timer_1.c ****                     (Timer_1_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/Timer_1.c ****                     Timer_1_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/Timer_1.c ****                     Timer_1_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/Timer_1.c ****         #else
 128:.\Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1__LEFT == Timer_1_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_TRIG_CONTROL2_REG = Timer_1_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/Timer_1.c ****             #endif  /* ( Timer_1_PWM_LEFT == Timer_1_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/Timer_1.c **** 
 132:.\Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1__RIGHT == Timer_1_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_TRIG_CONTROL2_REG = Timer_1_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/Timer_1.c ****             #endif  /* ( Timer_1_PWM_RIGHT == Timer_1_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/Timer_1.c **** 
 136:.\Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1__CENTER == Timer_1_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_TRIG_CONTROL2_REG = Timer_1_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/Timer_1.c ****             #endif  /* ( Timer_1_PWM_CENTER == Timer_1_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/Timer_1.c **** 
 140:.\Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1__ASYMMETRIC == Timer_1_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_TRIG_CONTROL2_REG = Timer_1_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/Timer_1.c ****             #endif  /* (Timer_1__ASYMMETRIC == Timer_1_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__PWM_PR == Timer_1_PWM_MODE) */
 144:.\Generated_Source\PSoC4/Timer_1.c **** 
 145:.\Generated_Source\PSoC4/Timer_1.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WritePeriod(Timer_1_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WriteCompare(Timer_1_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/Timer_1.c **** 
 149:.\Generated_Source\PSoC4/Timer_1.c ****         #if (1u == Timer_1_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCompareBuf(Timer_1_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (1u == Timer_1_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/Timer_1.c **** 
 154:.\Generated_Source\PSoC4/Timer_1.c ****         #if (1u == Timer_1_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WritePeriodBuf(Timer_1_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (1u == Timer_1_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/Timer_1.c ****     #endif  /* (Timer_1__PWM_SEL == Timer_1_CONFIG) */
 159:.\Generated_Source\PSoC4/Timer_1.c ****     
 160:.\Generated_Source\PSoC4/Timer_1.c **** }
  60              		.loc 1 160 0
  61 0028 BD46     		mov	sp, r7
  62              		@ sp needed
  63 002a 80BD     		pop	{r7, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 002c 00012040 		.word	1075839232
  68 0030 24012040 		.word	1075839268
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 5


  69 0034 FFFF0000 		.word	65535
  70              		.cfi_endproc
  71              	.LFE2:
  72              		.size	Timer_1_Init, .-Timer_1_Init
  73              		.section	.text.Timer_1_Enable,"ax",%progbits
  74              		.align	2
  75              		.global	Timer_1_Enable
  76              		.code	16
  77              		.thumb_func
  78              		.type	Timer_1_Enable, %function
  79              	Timer_1_Enable:
  80              	.LFB3:
 161:.\Generated_Source\PSoC4/Timer_1.c **** 
 162:.\Generated_Source\PSoC4/Timer_1.c **** 
 163:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Enable
 165:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/Timer_1.c **** *
 167:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/Timer_1.c **** *  Enables the Timer_1.
 169:.\Generated_Source\PSoC4/Timer_1.c **** *
 170:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 171:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 172:.\Generated_Source\PSoC4/Timer_1.c **** *
 173:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 174:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 175:.\Generated_Source\PSoC4/Timer_1.c **** *
 176:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Enable(void)
 178:.\Generated_Source\PSoC4/Timer_1.c **** {
  81              		.loc 1 178 0
  82              		.cfi_startproc
  83 0000 90B5     		push	{r4, r7, lr}
  84              		.cfi_def_cfa_offset 12
  85              		.cfi_offset 4, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 83B0     		sub	sp, sp, #12
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/Timer_1.c **** 
 181:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
  92              		.loc 1 181 0
  93 0006 FC1D     		add	r4, r7, #7
  94 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  95 000c 031C     		mov	r3, r0
  96 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_BLOCK_CONTROL_REG |= Timer_1_MASK;
  97              		.loc 1 182 0
  98 0010 064B     		ldr	r3, .L5
  99 0012 064A     		ldr	r2, .L5
 100 0014 1268     		ldr	r2, [r2]
 101 0016 0121     		mov	r1, #1
 102 0018 0A43     		orr	r2, r1
 103 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 6


 183:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 104              		.loc 1 183 0
 105 001c FB1D     		add	r3, r7, #7
 106 001e 1B78     		ldrb	r3, [r3]
 107 0020 181C     		mov	r0, r3
 108 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/Timer_1.c **** 
 185:.\Generated_Source\PSoC4/Timer_1.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__PWM_SEL == Timer_1_CONFIG)
 187:.\Generated_Source\PSoC4/Timer_1.c ****         #if (0u == Timer_1_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_TriggerCommand(Timer_1_MASK, Timer_1_CMD_START);
 189:.\Generated_Source\PSoC4/Timer_1.c ****         #endif /* (0u == Timer_1_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1__PWM_SEL == Timer_1_CONFIG) */
 191:.\Generated_Source\PSoC4/Timer_1.c **** 
 192:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__TIMER == Timer_1_CONFIG)
 193:.\Generated_Source\PSoC4/Timer_1.c ****         #if (0u == Timer_1_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_TriggerCommand(Timer_1_MASK, Timer_1_CMD_START);
 195:.\Generated_Source\PSoC4/Timer_1.c ****         #endif /* (0u == Timer_1_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1__TIMER == Timer_1_CONFIG) */
 197:.\Generated_Source\PSoC4/Timer_1.c ****     
 198:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__QUAD == Timer_1_CONFIG)
 199:.\Generated_Source\PSoC4/Timer_1.c ****         #if (0u != Timer_1_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/Timer_1.c ****             Timer_1_TriggerCommand(Timer_1_MASK, Timer_1_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/Timer_1.c ****         #endif /* (0u != Timer_1_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/Timer_1.c ****     #endif  /* (Timer_1__QUAD == Timer_1_CONFIG) */
 203:.\Generated_Source\PSoC4/Timer_1.c **** }
 109              		.loc 1 203 0
 110 0026 BD46     		mov	sp, r7
 111 0028 03B0     		add	sp, sp, #12
 112              		@ sp needed
 113 002a 90BD     		pop	{r4, r7, pc}
 114              	.L6:
 115              		.align	2
 116              	.L5:
 117 002c 00002040 		.word	1075838976
 118              		.cfi_endproc
 119              	.LFE3:
 120              		.size	Timer_1_Enable, .-Timer_1_Enable
 121              		.section	.text.Timer_1_Start,"ax",%progbits
 122              		.align	2
 123              		.global	Timer_1_Start
 124              		.code	16
 125              		.thumb_func
 126              		.type	Timer_1_Start, %function
 127              	Timer_1_Start:
 128              	.LFB4:
 204:.\Generated_Source\PSoC4/Timer_1.c **** 
 205:.\Generated_Source\PSoC4/Timer_1.c **** 
 206:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Start
 208:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/Timer_1.c **** *
 210:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 211:.\Generated_Source\PSoC4/Timer_1.c **** *  Initializes the Timer_1 with default customizer
 212:.\Generated_Source\PSoC4/Timer_1.c **** *  values when called the first time and enables the Timer_1.
 213:.\Generated_Source\PSoC4/Timer_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/Timer_1.c **** *  just enabled.
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 7


 215:.\Generated_Source\PSoC4/Timer_1.c **** *
 216:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 217:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 218:.\Generated_Source\PSoC4/Timer_1.c **** *
 219:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 220:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 221:.\Generated_Source\PSoC4/Timer_1.c **** *
 222:.\Generated_Source\PSoC4/Timer_1.c **** * Global variables:
 223:.\Generated_Source\PSoC4/Timer_1.c **** *  Timer_1_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/Timer_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/Timer_1.c **** *  to 1 the first time Timer_1_Start() is called. This allows
 226:.\Generated_Source\PSoC4/Timer_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/Timer_1.c **** *  calls to the Timer_1_Start() routine.
 228:.\Generated_Source\PSoC4/Timer_1.c **** *
 229:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Start(void)
 231:.\Generated_Source\PSoC4/Timer_1.c **** {
 129              		.loc 1 231 0
 130              		.cfi_startproc
 131 0000 80B5     		push	{r7, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 135 0002 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/Timer_1.c ****     if (0u == Timer_1_initVar)
 137              		.loc 1 232 0
 138 0004 064B     		ldr	r3, .L9
 139 0006 1B78     		ldrb	r3, [r3]
 140 0008 002B     		cmp	r3, #0
 141 000a 04D1     		bne	.L8
 233:.\Generated_Source\PSoC4/Timer_1.c ****     {
 234:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_Init();
 142              		.loc 1 234 0
 143 000c FFF7FEFF 		bl	Timer_1_Init
 235:.\Generated_Source\PSoC4/Timer_1.c ****         Timer_1_initVar = 1u;
 144              		.loc 1 235 0
 145 0010 034B     		ldr	r3, .L9
 146 0012 0122     		mov	r2, #1
 147 0014 1A70     		strb	r2, [r3]
 148              	.L8:
 236:.\Generated_Source\PSoC4/Timer_1.c ****     }
 237:.\Generated_Source\PSoC4/Timer_1.c **** 
 238:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_Enable();
 149              		.loc 1 238 0
 150 0016 FFF7FEFF 		bl	Timer_1_Enable
 239:.\Generated_Source\PSoC4/Timer_1.c **** }
 151              		.loc 1 239 0
 152 001a BD46     		mov	sp, r7
 153              		@ sp needed
 154 001c 80BD     		pop	{r7, pc}
 155              	.L10:
 156 001e C046     		.align	2
 157              	.L9:
 158 0020 00000000 		.word	Timer_1_initVar
 159              		.cfi_endproc
 160              	.LFE4:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 8


 161              		.size	Timer_1_Start, .-Timer_1_Start
 162              		.section	.text.Timer_1_Stop,"ax",%progbits
 163              		.align	2
 164              		.global	Timer_1_Stop
 165              		.code	16
 166              		.thumb_func
 167              		.type	Timer_1_Stop, %function
 168              	Timer_1_Stop:
 169              	.LFB5:
 240:.\Generated_Source\PSoC4/Timer_1.c **** 
 241:.\Generated_Source\PSoC4/Timer_1.c **** 
 242:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Stop
 244:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/Timer_1.c **** *
 246:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 247:.\Generated_Source\PSoC4/Timer_1.c **** *  Disables the Timer_1.
 248:.\Generated_Source\PSoC4/Timer_1.c **** *
 249:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 250:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 251:.\Generated_Source\PSoC4/Timer_1.c **** *
 252:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 253:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 254:.\Generated_Source\PSoC4/Timer_1.c **** *
 255:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Stop(void)
 257:.\Generated_Source\PSoC4/Timer_1.c **** {
 170              		.loc 1 257 0
 171              		.cfi_startproc
 172 0000 90B5     		push	{r4, r7, lr}
 173              		.cfi_def_cfa_offset 12
 174              		.cfi_offset 4, -12
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 83B0     		sub	sp, sp, #12
 178              		.cfi_def_cfa_offset 24
 179 0004 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 258:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/Timer_1.c **** 
 260:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 181              		.loc 1 260 0
 182 0006 FC1D     		add	r4, r7, #7
 183 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 184 000c 031C     		mov	r3, r0
 185 000e 2370     		strb	r3, [r4]
 261:.\Generated_Source\PSoC4/Timer_1.c **** 
 262:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_BLOCK_CONTROL_REG &= (uint32)~Timer_1_MASK;
 186              		.loc 1 262 0
 187 0010 064B     		ldr	r3, .L12
 188 0012 064A     		ldr	r2, .L12
 189 0014 1268     		ldr	r2, [r2]
 190 0016 0121     		mov	r1, #1
 191 0018 8A43     		bic	r2, r1
 192 001a 1A60     		str	r2, [r3]
 263:.\Generated_Source\PSoC4/Timer_1.c **** 
 264:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 9


 193              		.loc 1 264 0
 194 001c FB1D     		add	r3, r7, #7
 195 001e 1B78     		ldrb	r3, [r3]
 196 0020 181C     		mov	r0, r3
 197 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:.\Generated_Source\PSoC4/Timer_1.c **** }
 198              		.loc 1 265 0
 199 0026 BD46     		mov	sp, r7
 200 0028 03B0     		add	sp, sp, #12
 201              		@ sp needed
 202 002a 90BD     		pop	{r4, r7, pc}
 203              	.L13:
 204              		.align	2
 205              	.L12:
 206 002c 00002040 		.word	1075838976
 207              		.cfi_endproc
 208              	.LFE5:
 209              		.size	Timer_1_Stop, .-Timer_1_Stop
 210              		.section	.text.Timer_1_SetMode,"ax",%progbits
 211              		.align	2
 212              		.global	Timer_1_SetMode
 213              		.code	16
 214              		.thumb_func
 215              		.type	Timer_1_SetMode, %function
 216              	Timer_1_SetMode:
 217              	.LFB6:
 266:.\Generated_Source\PSoC4/Timer_1.c **** 
 267:.\Generated_Source\PSoC4/Timer_1.c **** 
 268:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetMode
 270:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/Timer_1.c **** *
 272:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 273:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the operation mode of the Timer_1. This function is used when
 274:.\Generated_Source\PSoC4/Timer_1.c **** *  configured as a generic Timer_1 and the actual mode of operation is
 275:.\Generated_Source\PSoC4/Timer_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/Timer_1.c **** *
 277:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 278:.\Generated_Source\PSoC4/Timer_1.c **** *  mode: Mode for the Timer_1 to operate in
 279:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
 280:.\Generated_Source\PSoC4/Timer_1.c **** *   - Timer_1_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/Timer_1.c **** *                                                 compare capability
 282:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/Timer_1.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/Timer_1.c **** *
 289:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 290:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 291:.\Generated_Source\PSoC4/Timer_1.c **** *
 292:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/Timer_1.c **** {
 218              		.loc 1 294 0
 219              		.cfi_startproc
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 10


 220 0000 90B5     		push	{r4, r7, lr}
 221              		.cfi_def_cfa_offset 12
 222              		.cfi_offset 4, -12
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 85B0     		sub	sp, sp, #20
 226              		.cfi_def_cfa_offset 32
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
 229 0006 7860     		str	r0, [r7, #4]
 295:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/Timer_1.c **** 
 297:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 230              		.loc 1 297 0
 231 0008 0F23     		mov	r3, #15
 232 000a FC18     		add	r4, r7, r3
 233 000c FFF7FEFF 		bl	CyEnterCriticalSection
 234 0010 031C     		mov	r3, r0
 235 0012 2370     		strb	r3, [r4]
 298:.\Generated_Source\PSoC4/Timer_1.c **** 
 299:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_MODE_MASK;
 236              		.loc 1 299 0
 237 0014 0A4B     		ldr	r3, .L15
 238 0016 0A4A     		ldr	r2, .L15
 239 0018 1268     		ldr	r2, [r2]
 240 001a 0A49     		ldr	r1, .L15+4
 241 001c 0A40     		and	r2, r1
 242 001e 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= mode;
 243              		.loc 1 300 0
 244 0020 074B     		ldr	r3, .L15
 245 0022 074A     		ldr	r2, .L15
 246 0024 1168     		ldr	r1, [r2]
 247 0026 7A68     		ldr	r2, [r7, #4]
 248 0028 0A43     		orr	r2, r1
 249 002a 1A60     		str	r2, [r3]
 301:.\Generated_Source\PSoC4/Timer_1.c **** 
 302:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 250              		.loc 1 302 0
 251 002c 0F23     		mov	r3, #15
 252 002e FB18     		add	r3, r7, r3
 253 0030 1B78     		ldrb	r3, [r3]
 254 0032 181C     		mov	r0, r3
 255 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:.\Generated_Source\PSoC4/Timer_1.c **** }
 256              		.loc 1 303 0
 257 0038 BD46     		mov	sp, r7
 258 003a 05B0     		add	sp, sp, #20
 259              		@ sp needed
 260 003c 90BD     		pop	{r4, r7, pc}
 261              	.L16:
 262 003e C046     		.align	2
 263              	.L15:
 264 0040 00012040 		.word	1075839232
 265 0044 FFFFFFF8 		.word	-117440513
 266              		.cfi_endproc
 267              	.LFE6:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 11


 268              		.size	Timer_1_SetMode, .-Timer_1_SetMode
 269              		.section	.text.Timer_1_SetQDMode,"ax",%progbits
 270              		.align	2
 271              		.global	Timer_1_SetQDMode
 272              		.code	16
 273              		.thumb_func
 274              		.type	Timer_1_SetQDMode, %function
 275              	Timer_1_SetQDMode:
 276              	.LFB7:
 304:.\Generated_Source\PSoC4/Timer_1.c **** 
 305:.\Generated_Source\PSoC4/Timer_1.c **** 
 306:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetQDMode
 308:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/Timer_1.c **** *
 310:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 311:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/Timer_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/Timer_1.c **** *
 314:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 315:.\Generated_Source\PSoC4/Timer_1.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
 317:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/Timer_1.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/Timer_1.c **** *
 322:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 323:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 324:.\Generated_Source\PSoC4/Timer_1.c **** *
 325:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/Timer_1.c **** {
 277              		.loc 1 327 0
 278              		.cfi_startproc
 279 0000 90B5     		push	{r4, r7, lr}
 280              		.cfi_def_cfa_offset 12
 281              		.cfi_offset 4, -12
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 85B0     		sub	sp, sp, #20
 285              		.cfi_def_cfa_offset 32
 286 0004 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 288 0006 7860     		str	r0, [r7, #4]
 328:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/Timer_1.c **** 
 330:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 289              		.loc 1 330 0
 290 0008 0F23     		mov	r3, #15
 291 000a FC18     		add	r4, r7, r3
 292 000c FFF7FEFF 		bl	CyEnterCriticalSection
 293 0010 031C     		mov	r3, r0
 294 0012 2370     		strb	r3, [r4]
 331:.\Generated_Source\PSoC4/Timer_1.c **** 
 332:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_QUAD_MODE_MASK;
 295              		.loc 1 332 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 12


 296 0014 0A4B     		ldr	r3, .L18
 297 0016 0A4A     		ldr	r2, .L18
 298 0018 1268     		ldr	r2, [r2]
 299 001a 0A49     		ldr	r1, .L18+4
 300 001c 0A40     		and	r2, r1
 301 001e 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= qdMode;
 302              		.loc 1 333 0
 303 0020 074B     		ldr	r3, .L18
 304 0022 074A     		ldr	r2, .L18
 305 0024 1168     		ldr	r1, [r2]
 306 0026 7A68     		ldr	r2, [r7, #4]
 307 0028 0A43     		orr	r2, r1
 308 002a 1A60     		str	r2, [r3]
 334:.\Generated_Source\PSoC4/Timer_1.c **** 
 335:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 309              		.loc 1 335 0
 310 002c 0F23     		mov	r3, #15
 311 002e FB18     		add	r3, r7, r3
 312 0030 1B78     		ldrb	r3, [r3]
 313 0032 181C     		mov	r0, r3
 314 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:.\Generated_Source\PSoC4/Timer_1.c **** }
 315              		.loc 1 336 0
 316 0038 BD46     		mov	sp, r7
 317 003a 05B0     		add	sp, sp, #20
 318              		@ sp needed
 319 003c 90BD     		pop	{r4, r7, pc}
 320              	.L19:
 321 003e C046     		.align	2
 322              	.L18:
 323 0040 00012040 		.word	1075839232
 324 0044 FFFF8FFF 		.word	-7340033
 325              		.cfi_endproc
 326              	.LFE7:
 327              		.size	Timer_1_SetQDMode, .-Timer_1_SetQDMode
 328              		.section	.text.Timer_1_SetPrescaler,"ax",%progbits
 329              		.align	2
 330              		.global	Timer_1_SetPrescaler
 331              		.code	16
 332              		.thumb_func
 333              		.type	Timer_1_SetPrescaler, %function
 334              	Timer_1_SetPrescaler:
 335              	.LFB8:
 337:.\Generated_Source\PSoC4/Timer_1.c **** 
 338:.\Generated_Source\PSoC4/Timer_1.c **** 
 339:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPrescaler
 341:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/Timer_1.c **** *
 343:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 344:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/Timer_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/Timer_1.c **** *
 347:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 348:.\Generated_Source\PSoC4/Timer_1.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 13


 350:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/Timer_1.c **** *
 359:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 360:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 361:.\Generated_Source\PSoC4/Timer_1.c **** *
 362:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/Timer_1.c **** {
 336              		.loc 1 364 0
 337              		.cfi_startproc
 338 0000 90B5     		push	{r4, r7, lr}
 339              		.cfi_def_cfa_offset 12
 340              		.cfi_offset 4, -12
 341              		.cfi_offset 7, -8
 342              		.cfi_offset 14, -4
 343 0002 85B0     		sub	sp, sp, #20
 344              		.cfi_def_cfa_offset 32
 345 0004 00AF     		add	r7, sp, #0
 346              		.cfi_def_cfa_register 7
 347 0006 7860     		str	r0, [r7, #4]
 365:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/Timer_1.c **** 
 367:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 348              		.loc 1 367 0
 349 0008 0F23     		mov	r3, #15
 350 000a FC18     		add	r4, r7, r3
 351 000c FFF7FEFF 		bl	CyEnterCriticalSection
 352 0010 031C     		mov	r3, r0
 353 0012 2370     		strb	r3, [r4]
 368:.\Generated_Source\PSoC4/Timer_1.c **** 
 369:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_PRESCALER_MASK;
 354              		.loc 1 369 0
 355 0014 0A4B     		ldr	r3, .L21
 356 0016 0A4A     		ldr	r2, .L21
 357 0018 1268     		ldr	r2, [r2]
 358 001a 0A49     		ldr	r1, .L21+4
 359 001c 0A40     		and	r2, r1
 360 001e 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= prescaler;
 361              		.loc 1 370 0
 362 0020 074B     		ldr	r3, .L21
 363 0022 074A     		ldr	r2, .L21
 364 0024 1168     		ldr	r1, [r2]
 365 0026 7A68     		ldr	r2, [r7, #4]
 366 0028 0A43     		orr	r2, r1
 367 002a 1A60     		str	r2, [r3]
 371:.\Generated_Source\PSoC4/Timer_1.c **** 
 372:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 368              		.loc 1 372 0
 369 002c 0F23     		mov	r3, #15
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 14


 370 002e FB18     		add	r3, r7, r3
 371 0030 1B78     		ldrb	r3, [r3]
 372 0032 181C     		mov	r0, r3
 373 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:.\Generated_Source\PSoC4/Timer_1.c **** }
 374              		.loc 1 373 0
 375 0038 BD46     		mov	sp, r7
 376 003a 05B0     		add	sp, sp, #20
 377              		@ sp needed
 378 003c 90BD     		pop	{r4, r7, pc}
 379              	.L22:
 380 003e C046     		.align	2
 381              	.L21:
 382 0040 00012040 		.word	1075839232
 383 0044 FF00FFFF 		.word	-65281
 384              		.cfi_endproc
 385              	.LFE8:
 386              		.size	Timer_1_SetPrescaler, .-Timer_1_SetPrescaler
 387              		.section	.text.Timer_1_SetOneShot,"ax",%progbits
 388              		.align	2
 389              		.global	Timer_1_SetOneShot
 390              		.code	16
 391              		.thumb_func
 392              		.type	Timer_1_SetOneShot, %function
 393              	Timer_1_SetOneShot:
 394              	.LFB9:
 374:.\Generated_Source\PSoC4/Timer_1.c **** 
 375:.\Generated_Source\PSoC4/Timer_1.c **** 
 376:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetOneShot
 378:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/Timer_1.c **** *
 380:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 381:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the Timer_1 runs
 382:.\Generated_Source\PSoC4/Timer_1.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/Timer_1.c **** *  Timer_1 operates in the continuous mode.
 384:.\Generated_Source\PSoC4/Timer_1.c **** *
 385:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 386:.\Generated_Source\PSoC4/Timer_1.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
 388:.\Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/Timer_1.c **** *
 391:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 392:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 393:.\Generated_Source\PSoC4/Timer_1.c **** *
 394:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/Timer_1.c **** {
 395              		.loc 1 396 0
 396              		.cfi_startproc
 397 0000 90B5     		push	{r4, r7, lr}
 398              		.cfi_def_cfa_offset 12
 399              		.cfi_offset 4, -12
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 15


 403              		.cfi_def_cfa_offset 32
 404 0004 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 406 0006 7860     		str	r0, [r7, #4]
 397:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/Timer_1.c **** 
 399:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 407              		.loc 1 399 0
 408 0008 0F23     		mov	r3, #15
 409 000a FC18     		add	r4, r7, r3
 410 000c FFF7FEFF 		bl	CyEnterCriticalSection
 411 0010 031C     		mov	r3, r0
 412 0012 2370     		strb	r3, [r4]
 400:.\Generated_Source\PSoC4/Timer_1.c **** 
 401:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_ONESHOT_MASK;
 413              		.loc 1 401 0
 414 0014 0B4B     		ldr	r3, .L24
 415 0016 0B4A     		ldr	r2, .L24
 416 0018 1268     		ldr	r2, [r2]
 417 001a 0B49     		ldr	r1, .L24+4
 418 001c 0A40     		and	r2, r1
 419 001e 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1_1BIT_MASK) <<
 420              		.loc 1 402 0
 421 0020 084B     		ldr	r3, .L24
 422 0022 084A     		ldr	r2, .L24
 423 0024 1168     		ldr	r1, [r2]
 424 0026 7A68     		ldr	r2, [r7, #4]
 425 0028 0120     		mov	r0, #1
 426 002a 0240     		and	r2, r0
 427 002c 9204     		lsl	r2, r2, #18
 428 002e 0A43     		orr	r2, r1
 429 0030 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC4/Timer_1.c ****                                                                Timer_1_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/Timer_1.c **** 
 405:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 430              		.loc 1 405 0
 431 0032 0F23     		mov	r3, #15
 432 0034 FB18     		add	r3, r7, r3
 433 0036 1B78     		ldrb	r3, [r3]
 434 0038 181C     		mov	r0, r3
 435 003a FFF7FEFF 		bl	CyExitCriticalSection
 406:.\Generated_Source\PSoC4/Timer_1.c **** }
 436              		.loc 1 406 0
 437 003e BD46     		mov	sp, r7
 438 0040 05B0     		add	sp, sp, #20
 439              		@ sp needed
 440 0042 90BD     		pop	{r4, r7, pc}
 441              	.L25:
 442              		.align	2
 443              	.L24:
 444 0044 00012040 		.word	1075839232
 445 0048 FFFFFBFF 		.word	-262145
 446              		.cfi_endproc
 447              	.LFE9:
 448              		.size	Timer_1_SetOneShot, .-Timer_1_SetOneShot
 449              		.section	.text.Timer_1_SetPWMMode,"ax",%progbits
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 16


 450              		.align	2
 451              		.global	Timer_1_SetPWMMode
 452              		.code	16
 453              		.thumb_func
 454              		.type	Timer_1_SetPWMMode, %function
 455              	Timer_1_SetPWMMode:
 456              	.LFB10:
 407:.\Generated_Source\PSoC4/Timer_1.c **** 
 408:.\Generated_Source\PSoC4/Timer_1.c **** 
 409:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMMode
 411:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/Timer_1.c **** *
 413:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 414:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/Timer_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/Timer_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/Timer_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/Timer_1.c **** *  the mode.
 419:.\Generated_Source\PSoC4/Timer_1.c **** *
 420:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 421:.\Generated_Source\PSoC4/Timer_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/Timer_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
 424:.\Generated_Source\PSoC4/Timer_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/Timer_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/Timer_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/Timer_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/Timer_1.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/Timer_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/Timer_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/Timer_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/Timer_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/Timer_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/Timer_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/Timer_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/Timer_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/Timer_1.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/Timer_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/Timer_1.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/Timer_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/Timer_1.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/Timer_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/Timer_1.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/Timer_1.c **** *
 445:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 446:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 447:.\Generated_Source\PSoC4/Timer_1.c **** *
 448:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/Timer_1.c **** {
 457              		.loc 1 450 0
 458              		.cfi_startproc
 459 0000 80B5     		push	{r7, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 17


 463 0002 82B0     		sub	sp, sp, #8
 464              		.cfi_def_cfa_offset 16
 465 0004 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
 467 0006 7860     		str	r0, [r7, #4]
 451:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL2_REG = (modeMask & Timer_1_6BIT_MASK);
 468              		.loc 1 451 0
 469 0008 034B     		ldr	r3, .L27
 470 000a 7A68     		ldr	r2, [r7, #4]
 471 000c 3F21     		mov	r1, #63
 472 000e 0A40     		and	r2, r1
 473 0010 1A60     		str	r2, [r3]
 452:.\Generated_Source\PSoC4/Timer_1.c **** }
 474              		.loc 1 452 0
 475 0012 BD46     		mov	sp, r7
 476 0014 02B0     		add	sp, sp, #8
 477              		@ sp needed
 478 0016 80BD     		pop	{r7, pc}
 479              	.L28:
 480              		.align	2
 481              	.L27:
 482 0018 28012040 		.word	1075839272
 483              		.cfi_endproc
 484              	.LFE10:
 485              		.size	Timer_1_SetPWMMode, .-Timer_1_SetPWMMode
 486              		.section	.text.Timer_1_SetPWMSyncKill,"ax",%progbits
 487              		.align	2
 488              		.global	Timer_1_SetPWMSyncKill
 489              		.code	16
 490              		.thumb_func
 491              		.type	Timer_1_SetPWMSyncKill, %function
 492              	Timer_1_SetPWMSyncKill:
 493              	.LFB11:
 453:.\Generated_Source\PSoC4/Timer_1.c **** 
 454:.\Generated_Source\PSoC4/Timer_1.c **** 
 455:.\Generated_Source\PSoC4/Timer_1.c **** 
 456:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/Timer_1.c **** *
 460:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 461:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/Timer_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/Timer_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/Timer_1.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/Timer_1.c **** *
 466:.\Generated_Source\PSoC4/Timer_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/Timer_1.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/Timer_1.c **** *
 469:.\Generated_Source\PSoC4/Timer_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/Timer_1.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/Timer_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/Timer_1.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/Timer_1.c **** 
 474:.\Generated_Source\PSoC4/Timer_1.c **** *
 475:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 476:.\Generated_Source\PSoC4/Timer_1.c **** *  syncKillEnable
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 18


 477:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
 478:.\Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/Timer_1.c **** *
 481:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 482:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 483:.\Generated_Source\PSoC4/Timer_1.c **** *
 484:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/Timer_1.c **** {
 494              		.loc 1 486 0
 495              		.cfi_startproc
 496 0000 90B5     		push	{r4, r7, lr}
 497              		.cfi_def_cfa_offset 12
 498              		.cfi_offset 4, -12
 499              		.cfi_offset 7, -8
 500              		.cfi_offset 14, -4
 501 0002 85B0     		sub	sp, sp, #20
 502              		.cfi_def_cfa_offset 32
 503 0004 00AF     		add	r7, sp, #0
 504              		.cfi_def_cfa_register 7
 505 0006 7860     		str	r0, [r7, #4]
 487:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/Timer_1.c **** 
 489:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 506              		.loc 1 489 0
 507 0008 0F23     		mov	r3, #15
 508 000a FC18     		add	r4, r7, r3
 509 000c FFF7FEFF 		bl	CyEnterCriticalSection
 510 0010 031C     		mov	r3, r0
 511 0012 2370     		strb	r3, [r4]
 490:.\Generated_Source\PSoC4/Timer_1.c **** 
 491:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_PWM_SYNC_KILL_MASK;
 512              		.loc 1 491 0
 513 0014 0B4B     		ldr	r3, .L30
 514 0016 0B4A     		ldr	r2, .L30
 515 0018 1268     		ldr	r2, [r2]
 516 001a 0421     		mov	r1, #4
 517 001c 8A43     		bic	r2, r1
 518 001e 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1_1BIT_MASK)  <<
 519              		.loc 1 492 0
 520 0020 084B     		ldr	r3, .L30
 521 0022 084A     		ldr	r2, .L30
 522 0024 1168     		ldr	r1, [r2]
 523 0026 7A68     		ldr	r2, [r7, #4]
 524 0028 0120     		mov	r0, #1
 525 002a 0240     		and	r2, r0
 526 002c 9200     		lsl	r2, r2, #2
 527 002e 0A43     		orr	r2, r1
 528 0030 1A60     		str	r2, [r3]
 493:.\Generated_Source\PSoC4/Timer_1.c ****                                                Timer_1_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/Timer_1.c **** 
 495:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 529              		.loc 1 495 0
 530 0032 0F23     		mov	r3, #15
 531 0034 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 19


 532 0036 1B78     		ldrb	r3, [r3]
 533 0038 181C     		mov	r0, r3
 534 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:.\Generated_Source\PSoC4/Timer_1.c **** }
 535              		.loc 1 496 0
 536 003e BD46     		mov	sp, r7
 537 0040 05B0     		add	sp, sp, #20
 538              		@ sp needed
 539 0042 90BD     		pop	{r4, r7, pc}
 540              	.L31:
 541              		.align	2
 542              	.L30:
 543 0044 00012040 		.word	1075839232
 544              		.cfi_endproc
 545              	.LFE11:
 546              		.size	Timer_1_SetPWMSyncKill, .-Timer_1_SetPWMSyncKill
 547              		.section	.text.Timer_1_SetPWMStopOnKill,"ax",%progbits
 548              		.align	2
 549              		.global	Timer_1_SetPWMStopOnKill
 550              		.code	16
 551              		.thumb_func
 552              		.type	Timer_1_SetPWMStopOnKill, %function
 553              	Timer_1_SetPWMStopOnKill:
 554              	.LFB12:
 497:.\Generated_Source\PSoC4/Timer_1.c **** 
 498:.\Generated_Source\PSoC4/Timer_1.c **** 
 499:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/Timer_1.c **** *
 503:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 504:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/Timer_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/Timer_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/Timer_1.c **** *
 508:.\Generated_Source\PSoC4/Timer_1.c **** *
 509:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 510:.\Generated_Source\PSoC4/Timer_1.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
 512:.\Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/Timer_1.c **** *
 515:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 516:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 517:.\Generated_Source\PSoC4/Timer_1.c **** *
 518:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/Timer_1.c **** {
 555              		.loc 1 520 0
 556              		.cfi_startproc
 557 0000 90B5     		push	{r4, r7, lr}
 558              		.cfi_def_cfa_offset 12
 559              		.cfi_offset 4, -12
 560              		.cfi_offset 7, -8
 561              		.cfi_offset 14, -4
 562 0002 85B0     		sub	sp, sp, #20
 563              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 20


 564 0004 00AF     		add	r7, sp, #0
 565              		.cfi_def_cfa_register 7
 566 0006 7860     		str	r0, [r7, #4]
 521:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/Timer_1.c **** 
 523:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 567              		.loc 1 523 0
 568 0008 0F23     		mov	r3, #15
 569 000a FC18     		add	r4, r7, r3
 570 000c FFF7FEFF 		bl	CyEnterCriticalSection
 571 0010 031C     		mov	r3, r0
 572 0012 2370     		strb	r3, [r4]
 524:.\Generated_Source\PSoC4/Timer_1.c **** 
 525:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_PWM_STOP_KILL_MASK;
 573              		.loc 1 525 0
 574 0014 0B4B     		ldr	r3, .L33
 575 0016 0B4A     		ldr	r2, .L33
 576 0018 1268     		ldr	r2, [r2]
 577 001a 0821     		mov	r1, #8
 578 001c 8A43     		bic	r2, r1
 579 001e 1A60     		str	r2, [r3]
 526:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1_1BIT_MASK)  <<
 580              		.loc 1 526 0
 581 0020 084B     		ldr	r3, .L33
 582 0022 084A     		ldr	r2, .L33
 583 0024 1168     		ldr	r1, [r2]
 584 0026 7A68     		ldr	r2, [r7, #4]
 585 0028 0120     		mov	r0, #1
 586 002a 0240     		and	r2, r0
 587 002c D200     		lsl	r2, r2, #3
 588 002e 0A43     		orr	r2, r1
 589 0030 1A60     		str	r2, [r3]
 527:.\Generated_Source\PSoC4/Timer_1.c ****                                                          Timer_1_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/Timer_1.c **** 
 529:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 590              		.loc 1 529 0
 591 0032 0F23     		mov	r3, #15
 592 0034 FB18     		add	r3, r7, r3
 593 0036 1B78     		ldrb	r3, [r3]
 594 0038 181C     		mov	r0, r3
 595 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:.\Generated_Source\PSoC4/Timer_1.c **** }
 596              		.loc 1 530 0
 597 003e BD46     		mov	sp, r7
 598 0040 05B0     		add	sp, sp, #20
 599              		@ sp needed
 600 0042 90BD     		pop	{r4, r7, pc}
 601              	.L34:
 602              		.align	2
 603              	.L33:
 604 0044 00012040 		.word	1075839232
 605              		.cfi_endproc
 606              	.LFE12:
 607              		.size	Timer_1_SetPWMStopOnKill, .-Timer_1_SetPWMStopOnKill
 608              		.section	.text.Timer_1_SetPWMDeadTime,"ax",%progbits
 609              		.align	2
 610              		.global	Timer_1_SetPWMDeadTime
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 21


 611              		.code	16
 612              		.thumb_func
 613              		.type	Timer_1_SetPWMDeadTime, %function
 614              	Timer_1_SetPWMDeadTime:
 615              	.LFB13:
 531:.\Generated_Source\PSoC4/Timer_1.c **** 
 532:.\Generated_Source\PSoC4/Timer_1.c **** 
 533:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/Timer_1.c **** *
 537:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 538:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/Timer_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/Timer_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/Timer_1.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/Timer_1.c **** 
 543:.\Generated_Source\PSoC4/Timer_1.c **** *
 544:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 545:.\Generated_Source\PSoC4/Timer_1.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/Timer_1.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/Timer_1.c **** *
 548:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 549:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 550:.\Generated_Source\PSoC4/Timer_1.c **** *
 551:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/Timer_1.c **** {
 616              		.loc 1 553 0
 617              		.cfi_startproc
 618 0000 90B5     		push	{r4, r7, lr}
 619              		.cfi_def_cfa_offset 12
 620              		.cfi_offset 4, -12
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 85B0     		sub	sp, sp, #20
 624              		.cfi_def_cfa_offset 32
 625 0004 00AF     		add	r7, sp, #0
 626              		.cfi_def_cfa_register 7
 627 0006 7860     		str	r0, [r7, #4]
 554:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/Timer_1.c **** 
 556:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 628              		.loc 1 556 0
 629 0008 0F23     		mov	r3, #15
 630 000a FC18     		add	r4, r7, r3
 631 000c FFF7FEFF 		bl	CyEnterCriticalSection
 632 0010 031C     		mov	r3, r0
 633 0012 2370     		strb	r3, [r4]
 557:.\Generated_Source\PSoC4/Timer_1.c **** 
 558:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_PRESCALER_MASK;
 634              		.loc 1 558 0
 635 0014 0B4B     		ldr	r3, .L36
 636 0016 0B4A     		ldr	r2, .L36
 637 0018 1268     		ldr	r2, [r2]
 638 001a 0B49     		ldr	r1, .L36+4
 639 001c 0A40     		and	r2, r1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 22


 640 001e 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((deadTime & Timer_1_8BIT_MASK) <<
 641              		.loc 1 559 0
 642 0020 084B     		ldr	r3, .L36
 643 0022 084A     		ldr	r2, .L36
 644 0024 1168     		ldr	r1, [r2]
 645 0026 7A68     		ldr	r2, [r7, #4]
 646 0028 1202     		lsl	r2, r2, #8
 647 002a 1204     		lsl	r2, r2, #16
 648 002c 120C     		lsr	r2, r2, #16
 649 002e 0A43     		orr	r2, r1
 650 0030 1A60     		str	r2, [r3]
 560:.\Generated_Source\PSoC4/Timer_1.c ****                                                           Timer_1_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/Timer_1.c **** 
 562:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 651              		.loc 1 562 0
 652 0032 0F23     		mov	r3, #15
 653 0034 FB18     		add	r3, r7, r3
 654 0036 1B78     		ldrb	r3, [r3]
 655 0038 181C     		mov	r0, r3
 656 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:.\Generated_Source\PSoC4/Timer_1.c **** }
 657              		.loc 1 563 0
 658 003e BD46     		mov	sp, r7
 659 0040 05B0     		add	sp, sp, #20
 660              		@ sp needed
 661 0042 90BD     		pop	{r4, r7, pc}
 662              	.L37:
 663              		.align	2
 664              	.L36:
 665 0044 00012040 		.word	1075839232
 666 0048 FF00FFFF 		.word	-65281
 667              		.cfi_endproc
 668              	.LFE13:
 669              		.size	Timer_1_SetPWMDeadTime, .-Timer_1_SetPWMDeadTime
 670              		.section	.text.Timer_1_SetPWMInvert,"ax",%progbits
 671              		.align	2
 672              		.global	Timer_1_SetPWMInvert
 673              		.code	16
 674              		.thumb_func
 675              		.type	Timer_1_SetPWMInvert, %function
 676              	Timer_1_SetPWMInvert:
 677              	.LFB14:
 564:.\Generated_Source\PSoC4/Timer_1.c **** 
 565:.\Generated_Source\PSoC4/Timer_1.c **** 
 566:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMInvert
 568:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/Timer_1.c **** *
 570:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 571:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/Timer_1.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/Timer_1.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/Timer_1.c **** *
 575:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 576:.\Generated_Source\PSoC4/Timer_1.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 23


 578:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/Timer_1.c **** *
 581:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 582:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 583:.\Generated_Source\PSoC4/Timer_1.c **** *
 584:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/Timer_1.c **** {
 678              		.loc 1 586 0
 679              		.cfi_startproc
 680 0000 90B5     		push	{r4, r7, lr}
 681              		.cfi_def_cfa_offset 12
 682              		.cfi_offset 4, -12
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 85B0     		sub	sp, sp, #20
 686              		.cfi_def_cfa_offset 32
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 689 0006 7860     		str	r0, [r7, #4]
 587:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/Timer_1.c **** 
 589:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 690              		.loc 1 589 0
 691 0008 0F23     		mov	r3, #15
 692 000a FC18     		add	r4, r7, r3
 693 000c FFF7FEFF 		bl	CyEnterCriticalSection
 694 0010 031C     		mov	r3, r0
 695 0012 2370     		strb	r3, [r4]
 590:.\Generated_Source\PSoC4/Timer_1.c **** 
 591:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_INV_OUT_MASK;
 696              		.loc 1 591 0
 697 0014 0A4B     		ldr	r3, .L39
 698 0016 0A4A     		ldr	r2, .L39
 699 0018 1268     		ldr	r2, [r2]
 700 001a 0A49     		ldr	r1, .L39+4
 701 001c 0A40     		and	r2, r1
 702 001e 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= mask;
 703              		.loc 1 592 0
 704 0020 074B     		ldr	r3, .L39
 705 0022 074A     		ldr	r2, .L39
 706 0024 1168     		ldr	r1, [r2]
 707 0026 7A68     		ldr	r2, [r7, #4]
 708 0028 0A43     		orr	r2, r1
 709 002a 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC4/Timer_1.c **** 
 594:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 710              		.loc 1 594 0
 711 002c 0F23     		mov	r3, #15
 712 002e FB18     		add	r3, r7, r3
 713 0030 1B78     		ldrb	r3, [r3]
 714 0032 181C     		mov	r0, r3
 715 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:.\Generated_Source\PSoC4/Timer_1.c **** }
 716              		.loc 1 595 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 24


 717 0038 BD46     		mov	sp, r7
 718 003a 05B0     		add	sp, sp, #20
 719              		@ sp needed
 720 003c 90BD     		pop	{r4, r7, pc}
 721              	.L40:
 722 003e C046     		.align	2
 723              	.L39:
 724 0040 00012040 		.word	1075839232
 725 0044 FFFFCFFF 		.word	-3145729
 726              		.cfi_endproc
 727              	.LFE14:
 728              		.size	Timer_1_SetPWMInvert, .-Timer_1_SetPWMInvert
 729              		.section	.text.Timer_1_WriteCounter,"ax",%progbits
 730              		.align	2
 731              		.global	Timer_1_WriteCounter
 732              		.code	16
 733              		.thumb_func
 734              		.type	Timer_1_WriteCounter, %function
 735              	Timer_1_WriteCounter:
 736              	.LFB15:
 596:.\Generated_Source\PSoC4/Timer_1.c **** 
 597:.\Generated_Source\PSoC4/Timer_1.c **** 
 598:.\Generated_Source\PSoC4/Timer_1.c **** 
 599:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WriteCounter
 601:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/Timer_1.c **** *
 603:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 604:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/Timer_1.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/Timer_1.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/Timer_1.c **** *
 608:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 609:.\Generated_Source\PSoC4/Timer_1.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/Timer_1.c **** *
 611:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 612:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 613:.\Generated_Source\PSoC4/Timer_1.c **** *
 614:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/Timer_1.c **** {
 737              		.loc 1 616 0
 738              		.cfi_startproc
 739 0000 80B5     		push	{r7, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 82B0     		sub	sp, sp, #8
 744              		.cfi_def_cfa_offset 16
 745 0004 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 747 0006 7860     		str	r0, [r7, #4]
 617:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_COUNTER_REG = (count & Timer_1_16BIT_MASK);
 748              		.loc 1 617 0
 749 0008 034B     		ldr	r3, .L42
 750 000a 7A68     		ldr	r2, [r7, #4]
 751 000c 1204     		lsl	r2, r2, #16
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 25


 752 000e 120C     		lsr	r2, r2, #16
 753 0010 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/Timer_1.c **** }
 754              		.loc 1 618 0
 755 0012 BD46     		mov	sp, r7
 756 0014 02B0     		add	sp, sp, #8
 757              		@ sp needed
 758 0016 80BD     		pop	{r7, pc}
 759              	.L43:
 760              		.align	2
 761              	.L42:
 762 0018 08012040 		.word	1075839240
 763              		.cfi_endproc
 764              	.LFE15:
 765              		.size	Timer_1_WriteCounter, .-Timer_1_WriteCounter
 766              		.section	.text.Timer_1_ReadCounter,"ax",%progbits
 767              		.align	2
 768              		.global	Timer_1_ReadCounter
 769              		.code	16
 770              		.thumb_func
 771              		.type	Timer_1_ReadCounter, %function
 772              	Timer_1_ReadCounter:
 773              	.LFB16:
 619:.\Generated_Source\PSoC4/Timer_1.c **** 
 620:.\Generated_Source\PSoC4/Timer_1.c **** 
 621:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCounter
 623:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/Timer_1.c **** *
 625:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 626:.\Generated_Source\PSoC4/Timer_1.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/Timer_1.c **** *
 628:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 629:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 630:.\Generated_Source\PSoC4/Timer_1.c **** *
 631:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 632:.\Generated_Source\PSoC4/Timer_1.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/Timer_1.c **** *
 634:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCounter(void)
 636:.\Generated_Source\PSoC4/Timer_1.c **** {
 774              		.loc 1 636 0
 775              		.cfi_startproc
 776 0000 80B5     		push	{r7, lr}
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 7, -8
 779              		.cfi_offset 14, -4
 780 0002 00AF     		add	r7, sp, #0
 781              		.cfi_def_cfa_register 7
 637:.\Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_COUNTER_REG & Timer_1_16BIT_MASK);
 782              		.loc 1 637 0
 783 0004 034B     		ldr	r3, .L46
 784 0006 1B68     		ldr	r3, [r3]
 785 0008 1B04     		lsl	r3, r3, #16
 786 000a 1B0C     		lsr	r3, r3, #16
 638:.\Generated_Source\PSoC4/Timer_1.c **** }
 787              		.loc 1 638 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 26


 788 000c 181C     		mov	r0, r3
 789 000e BD46     		mov	sp, r7
 790              		@ sp needed
 791 0010 80BD     		pop	{r7, pc}
 792              	.L47:
 793 0012 C046     		.align	2
 794              	.L46:
 795 0014 08012040 		.word	1075839240
 796              		.cfi_endproc
 797              	.LFE16:
 798              		.size	Timer_1_ReadCounter, .-Timer_1_ReadCounter
 799              		.section	.text.Timer_1_SetCounterMode,"ax",%progbits
 800              		.align	2
 801              		.global	Timer_1_SetCounterMode
 802              		.code	16
 803              		.thumb_func
 804              		.type	Timer_1_SetCounterMode, %function
 805              	Timer_1_SetCounterMode:
 806              	.LFB17:
 639:.\Generated_Source\PSoC4/Timer_1.c **** 
 640:.\Generated_Source\PSoC4/Timer_1.c **** 
 641:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCounterMode
 643:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/Timer_1.c **** *
 645:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 646:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/Timer_1.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/Timer_1.c **** *
 649:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 650:.\Generated_Source\PSoC4/Timer_1.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
 652:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/Timer_1.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/Timer_1.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/Timer_1.c **** *                                         and period
 659:.\Generated_Source\PSoC4/Timer_1.c **** *
 660:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 661:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 662:.\Generated_Source\PSoC4/Timer_1.c **** *
 663:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/Timer_1.c **** {
 807              		.loc 1 665 0
 808              		.cfi_startproc
 809 0000 90B5     		push	{r4, r7, lr}
 810              		.cfi_def_cfa_offset 12
 811              		.cfi_offset 4, -12
 812              		.cfi_offset 7, -8
 813              		.cfi_offset 14, -4
 814 0002 85B0     		sub	sp, sp, #20
 815              		.cfi_def_cfa_offset 32
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 27


 818 0006 7860     		str	r0, [r7, #4]
 666:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/Timer_1.c **** 
 668:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 819              		.loc 1 668 0
 820 0008 0F23     		mov	r3, #15
 821 000a FC18     		add	r4, r7, r3
 822 000c FFF7FEFF 		bl	CyEnterCriticalSection
 823 0010 031C     		mov	r3, r0
 824 0012 2370     		strb	r3, [r4]
 669:.\Generated_Source\PSoC4/Timer_1.c **** 
 670:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_UPDOWN_MASK;
 825              		.loc 1 670 0
 826 0014 0A4B     		ldr	r3, .L49
 827 0016 0A4A     		ldr	r2, .L49
 828 0018 1268     		ldr	r2, [r2]
 829 001a 0A49     		ldr	r1, .L49+4
 830 001c 0A40     		and	r2, r1
 831 001e 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= counterMode;
 832              		.loc 1 671 0
 833 0020 074B     		ldr	r3, .L49
 834 0022 074A     		ldr	r2, .L49
 835 0024 1168     		ldr	r1, [r2]
 836 0026 7A68     		ldr	r2, [r7, #4]
 837 0028 0A43     		orr	r2, r1
 838 002a 1A60     		str	r2, [r3]
 672:.\Generated_Source\PSoC4/Timer_1.c **** 
 673:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 839              		.loc 1 673 0
 840 002c 0F23     		mov	r3, #15
 841 002e FB18     		add	r3, r7, r3
 842 0030 1B78     		ldrb	r3, [r3]
 843 0032 181C     		mov	r0, r3
 844 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:.\Generated_Source\PSoC4/Timer_1.c **** }
 845              		.loc 1 674 0
 846 0038 BD46     		mov	sp, r7
 847 003a 05B0     		add	sp, sp, #20
 848              		@ sp needed
 849 003c 90BD     		pop	{r4, r7, pc}
 850              	.L50:
 851 003e C046     		.align	2
 852              	.L49:
 853 0040 00012040 		.word	1075839232
 854 0044 FFFFFCFF 		.word	-196609
 855              		.cfi_endproc
 856              	.LFE17:
 857              		.size	Timer_1_SetCounterMode, .-Timer_1_SetCounterMode
 858              		.section	.text.Timer_1_WritePeriod,"ax",%progbits
 859              		.align	2
 860              		.global	Timer_1_WritePeriod
 861              		.code	16
 862              		.thumb_func
 863              		.type	Timer_1_WritePeriod, %function
 864              	Timer_1_WritePeriod:
 865              	.LFB18:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 28


 675:.\Generated_Source\PSoC4/Timer_1.c **** 
 676:.\Generated_Source\PSoC4/Timer_1.c **** 
 677:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WritePeriod
 679:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/Timer_1.c **** *
 681:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 682:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/Timer_1.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/Timer_1.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/Timer_1.c **** *
 686:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 687:.\Generated_Source\PSoC4/Timer_1.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/Timer_1.c **** *
 689:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 690:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 691:.\Generated_Source\PSoC4/Timer_1.c **** *
 692:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/Timer_1.c **** {
 866              		.loc 1 694 0
 867              		.cfi_startproc
 868 0000 80B5     		push	{r7, lr}
 869              		.cfi_def_cfa_offset 8
 870              		.cfi_offset 7, -8
 871              		.cfi_offset 14, -4
 872 0002 82B0     		sub	sp, sp, #8
 873              		.cfi_def_cfa_offset 16
 874 0004 00AF     		add	r7, sp, #0
 875              		.cfi_def_cfa_register 7
 876 0006 7860     		str	r0, [r7, #4]
 695:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_PERIOD_REG = (period & Timer_1_16BIT_MASK);
 877              		.loc 1 695 0
 878 0008 034B     		ldr	r3, .L52
 879 000a 7A68     		ldr	r2, [r7, #4]
 880 000c 1204     		lsl	r2, r2, #16
 881 000e 120C     		lsr	r2, r2, #16
 882 0010 1A60     		str	r2, [r3]
 696:.\Generated_Source\PSoC4/Timer_1.c **** }
 883              		.loc 1 696 0
 884 0012 BD46     		mov	sp, r7
 885 0014 02B0     		add	sp, sp, #8
 886              		@ sp needed
 887 0016 80BD     		pop	{r7, pc}
 888              	.L53:
 889              		.align	2
 890              	.L52:
 891 0018 14012040 		.word	1075839252
 892              		.cfi_endproc
 893              	.LFE18:
 894              		.size	Timer_1_WritePeriod, .-Timer_1_WritePeriod
 895              		.section	.text.Timer_1_ReadPeriod,"ax",%progbits
 896              		.align	2
 897              		.global	Timer_1_ReadPeriod
 898              		.code	16
 899              		.thumb_func
 900              		.type	Timer_1_ReadPeriod, %function
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 29


 901              	Timer_1_ReadPeriod:
 902              	.LFB19:
 697:.\Generated_Source\PSoC4/Timer_1.c **** 
 698:.\Generated_Source\PSoC4/Timer_1.c **** 
 699:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadPeriod
 701:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/Timer_1.c **** *
 703:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 704:.\Generated_Source\PSoC4/Timer_1.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/Timer_1.c **** *
 706:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 707:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 708:.\Generated_Source\PSoC4/Timer_1.c **** *
 709:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 710:.\Generated_Source\PSoC4/Timer_1.c **** *  Period value
 711:.\Generated_Source\PSoC4/Timer_1.c **** *
 712:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/Timer_1.c **** {
 903              		.loc 1 714 0
 904              		.cfi_startproc
 905 0000 80B5     		push	{r7, lr}
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 7, -8
 908              		.cfi_offset 14, -4
 909 0002 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 715:.\Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_PERIOD_REG & Timer_1_16BIT_MASK);
 911              		.loc 1 715 0
 912 0004 034B     		ldr	r3, .L56
 913 0006 1B68     		ldr	r3, [r3]
 914 0008 1B04     		lsl	r3, r3, #16
 915 000a 1B0C     		lsr	r3, r3, #16
 716:.\Generated_Source\PSoC4/Timer_1.c **** }
 916              		.loc 1 716 0
 917 000c 181C     		mov	r0, r3
 918 000e BD46     		mov	sp, r7
 919              		@ sp needed
 920 0010 80BD     		pop	{r7, pc}
 921              	.L57:
 922 0012 C046     		.align	2
 923              	.L56:
 924 0014 14012040 		.word	1075839252
 925              		.cfi_endproc
 926              	.LFE19:
 927              		.size	Timer_1_ReadPeriod, .-Timer_1_ReadPeriod
 928              		.section	.text.Timer_1_SetCompareSwap,"ax",%progbits
 929              		.align	2
 930              		.global	Timer_1_SetCompareSwap
 931              		.code	16
 932              		.thumb_func
 933              		.type	Timer_1_SetCompareSwap, %function
 934              	Timer_1_SetCompareSwap:
 935              	.LFB20:
 717:.\Generated_Source\PSoC4/Timer_1.c **** 
 718:.\Generated_Source\PSoC4/Timer_1.c **** 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 30


 719:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCompareSwap
 721:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/Timer_1.c **** *
 723:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 724:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/Timer_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/Timer_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/Timer_1.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/Timer_1.c **** *
 729:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 730:.\Generated_Source\PSoC4/Timer_1.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
 732:.\Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/Timer_1.c **** *
 735:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 736:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 737:.\Generated_Source\PSoC4/Timer_1.c **** *
 738:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/Timer_1.c **** {
 936              		.loc 1 740 0
 937              		.cfi_startproc
 938 0000 90B5     		push	{r4, r7, lr}
 939              		.cfi_def_cfa_offset 12
 940              		.cfi_offset 4, -12
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 85B0     		sub	sp, sp, #20
 944              		.cfi_def_cfa_offset 32
 945 0004 00AF     		add	r7, sp, #0
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
 741:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/Timer_1.c **** 
 743:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 948              		.loc 1 743 0
 949 0008 0F23     		mov	r3, #15
 950 000a FC18     		add	r4, r7, r3
 951 000c FFF7FEFF 		bl	CyEnterCriticalSection
 952 0010 031C     		mov	r3, r0
 953 0012 2370     		strb	r3, [r4]
 744:.\Generated_Source\PSoC4/Timer_1.c **** 
 745:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_RELOAD_CC_MASK;
 954              		.loc 1 745 0
 955 0014 0B4B     		ldr	r3, .L59
 956 0016 0B4A     		ldr	r2, .L59
 957 0018 1268     		ldr	r2, [r2]
 958 001a 0121     		mov	r1, #1
 959 001c 8A43     		bic	r2, r1
 960 001e 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= (swapEnable & Timer_1_1BIT_MASK);
 961              		.loc 1 746 0
 962 0020 084B     		ldr	r3, .L59
 963 0022 084A     		ldr	r2, .L59
 964 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 31


 965 0026 7A68     		ldr	r2, [r7, #4]
 966 0028 0120     		mov	r0, #1
 967 002a 0240     		and	r2, r0
 968 002c 0A43     		orr	r2, r1
 969 002e 1A60     		str	r2, [r3]
 747:.\Generated_Source\PSoC4/Timer_1.c **** 
 748:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 970              		.loc 1 748 0
 971 0030 0F23     		mov	r3, #15
 972 0032 FB18     		add	r3, r7, r3
 973 0034 1B78     		ldrb	r3, [r3]
 974 0036 181C     		mov	r0, r3
 975 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:.\Generated_Source\PSoC4/Timer_1.c **** }
 976              		.loc 1 749 0
 977 003c BD46     		mov	sp, r7
 978 003e 05B0     		add	sp, sp, #20
 979              		@ sp needed
 980 0040 90BD     		pop	{r4, r7, pc}
 981              	.L60:
 982 0042 C046     		.align	2
 983              	.L59:
 984 0044 00012040 		.word	1075839232
 985              		.cfi_endproc
 986              	.LFE20:
 987              		.size	Timer_1_SetCompareSwap, .-Timer_1_SetCompareSwap
 988              		.section	.text.Timer_1_WritePeriodBuf,"ax",%progbits
 989              		.align	2
 990              		.global	Timer_1_WritePeriodBuf
 991              		.code	16
 992              		.thumb_func
 993              		.type	Timer_1_WritePeriodBuf, %function
 994              	Timer_1_WritePeriodBuf:
 995              	.LFB21:
 750:.\Generated_Source\PSoC4/Timer_1.c **** 
 751:.\Generated_Source\PSoC4/Timer_1.c **** 
 752:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WritePeriodBuf
 754:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/Timer_1.c **** *
 756:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 757:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/Timer_1.c **** *
 759:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 760:.\Generated_Source\PSoC4/Timer_1.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/Timer_1.c **** *
 762:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 763:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 764:.\Generated_Source\PSoC4/Timer_1.c **** *
 765:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/Timer_1.c **** {
 996              		.loc 1 767 0
 997              		.cfi_startproc
 998 0000 80B5     		push	{r7, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 7, -8
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 32


 1001              		.cfi_offset 14, -4
 1002 0002 82B0     		sub	sp, sp, #8
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 1006 0006 7860     		str	r0, [r7, #4]
 768:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_PERIOD_BUF_REG = (periodBuf & Timer_1_16BIT_MASK);
 1007              		.loc 1 768 0
 1008 0008 034B     		ldr	r3, .L62
 1009 000a 7A68     		ldr	r2, [r7, #4]
 1010 000c 1204     		lsl	r2, r2, #16
 1011 000e 120C     		lsr	r2, r2, #16
 1012 0010 1A60     		str	r2, [r3]
 769:.\Generated_Source\PSoC4/Timer_1.c **** }
 1013              		.loc 1 769 0
 1014 0012 BD46     		mov	sp, r7
 1015 0014 02B0     		add	sp, sp, #8
 1016              		@ sp needed
 1017 0016 80BD     		pop	{r7, pc}
 1018              	.L63:
 1019              		.align	2
 1020              	.L62:
 1021 0018 18012040 		.word	1075839256
 1022              		.cfi_endproc
 1023              	.LFE21:
 1024              		.size	Timer_1_WritePeriodBuf, .-Timer_1_WritePeriodBuf
 1025              		.section	.text.Timer_1_ReadPeriodBuf,"ax",%progbits
 1026              		.align	2
 1027              		.global	Timer_1_ReadPeriodBuf
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	Timer_1_ReadPeriodBuf, %function
 1031              	Timer_1_ReadPeriodBuf:
 1032              	.LFB22:
 770:.\Generated_Source\PSoC4/Timer_1.c **** 
 771:.\Generated_Source\PSoC4/Timer_1.c **** 
 772:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/Timer_1.c **** *
 776:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 777:.\Generated_Source\PSoC4/Timer_1.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/Timer_1.c **** *
 779:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 780:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 781:.\Generated_Source\PSoC4/Timer_1.c **** *
 782:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 783:.\Generated_Source\PSoC4/Timer_1.c **** *  Period value
 784:.\Generated_Source\PSoC4/Timer_1.c **** *
 785:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/Timer_1.c **** {
 1033              		.loc 1 787 0
 1034              		.cfi_startproc
 1035 0000 80B5     		push	{r7, lr}
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 7, -8
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 33


 1038              		.cfi_offset 14, -4
 1039 0002 00AF     		add	r7, sp, #0
 1040              		.cfi_def_cfa_register 7
 788:.\Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_PERIOD_BUF_REG & Timer_1_16BIT_MASK);
 1041              		.loc 1 788 0
 1042 0004 034B     		ldr	r3, .L66
 1043 0006 1B68     		ldr	r3, [r3]
 1044 0008 1B04     		lsl	r3, r3, #16
 1045 000a 1B0C     		lsr	r3, r3, #16
 789:.\Generated_Source\PSoC4/Timer_1.c **** }
 1046              		.loc 1 789 0
 1047 000c 181C     		mov	r0, r3
 1048 000e BD46     		mov	sp, r7
 1049              		@ sp needed
 1050 0010 80BD     		pop	{r7, pc}
 1051              	.L67:
 1052 0012 C046     		.align	2
 1053              	.L66:
 1054 0014 18012040 		.word	1075839256
 1055              		.cfi_endproc
 1056              	.LFE22:
 1057              		.size	Timer_1_ReadPeriodBuf, .-Timer_1_ReadPeriodBuf
 1058              		.section	.text.Timer_1_SetPeriodSwap,"ax",%progbits
 1059              		.align	2
 1060              		.global	Timer_1_SetPeriodSwap
 1061              		.code	16
 1062              		.thumb_func
 1063              		.type	Timer_1_SetPeriodSwap, %function
 1064              	Timer_1_SetPeriodSwap:
 1065              	.LFB23:
 790:.\Generated_Source\PSoC4/Timer_1.c **** 
 791:.\Generated_Source\PSoC4/Timer_1.c **** 
 792:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPeriodSwap
 794:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/Timer_1.c **** *
 796:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 797:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/Timer_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/Timer_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/Timer_1.c **** *  switch event.
 801:.\Generated_Source\PSoC4/Timer_1.c **** *
 802:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 803:.\Generated_Source\PSoC4/Timer_1.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
 805:.\Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/Timer_1.c **** *
 808:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 809:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 810:.\Generated_Source\PSoC4/Timer_1.c **** *
 811:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/Timer_1.c **** {
 1066              		.loc 1 813 0
 1067              		.cfi_startproc
 1068 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 34


 1069              		.cfi_def_cfa_offset 12
 1070              		.cfi_offset 4, -12
 1071              		.cfi_offset 7, -8
 1072              		.cfi_offset 14, -4
 1073 0002 85B0     		sub	sp, sp, #20
 1074              		.cfi_def_cfa_offset 32
 1075 0004 00AF     		add	r7, sp, #0
 1076              		.cfi_def_cfa_register 7
 1077 0006 7860     		str	r0, [r7, #4]
 814:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/Timer_1.c **** 
 816:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 816 0
 1079 0008 0F23     		mov	r3, #15
 1080 000a FC18     		add	r4, r7, r3
 1081 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1082 0010 031C     		mov	r3, r0
 1083 0012 2370     		strb	r3, [r4]
 817:.\Generated_Source\PSoC4/Timer_1.c **** 
 818:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_RELOAD_PERIOD_MASK;
 1084              		.loc 1 818 0
 1085 0014 0B4B     		ldr	r3, .L69
 1086 0016 0B4A     		ldr	r2, .L69
 1087 0018 1268     		ldr	r2, [r2]
 1088 001a 0221     		mov	r1, #2
 1089 001c 8A43     		bic	r2, r1
 1090 001e 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((swapEnable & Timer_1_1BIT_MASK) <<
 1091              		.loc 1 819 0
 1092 0020 084B     		ldr	r3, .L69
 1093 0022 084A     		ldr	r2, .L69
 1094 0024 1168     		ldr	r1, [r2]
 1095 0026 7A68     		ldr	r2, [r7, #4]
 1096 0028 0120     		mov	r0, #1
 1097 002a 0240     		and	r2, r0
 1098 002c 5200     		lsl	r2, r2, #1
 1099 002e 0A43     		orr	r2, r1
 1100 0030 1A60     		str	r2, [r3]
 820:.\Generated_Source\PSoC4/Timer_1.c ****                                                             Timer_1_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/Timer_1.c **** 
 822:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1101              		.loc 1 822 0
 1102 0032 0F23     		mov	r3, #15
 1103 0034 FB18     		add	r3, r7, r3
 1104 0036 1B78     		ldrb	r3, [r3]
 1105 0038 181C     		mov	r0, r3
 1106 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:.\Generated_Source\PSoC4/Timer_1.c **** }
 1107              		.loc 1 823 0
 1108 003e BD46     		mov	sp, r7
 1109 0040 05B0     		add	sp, sp, #20
 1110              		@ sp needed
 1111 0042 90BD     		pop	{r4, r7, pc}
 1112              	.L70:
 1113              		.align	2
 1114              	.L69:
 1115 0044 00012040 		.word	1075839232
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 35


 1116              		.cfi_endproc
 1117              	.LFE23:
 1118              		.size	Timer_1_SetPeriodSwap, .-Timer_1_SetPeriodSwap
 1119              		.section	.text.Timer_1_WriteCompare,"ax",%progbits
 1120              		.align	2
 1121              		.global	Timer_1_WriteCompare
 1122              		.code	16
 1123              		.thumb_func
 1124              		.type	Timer_1_WriteCompare, %function
 1125              	Timer_1_WriteCompare:
 1126              	.LFB24:
 824:.\Generated_Source\PSoC4/Timer_1.c **** 
 825:.\Generated_Source\PSoC4/Timer_1.c **** 
 826:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WriteCompare
 828:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/Timer_1.c **** *
 830:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 831:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/Timer_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/Timer_1.c **** *
 834:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 835:.\Generated_Source\PSoC4/Timer_1.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/Timer_1.c **** *
 837:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 838:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 839:.\Generated_Source\PSoC4/Timer_1.c **** *
 840:.\Generated_Source\PSoC4/Timer_1.c **** * Note:
 841:.\Generated_Source\PSoC4/Timer_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/Timer_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/Timer_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/Timer_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/Timer_1.c **** *
 848:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/Timer_1.c **** {
 1127              		.loc 1 850 0
 1128              		.cfi_startproc
 1129 0000 80B5     		push	{r7, lr}
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 7, -8
 1132              		.cfi_offset 14, -4
 1133 0002 82B0     		sub	sp, sp, #8
 1134              		.cfi_def_cfa_offset 16
 1135 0004 00AF     		add	r7, sp, #0
 1136              		.cfi_def_cfa_register 7
 1137 0006 7860     		str	r0, [r7, #4]
 851:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/Timer_1.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/Timer_1.c **** 
 855:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/Timer_1.c ****         currentMode = ((Timer_1_CONTROL_REG & Timer_1_UPDOWN_MASK) >> Timer_1_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/Timer_1.c **** 
 858:.\Generated_Source\PSoC4/Timer_1.c ****         if (((uint32)Timer_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 36


 859:.\Generated_Source\PSoC4/Timer_1.c ****         {
 860:.\Generated_Source\PSoC4/Timer_1.c ****             compare++;
 861:.\Generated_Source\PSoC4/Timer_1.c ****         }
 862:.\Generated_Source\PSoC4/Timer_1.c ****         else if (((uint32)Timer_1__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/Timer_1.c ****         {
 864:.\Generated_Source\PSoC4/Timer_1.c ****             compare--;
 865:.\Generated_Source\PSoC4/Timer_1.c ****         }
 866:.\Generated_Source\PSoC4/Timer_1.c ****         else
 867:.\Generated_Source\PSoC4/Timer_1.c ****         {
 868:.\Generated_Source\PSoC4/Timer_1.c ****         }
 869:.\Generated_Source\PSoC4/Timer_1.c ****         
 870:.\Generated_Source\PSoC4/Timer_1.c ****     
 871:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/Timer_1.c ****     
 873:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_COMP_CAP_REG = (compare & Timer_1_16BIT_MASK);
 1138              		.loc 1 873 0
 1139 0008 034B     		ldr	r3, .L72
 1140 000a 7A68     		ldr	r2, [r7, #4]
 1141 000c 1204     		lsl	r2, r2, #16
 1142 000e 120C     		lsr	r2, r2, #16
 1143 0010 1A60     		str	r2, [r3]
 874:.\Generated_Source\PSoC4/Timer_1.c **** }
 1144              		.loc 1 874 0
 1145 0012 BD46     		mov	sp, r7
 1146 0014 02B0     		add	sp, sp, #8
 1147              		@ sp needed
 1148 0016 80BD     		pop	{r7, pc}
 1149              	.L73:
 1150              		.align	2
 1151              	.L72:
 1152 0018 0C012040 		.word	1075839244
 1153              		.cfi_endproc
 1154              	.LFE24:
 1155              		.size	Timer_1_WriteCompare, .-Timer_1_WriteCompare
 1156              		.section	.text.Timer_1_ReadCompare,"ax",%progbits
 1157              		.align	2
 1158              		.global	Timer_1_ReadCompare
 1159              		.code	16
 1160              		.thumb_func
 1161              		.type	Timer_1_ReadCompare, %function
 1162              	Timer_1_ReadCompare:
 1163              	.LFB25:
 875:.\Generated_Source\PSoC4/Timer_1.c **** 
 876:.\Generated_Source\PSoC4/Timer_1.c **** 
 877:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCompare
 879:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/Timer_1.c **** *
 881:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 882:.\Generated_Source\PSoC4/Timer_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/Timer_1.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/Timer_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/Timer_1.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/Timer_1.c **** *
 888:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 889:.\Generated_Source\PSoC4/Timer_1.c **** *  None
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 37


 890:.\Generated_Source\PSoC4/Timer_1.c **** *
 891:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 892:.\Generated_Source\PSoC4/Timer_1.c **** *  Compare value
 893:.\Generated_Source\PSoC4/Timer_1.c **** *
 894:.\Generated_Source\PSoC4/Timer_1.c **** * Note:
 895:.\Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/Timer_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/Timer_1.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/Timer_1.c **** *
 899:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCompare(void)
 901:.\Generated_Source\PSoC4/Timer_1.c **** {
 1164              		.loc 1 901 0
 1165              		.cfi_startproc
 1166 0000 80B5     		push	{r7, lr}
 1167              		.cfi_def_cfa_offset 8
 1168              		.cfi_offset 7, -8
 1169              		.cfi_offset 14, -4
 1170 0002 00AF     		add	r7, sp, #0
 1171              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/Timer_1.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/Timer_1.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/Timer_1.c **** 
 907:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/Timer_1.c ****         currentMode = ((Timer_1_CONTROL_REG & Timer_1_UPDOWN_MASK) >> Timer_1_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/Timer_1.c ****         
 910:.\Generated_Source\PSoC4/Timer_1.c ****         regVal = Timer_1_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/Timer_1.c ****         
 912:.\Generated_Source\PSoC4/Timer_1.c ****         if (((uint32)Timer_1__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/Timer_1.c ****         {
 914:.\Generated_Source\PSoC4/Timer_1.c ****             regVal--;
 915:.\Generated_Source\PSoC4/Timer_1.c ****         }
 916:.\Generated_Source\PSoC4/Timer_1.c ****         else if (((uint32)Timer_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/Timer_1.c ****         {
 918:.\Generated_Source\PSoC4/Timer_1.c ****             regVal++;
 919:.\Generated_Source\PSoC4/Timer_1.c ****         }
 920:.\Generated_Source\PSoC4/Timer_1.c ****         else
 921:.\Generated_Source\PSoC4/Timer_1.c ****         {
 922:.\Generated_Source\PSoC4/Timer_1.c ****         }
 923:.\Generated_Source\PSoC4/Timer_1.c **** 
 924:.\Generated_Source\PSoC4/Timer_1.c ****         return (regVal & Timer_1_16BIT_MASK);
 925:.\Generated_Source\PSoC4/Timer_1.c ****     #else
 926:.\Generated_Source\PSoC4/Timer_1.c ****         return (Timer_1_COMP_CAP_REG & Timer_1_16BIT_MASK);
 1172              		.loc 1 926 0
 1173 0004 034B     		ldr	r3, .L76
 1174 0006 1B68     		ldr	r3, [r3]
 1175 0008 1B04     		lsl	r3, r3, #16
 1176 000a 1B0C     		lsr	r3, r3, #16
 927:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/Timer_1.c **** }
 1177              		.loc 1 928 0
 1178 000c 181C     		mov	r0, r3
 1179 000e BD46     		mov	sp, r7
 1180              		@ sp needed
 1181 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 38


 1182              	.L77:
 1183 0012 C046     		.align	2
 1184              	.L76:
 1185 0014 0C012040 		.word	1075839244
 1186              		.cfi_endproc
 1187              	.LFE25:
 1188              		.size	Timer_1_ReadCompare, .-Timer_1_ReadCompare
 1189              		.section	.text.Timer_1_WriteCompareBuf,"ax",%progbits
 1190              		.align	2
 1191              		.global	Timer_1_WriteCompareBuf
 1192              		.code	16
 1193              		.thumb_func
 1194              		.type	Timer_1_WriteCompareBuf, %function
 1195              	Timer_1_WriteCompareBuf:
 1196              	.LFB26:
 929:.\Generated_Source\PSoC4/Timer_1.c **** 
 930:.\Generated_Source\PSoC4/Timer_1.c **** 
 931:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WriteCompareBuf
 933:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/Timer_1.c **** *
 935:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 936:.\Generated_Source\PSoC4/Timer_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/Timer_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/Timer_1.c **** *
 939:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 940:.\Generated_Source\PSoC4/Timer_1.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/Timer_1.c **** *
 942:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 943:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 944:.\Generated_Source\PSoC4/Timer_1.c **** *
 945:.\Generated_Source\PSoC4/Timer_1.c **** * Note:
 946:.\Generated_Source\PSoC4/Timer_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/Timer_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/Timer_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/Timer_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/Timer_1.c **** *
 953:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/Timer_1.c **** {
 1197              		.loc 1 955 0
 1198              		.cfi_startproc
 1199 0000 80B5     		push	{r7, lr}
 1200              		.cfi_def_cfa_offset 8
 1201              		.cfi_offset 7, -8
 1202              		.cfi_offset 14, -4
 1203 0002 82B0     		sub	sp, sp, #8
 1204              		.cfi_def_cfa_offset 16
 1205 0004 00AF     		add	r7, sp, #0
 1206              		.cfi_def_cfa_register 7
 1207 0006 7860     		str	r0, [r7, #4]
 956:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/Timer_1.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/Timer_1.c **** 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 39


 960:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/Timer_1.c ****         currentMode = ((Timer_1_CONTROL_REG & Timer_1_UPDOWN_MASK) >> Timer_1_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/Timer_1.c **** 
 963:.\Generated_Source\PSoC4/Timer_1.c ****         if (((uint32)Timer_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/Timer_1.c ****         {
 965:.\Generated_Source\PSoC4/Timer_1.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/Timer_1.c ****         }
 967:.\Generated_Source\PSoC4/Timer_1.c ****         else if (((uint32)Timer_1__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/Timer_1.c ****         {
 969:.\Generated_Source\PSoC4/Timer_1.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/Timer_1.c ****         }
 971:.\Generated_Source\PSoC4/Timer_1.c ****         else
 972:.\Generated_Source\PSoC4/Timer_1.c ****         {
 973:.\Generated_Source\PSoC4/Timer_1.c ****         }
 974:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/Timer_1.c ****     
 976:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_COMP_CAP_BUF_REG = (compareBuf & Timer_1_16BIT_MASK);
 1208              		.loc 1 976 0
 1209 0008 034B     		ldr	r3, .L79
 1210 000a 7A68     		ldr	r2, [r7, #4]
 1211 000c 1204     		lsl	r2, r2, #16
 1212 000e 120C     		lsr	r2, r2, #16
 1213 0010 1A60     		str	r2, [r3]
 977:.\Generated_Source\PSoC4/Timer_1.c **** }
 1214              		.loc 1 977 0
 1215 0012 BD46     		mov	sp, r7
 1216 0014 02B0     		add	sp, sp, #8
 1217              		@ sp needed
 1218 0016 80BD     		pop	{r7, pc}
 1219              	.L80:
 1220              		.align	2
 1221              	.L79:
 1222 0018 10012040 		.word	1075839248
 1223              		.cfi_endproc
 1224              	.LFE26:
 1225              		.size	Timer_1_WriteCompareBuf, .-Timer_1_WriteCompareBuf
 1226              		.section	.text.Timer_1_ReadCompareBuf,"ax",%progbits
 1227              		.align	2
 1228              		.global	Timer_1_ReadCompareBuf
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	Timer_1_ReadCompareBuf, %function
 1232              	Timer_1_ReadCompareBuf:
 1233              	.LFB27:
 978:.\Generated_Source\PSoC4/Timer_1.c **** 
 979:.\Generated_Source\PSoC4/Timer_1.c **** 
 980:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCompareBuf
 982:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/Timer_1.c **** *
 984:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
 985:.\Generated_Source\PSoC4/Timer_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/Timer_1.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/Timer_1.c **** *
 988:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 989:.\Generated_Source\PSoC4/Timer_1.c **** *  None
 990:.\Generated_Source\PSoC4/Timer_1.c **** *
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 40


 991:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
 992:.\Generated_Source\PSoC4/Timer_1.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/Timer_1.c **** *
 994:.\Generated_Source\PSoC4/Timer_1.c **** * Note:
 995:.\Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/Timer_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/Timer_1.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/Timer_1.c **** *
 999:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/Timer_1.c **** {
 1234              		.loc 1 1001 0
 1235              		.cfi_startproc
 1236 0000 80B5     		push	{r7, lr}
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 00AF     		add	r7, sp, #0
 1241              		.cfi_def_cfa_register 7
1002:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/Timer_1.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/Timer_1.c ****         uint32 regVal;
1005:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/Timer_1.c **** 
1007:.\Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/Timer_1.c ****         currentMode = ((Timer_1_CONTROL_REG & Timer_1_UPDOWN_MASK) >> Timer_1_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/Timer_1.c **** 
1010:.\Generated_Source\PSoC4/Timer_1.c ****         regVal = Timer_1_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/Timer_1.c ****         
1012:.\Generated_Source\PSoC4/Timer_1.c ****         if (((uint32)Timer_1__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/Timer_1.c ****         {
1014:.\Generated_Source\PSoC4/Timer_1.c ****             regVal--;
1015:.\Generated_Source\PSoC4/Timer_1.c ****         }
1016:.\Generated_Source\PSoC4/Timer_1.c ****         else if (((uint32)Timer_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/Timer_1.c ****         {
1018:.\Generated_Source\PSoC4/Timer_1.c ****             regVal++;
1019:.\Generated_Source\PSoC4/Timer_1.c ****         }
1020:.\Generated_Source\PSoC4/Timer_1.c ****         else
1021:.\Generated_Source\PSoC4/Timer_1.c ****         {
1022:.\Generated_Source\PSoC4/Timer_1.c ****         }
1023:.\Generated_Source\PSoC4/Timer_1.c **** 
1024:.\Generated_Source\PSoC4/Timer_1.c ****         return (regVal & Timer_1_16BIT_MASK);
1025:.\Generated_Source\PSoC4/Timer_1.c ****     #else
1026:.\Generated_Source\PSoC4/Timer_1.c ****         return (Timer_1_COMP_CAP_BUF_REG & Timer_1_16BIT_MASK);
 1242              		.loc 1 1026 0
 1243 0004 034B     		ldr	r3, .L83
 1244 0006 1B68     		ldr	r3, [r3]
 1245 0008 1B04     		lsl	r3, r3, #16
 1246 000a 1B0C     		lsr	r3, r3, #16
1027:.\Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/Timer_1.c **** }
 1247              		.loc 1 1028 0
 1248 000c 181C     		mov	r0, r3
 1249 000e BD46     		mov	sp, r7
 1250              		@ sp needed
 1251 0010 80BD     		pop	{r7, pc}
 1252              	.L84:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 41


 1253 0012 C046     		.align	2
 1254              	.L83:
 1255 0014 10012040 		.word	1075839248
 1256              		.cfi_endproc
 1257              	.LFE27:
 1258              		.size	Timer_1_ReadCompareBuf, .-Timer_1_ReadCompareBuf
 1259              		.section	.text.Timer_1_ReadCapture,"ax",%progbits
 1260              		.align	2
 1261              		.global	Timer_1_ReadCapture
 1262              		.code	16
 1263              		.thumb_func
 1264              		.type	Timer_1_ReadCapture, %function
 1265              	Timer_1_ReadCapture:
 1266              	.LFB28:
1029:.\Generated_Source\PSoC4/Timer_1.c **** 
1030:.\Generated_Source\PSoC4/Timer_1.c **** 
1031:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCapture
1033:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/Timer_1.c **** *
1035:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1036:.\Generated_Source\PSoC4/Timer_1.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/Timer_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/Timer_1.c **** *
1039:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1040:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1041:.\Generated_Source\PSoC4/Timer_1.c **** *
1042:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1043:.\Generated_Source\PSoC4/Timer_1.c **** *  Capture value
1044:.\Generated_Source\PSoC4/Timer_1.c **** *
1045:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCapture(void)
1047:.\Generated_Source\PSoC4/Timer_1.c **** {
 1267              		.loc 1 1047 0
 1268              		.cfi_startproc
 1269 0000 80B5     		push	{r7, lr}
 1270              		.cfi_def_cfa_offset 8
 1271              		.cfi_offset 7, -8
 1272              		.cfi_offset 14, -4
 1273 0002 00AF     		add	r7, sp, #0
 1274              		.cfi_def_cfa_register 7
1048:.\Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_COMP_CAP_REG & Timer_1_16BIT_MASK);
 1275              		.loc 1 1048 0
 1276 0004 034B     		ldr	r3, .L87
 1277 0006 1B68     		ldr	r3, [r3]
 1278 0008 1B04     		lsl	r3, r3, #16
 1279 000a 1B0C     		lsr	r3, r3, #16
1049:.\Generated_Source\PSoC4/Timer_1.c **** }
 1280              		.loc 1 1049 0
 1281 000c 181C     		mov	r0, r3
 1282 000e BD46     		mov	sp, r7
 1283              		@ sp needed
 1284 0010 80BD     		pop	{r7, pc}
 1285              	.L88:
 1286 0012 C046     		.align	2
 1287              	.L87:
 1288 0014 0C012040 		.word	1075839244
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 42


 1289              		.cfi_endproc
 1290              	.LFE28:
 1291              		.size	Timer_1_ReadCapture, .-Timer_1_ReadCapture
 1292              		.section	.text.Timer_1_ReadCaptureBuf,"ax",%progbits
 1293              		.align	2
 1294              		.global	Timer_1_ReadCaptureBuf
 1295              		.code	16
 1296              		.thumb_func
 1297              		.type	Timer_1_ReadCaptureBuf, %function
 1298              	Timer_1_ReadCaptureBuf:
 1299              	.LFB29:
1050:.\Generated_Source\PSoC4/Timer_1.c **** 
1051:.\Generated_Source\PSoC4/Timer_1.c **** 
1052:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/Timer_1.c **** *
1056:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1057:.\Generated_Source\PSoC4/Timer_1.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/Timer_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/Timer_1.c **** *
1060:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1061:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1062:.\Generated_Source\PSoC4/Timer_1.c **** *
1063:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1064:.\Generated_Source\PSoC4/Timer_1.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/Timer_1.c **** *
1066:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/Timer_1.c **** {
 1300              		.loc 1 1068 0
 1301              		.cfi_startproc
 1302 0000 80B5     		push	{r7, lr}
 1303              		.cfi_def_cfa_offset 8
 1304              		.cfi_offset 7, -8
 1305              		.cfi_offset 14, -4
 1306 0002 00AF     		add	r7, sp, #0
 1307              		.cfi_def_cfa_register 7
1069:.\Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_COMP_CAP_BUF_REG & Timer_1_16BIT_MASK);
 1308              		.loc 1 1069 0
 1309 0004 034B     		ldr	r3, .L91
 1310 0006 1B68     		ldr	r3, [r3]
 1311 0008 1B04     		lsl	r3, r3, #16
 1312 000a 1B0C     		lsr	r3, r3, #16
1070:.\Generated_Source\PSoC4/Timer_1.c **** }
 1313              		.loc 1 1070 0
 1314 000c 181C     		mov	r0, r3
 1315 000e BD46     		mov	sp, r7
 1316              		@ sp needed
 1317 0010 80BD     		pop	{r7, pc}
 1318              	.L92:
 1319 0012 C046     		.align	2
 1320              	.L91:
 1321 0014 10012040 		.word	1075839248
 1322              		.cfi_endproc
 1323              	.LFE29:
 1324              		.size	Timer_1_ReadCaptureBuf, .-Timer_1_ReadCaptureBuf
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 43


 1325              		.section	.text.Timer_1_SetCaptureMode,"ax",%progbits
 1326              		.align	2
 1327              		.global	Timer_1_SetCaptureMode
 1328              		.code	16
 1329              		.thumb_func
 1330              		.type	Timer_1_SetCaptureMode, %function
 1331              	Timer_1_SetCaptureMode:
 1332              	.LFB30:
1071:.\Generated_Source\PSoC4/Timer_1.c **** 
1072:.\Generated_Source\PSoC4/Timer_1.c **** 
1073:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCaptureMode
1075:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/Timer_1.c **** *
1077:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1078:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/Timer_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/Timer_1.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/Timer_1.c **** *
1082:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1083:.\Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1085:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/Timer_1.c **** *
1090:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1091:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1092:.\Generated_Source\PSoC4/Timer_1.c **** *
1093:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/Timer_1.c **** {
 1333              		.loc 1 1095 0
 1334              		.cfi_startproc
 1335 0000 90B5     		push	{r4, r7, lr}
 1336              		.cfi_def_cfa_offset 12
 1337              		.cfi_offset 4, -12
 1338              		.cfi_offset 7, -8
 1339              		.cfi_offset 14, -4
 1340 0002 85B0     		sub	sp, sp, #20
 1341              		.cfi_def_cfa_offset 32
 1342 0004 00AF     		add	r7, sp, #0
 1343              		.cfi_def_cfa_register 7
 1344 0006 7860     		str	r0, [r7, #4]
1096:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/Timer_1.c **** 
1098:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1345              		.loc 1 1098 0
 1346 0008 0F23     		mov	r3, #15
 1347 000a FC18     		add	r4, r7, r3
 1348 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1349 0010 031C     		mov	r3, r0
 1350 0012 2370     		strb	r3, [r4]
1099:.\Generated_Source\PSoC4/Timer_1.c **** 
1100:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_CAPTURE_MASK;
 1351              		.loc 1 1100 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 44


 1352 0014 0A4B     		ldr	r3, .L94
 1353 0016 0A4A     		ldr	r2, .L94
 1354 0018 1268     		ldr	r2, [r2]
 1355 001a 0321     		mov	r1, #3
 1356 001c 8A43     		bic	r2, r1
 1357 001e 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= triggerMode;
 1358              		.loc 1 1101 0
 1359 0020 074B     		ldr	r3, .L94
 1360 0022 074A     		ldr	r2, .L94
 1361 0024 1168     		ldr	r1, [r2]
 1362 0026 7A68     		ldr	r2, [r7, #4]
 1363 0028 0A43     		orr	r2, r1
 1364 002a 1A60     		str	r2, [r3]
1102:.\Generated_Source\PSoC4/Timer_1.c **** 
1103:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1365              		.loc 1 1103 0
 1366 002c 0F23     		mov	r3, #15
 1367 002e FB18     		add	r3, r7, r3
 1368 0030 1B78     		ldrb	r3, [r3]
 1369 0032 181C     		mov	r0, r3
 1370 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:.\Generated_Source\PSoC4/Timer_1.c **** }
 1371              		.loc 1 1104 0
 1372 0038 BD46     		mov	sp, r7
 1373 003a 05B0     		add	sp, sp, #20
 1374              		@ sp needed
 1375 003c 90BD     		pop	{r4, r7, pc}
 1376              	.L95:
 1377 003e C046     		.align	2
 1378              	.L94:
 1379 0040 24012040 		.word	1075839268
 1380              		.cfi_endproc
 1381              	.LFE30:
 1382              		.size	Timer_1_SetCaptureMode, .-Timer_1_SetCaptureMode
 1383              		.section	.text.Timer_1_SetReloadMode,"ax",%progbits
 1384              		.align	2
 1385              		.global	Timer_1_SetReloadMode
 1386              		.code	16
 1387              		.thumb_func
 1388              		.type	Timer_1_SetReloadMode, %function
 1389              	Timer_1_SetReloadMode:
 1390              	.LFB31:
1105:.\Generated_Source\PSoC4/Timer_1.c **** 
1106:.\Generated_Source\PSoC4/Timer_1.c **** 
1107:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetReloadMode
1109:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/Timer_1.c **** *
1111:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1112:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/Timer_1.c **** *  input.
1114:.\Generated_Source\PSoC4/Timer_1.c **** *
1115:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1116:.\Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1117:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1118:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 45


1119:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/Timer_1.c **** *
1123:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1124:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1125:.\Generated_Source\PSoC4/Timer_1.c **** *
1126:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/Timer_1.c **** {
 1391              		.loc 1 1128 0
 1392              		.cfi_startproc
 1393 0000 90B5     		push	{r4, r7, lr}
 1394              		.cfi_def_cfa_offset 12
 1395              		.cfi_offset 4, -12
 1396              		.cfi_offset 7, -8
 1397              		.cfi_offset 14, -4
 1398 0002 85B0     		sub	sp, sp, #20
 1399              		.cfi_def_cfa_offset 32
 1400 0004 00AF     		add	r7, sp, #0
 1401              		.cfi_def_cfa_register 7
 1402 0006 7860     		str	r0, [r7, #4]
1129:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/Timer_1.c **** 
1131:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1403              		.loc 1 1131 0
 1404 0008 0F23     		mov	r3, #15
 1405 000a FC18     		add	r4, r7, r3
 1406 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1407 0010 031C     		mov	r3, r0
 1408 0012 2370     		strb	r3, [r4]
1132:.\Generated_Source\PSoC4/Timer_1.c **** 
1133:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_RELOAD_MASK;
 1409              		.loc 1 1133 0
 1410 0014 0A4B     		ldr	r3, .L97
 1411 0016 0A4A     		ldr	r2, .L97
 1412 0018 1268     		ldr	r2, [r2]
 1413 001a 3021     		mov	r1, #48
 1414 001c 8A43     		bic	r2, r1
 1415 001e 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_1_RELOAD_SHIFT));
 1416              		.loc 1 1134 0
 1417 0020 074B     		ldr	r3, .L97
 1418 0022 074A     		ldr	r2, .L97
 1419 0024 1168     		ldr	r1, [r2]
 1420 0026 7A68     		ldr	r2, [r7, #4]
 1421 0028 1201     		lsl	r2, r2, #4
 1422 002a 0A43     		orr	r2, r1
 1423 002c 1A60     		str	r2, [r3]
1135:.\Generated_Source\PSoC4/Timer_1.c **** 
1136:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1424              		.loc 1 1136 0
 1425 002e 0F23     		mov	r3, #15
 1426 0030 FB18     		add	r3, r7, r3
 1427 0032 1B78     		ldrb	r3, [r3]
 1428 0034 181C     		mov	r0, r3
 1429 0036 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 46


1137:.\Generated_Source\PSoC4/Timer_1.c **** }
 1430              		.loc 1 1137 0
 1431 003a BD46     		mov	sp, r7
 1432 003c 05B0     		add	sp, sp, #20
 1433              		@ sp needed
 1434 003e 90BD     		pop	{r4, r7, pc}
 1435              	.L98:
 1436              		.align	2
 1437              	.L97:
 1438 0040 24012040 		.word	1075839268
 1439              		.cfi_endproc
 1440              	.LFE31:
 1441              		.size	Timer_1_SetReloadMode, .-Timer_1_SetReloadMode
 1442              		.section	.text.Timer_1_SetStartMode,"ax",%progbits
 1443              		.align	2
 1444              		.global	Timer_1_SetStartMode
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	Timer_1_SetStartMode, %function
 1448              	Timer_1_SetStartMode:
 1449              	.LFB32:
1138:.\Generated_Source\PSoC4/Timer_1.c **** 
1139:.\Generated_Source\PSoC4/Timer_1.c **** 
1140:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetStartMode
1142:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/Timer_1.c **** *
1144:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1145:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/Timer_1.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/Timer_1.c **** *
1148:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1149:.\Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1151:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/Timer_1.c **** *
1156:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1157:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1158:.\Generated_Source\PSoC4/Timer_1.c **** *
1159:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/Timer_1.c **** {
 1450              		.loc 1 1161 0
 1451              		.cfi_startproc
 1452 0000 90B5     		push	{r4, r7, lr}
 1453              		.cfi_def_cfa_offset 12
 1454              		.cfi_offset 4, -12
 1455              		.cfi_offset 7, -8
 1456              		.cfi_offset 14, -4
 1457 0002 85B0     		sub	sp, sp, #20
 1458              		.cfi_def_cfa_offset 32
 1459 0004 00AF     		add	r7, sp, #0
 1460              		.cfi_def_cfa_register 7
 1461 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 47


1162:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/Timer_1.c **** 
1164:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1462              		.loc 1 1164 0
 1463 0008 0F23     		mov	r3, #15
 1464 000a FC18     		add	r4, r7, r3
 1465 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1466 0010 031C     		mov	r3, r0
 1467 0012 2370     		strb	r3, [r4]
1165:.\Generated_Source\PSoC4/Timer_1.c **** 
1166:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_START_MASK;
 1468              		.loc 1 1166 0
 1469 0014 0A4B     		ldr	r3, .L100
 1470 0016 0A4A     		ldr	r2, .L100
 1471 0018 1268     		ldr	r2, [r2]
 1472 001a 0A49     		ldr	r1, .L100+4
 1473 001c 0A40     		and	r2, r1
 1474 001e 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_1_START_SHIFT));
 1475              		.loc 1 1167 0
 1476 0020 074B     		ldr	r3, .L100
 1477 0022 074A     		ldr	r2, .L100
 1478 0024 1168     		ldr	r1, [r2]
 1479 0026 7A68     		ldr	r2, [r7, #4]
 1480 0028 1202     		lsl	r2, r2, #8
 1481 002a 0A43     		orr	r2, r1
 1482 002c 1A60     		str	r2, [r3]
1168:.\Generated_Source\PSoC4/Timer_1.c **** 
1169:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1483              		.loc 1 1169 0
 1484 002e 0F23     		mov	r3, #15
 1485 0030 FB18     		add	r3, r7, r3
 1486 0032 1B78     		ldrb	r3, [r3]
 1487 0034 181C     		mov	r0, r3
 1488 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:.\Generated_Source\PSoC4/Timer_1.c **** }
 1489              		.loc 1 1170 0
 1490 003a BD46     		mov	sp, r7
 1491 003c 05B0     		add	sp, sp, #20
 1492              		@ sp needed
 1493 003e 90BD     		pop	{r4, r7, pc}
 1494              	.L101:
 1495              		.align	2
 1496              	.L100:
 1497 0040 24012040 		.word	1075839268
 1498 0044 FFFCFFFF 		.word	-769
 1499              		.cfi_endproc
 1500              	.LFE32:
 1501              		.size	Timer_1_SetStartMode, .-Timer_1_SetStartMode
 1502              		.section	.text.Timer_1_SetStopMode,"ax",%progbits
 1503              		.align	2
 1504              		.global	Timer_1_SetStopMode
 1505              		.code	16
 1506              		.thumb_func
 1507              		.type	Timer_1_SetStopMode, %function
 1508              	Timer_1_SetStopMode:
 1509              	.LFB33:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 48


1171:.\Generated_Source\PSoC4/Timer_1.c **** 
1172:.\Generated_Source\PSoC4/Timer_1.c **** 
1173:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetStopMode
1175:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/Timer_1.c **** *
1177:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1178:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/Timer_1.c **** *
1180:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1181:.\Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1183:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/Timer_1.c **** *
1188:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1189:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1190:.\Generated_Source\PSoC4/Timer_1.c **** *
1191:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/Timer_1.c **** {
 1510              		.loc 1 1193 0
 1511              		.cfi_startproc
 1512 0000 90B5     		push	{r4, r7, lr}
 1513              		.cfi_def_cfa_offset 12
 1514              		.cfi_offset 4, -12
 1515              		.cfi_offset 7, -8
 1516              		.cfi_offset 14, -4
 1517 0002 85B0     		sub	sp, sp, #20
 1518              		.cfi_def_cfa_offset 32
 1519 0004 00AF     		add	r7, sp, #0
 1520              		.cfi_def_cfa_register 7
 1521 0006 7860     		str	r0, [r7, #4]
1194:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/Timer_1.c **** 
1196:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1522              		.loc 1 1196 0
 1523 0008 0F23     		mov	r3, #15
 1524 000a FC18     		add	r4, r7, r3
 1525 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1526 0010 031C     		mov	r3, r0
 1527 0012 2370     		strb	r3, [r4]
1197:.\Generated_Source\PSoC4/Timer_1.c **** 
1198:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_STOP_MASK;
 1528              		.loc 1 1198 0
 1529 0014 0A4B     		ldr	r3, .L103
 1530 0016 0A4A     		ldr	r2, .L103
 1531 0018 1268     		ldr	r2, [r2]
 1532 001a C021     		mov	r1, #192
 1533 001c 8A43     		bic	r2, r1
 1534 001e 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_1_STOP_SHIFT));
 1535              		.loc 1 1199 0
 1536 0020 074B     		ldr	r3, .L103
 1537 0022 074A     		ldr	r2, .L103
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 49


 1538 0024 1168     		ldr	r1, [r2]
 1539 0026 7A68     		ldr	r2, [r7, #4]
 1540 0028 9201     		lsl	r2, r2, #6
 1541 002a 0A43     		orr	r2, r1
 1542 002c 1A60     		str	r2, [r3]
1200:.\Generated_Source\PSoC4/Timer_1.c **** 
1201:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1543              		.loc 1 1201 0
 1544 002e 0F23     		mov	r3, #15
 1545 0030 FB18     		add	r3, r7, r3
 1546 0032 1B78     		ldrb	r3, [r3]
 1547 0034 181C     		mov	r0, r3
 1548 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:.\Generated_Source\PSoC4/Timer_1.c **** }
 1549              		.loc 1 1202 0
 1550 003a BD46     		mov	sp, r7
 1551 003c 05B0     		add	sp, sp, #20
 1552              		@ sp needed
 1553 003e 90BD     		pop	{r4, r7, pc}
 1554              	.L104:
 1555              		.align	2
 1556              	.L103:
 1557 0040 24012040 		.word	1075839268
 1558              		.cfi_endproc
 1559              	.LFE33:
 1560              		.size	Timer_1_SetStopMode, .-Timer_1_SetStopMode
 1561              		.section	.text.Timer_1_SetCountMode,"ax",%progbits
 1562              		.align	2
 1563              		.global	Timer_1_SetCountMode
 1564              		.code	16
 1565              		.thumb_func
 1566              		.type	Timer_1_SetCountMode, %function
 1567              	Timer_1_SetCountMode:
 1568              	.LFB34:
1203:.\Generated_Source\PSoC4/Timer_1.c **** 
1204:.\Generated_Source\PSoC4/Timer_1.c **** 
1205:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCountMode
1207:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/Timer_1.c **** *
1209:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1210:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/Timer_1.c **** *  input.
1212:.\Generated_Source\PSoC4/Timer_1.c **** *
1213:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1214:.\Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1216:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/Timer_1.c **** *
1221:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1222:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1223:.\Generated_Source\PSoC4/Timer_1.c **** *
1224:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCountMode(uint32 triggerMode)
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 50


1226:.\Generated_Source\PSoC4/Timer_1.c **** {
 1569              		.loc 1 1226 0
 1570              		.cfi_startproc
 1571 0000 90B5     		push	{r4, r7, lr}
 1572              		.cfi_def_cfa_offset 12
 1573              		.cfi_offset 4, -12
 1574              		.cfi_offset 7, -8
 1575              		.cfi_offset 14, -4
 1576 0002 85B0     		sub	sp, sp, #20
 1577              		.cfi_def_cfa_offset 32
 1578 0004 00AF     		add	r7, sp, #0
 1579              		.cfi_def_cfa_register 7
 1580 0006 7860     		str	r0, [r7, #4]
1227:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/Timer_1.c **** 
1229:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1581              		.loc 1 1229 0
 1582 0008 0F23     		mov	r3, #15
 1583 000a FC18     		add	r4, r7, r3
 1584 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1585 0010 031C     		mov	r3, r0
 1586 0012 2370     		strb	r3, [r4]
1230:.\Generated_Source\PSoC4/Timer_1.c **** 
1231:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_COUNT_MASK;
 1587              		.loc 1 1231 0
 1588 0014 0A4B     		ldr	r3, .L106
 1589 0016 0A4A     		ldr	r2, .L106
 1590 0018 1268     		ldr	r2, [r2]
 1591 001a 0C21     		mov	r1, #12
 1592 001c 8A43     		bic	r2, r1
 1593 001e 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_1_COUNT_SHIFT));
 1594              		.loc 1 1232 0
 1595 0020 074B     		ldr	r3, .L106
 1596 0022 074A     		ldr	r2, .L106
 1597 0024 1168     		ldr	r1, [r2]
 1598 0026 7A68     		ldr	r2, [r7, #4]
 1599 0028 9200     		lsl	r2, r2, #2
 1600 002a 0A43     		orr	r2, r1
 1601 002c 1A60     		str	r2, [r3]
1233:.\Generated_Source\PSoC4/Timer_1.c **** 
1234:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1602              		.loc 1 1234 0
 1603 002e 0F23     		mov	r3, #15
 1604 0030 FB18     		add	r3, r7, r3
 1605 0032 1B78     		ldrb	r3, [r3]
 1606 0034 181C     		mov	r0, r3
 1607 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:.\Generated_Source\PSoC4/Timer_1.c **** }
 1608              		.loc 1 1235 0
 1609 003a BD46     		mov	sp, r7
 1610 003c 05B0     		add	sp, sp, #20
 1611              		@ sp needed
 1612 003e 90BD     		pop	{r4, r7, pc}
 1613              	.L107:
 1614              		.align	2
 1615              	.L106:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 51


 1616 0040 24012040 		.word	1075839268
 1617              		.cfi_endproc
 1618              	.LFE34:
 1619              		.size	Timer_1_SetCountMode, .-Timer_1_SetCountMode
 1620              		.section	.text.Timer_1_TriggerCommand,"ax",%progbits
 1621              		.align	2
 1622              		.global	Timer_1_TriggerCommand
 1623              		.code	16
 1624              		.thumb_func
 1625              		.type	Timer_1_TriggerCommand, %function
 1626              	Timer_1_TriggerCommand:
 1627              	.LFB35:
1236:.\Generated_Source\PSoC4/Timer_1.c **** 
1237:.\Generated_Source\PSoC4/Timer_1.c **** 
1238:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_TriggerCommand
1240:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/Timer_1.c **** *
1242:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1243:.\Generated_Source\PSoC4/Timer_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/Timer_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/Timer_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/Timer_1.c **** *
1247:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1248:.\Generated_Source\PSoC4/Timer_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/Timer_1.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/Timer_1.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/Timer_1.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/Timer_1.c **** *        define.
1253:.\Generated_Source\PSoC4/Timer_1.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/Timer_1.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1256:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/Timer_1.c **** *
1261:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1262:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1263:.\Generated_Source\PSoC4/Timer_1.c **** *
1264:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/Timer_1.c **** {
 1628              		.loc 1 1266 0
 1629              		.cfi_startproc
 1630 0000 90B5     		push	{r4, r7, lr}
 1631              		.cfi_def_cfa_offset 12
 1632              		.cfi_offset 4, -12
 1633              		.cfi_offset 7, -8
 1634              		.cfi_offset 14, -4
 1635 0002 85B0     		sub	sp, sp, #20
 1636              		.cfi_def_cfa_offset 32
 1637 0004 00AF     		add	r7, sp, #0
 1638              		.cfi_def_cfa_register 7
 1639 0006 7860     		str	r0, [r7, #4]
 1640 0008 3960     		str	r1, [r7]
1267:.\Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 52


1268:.\Generated_Source\PSoC4/Timer_1.c **** 
1269:.\Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1641              		.loc 1 1269 0
 1642 000a 0F23     		mov	r3, #15
 1643 000c FC18     		add	r4, r7, r3
 1644 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1645 0012 031C     		mov	r3, r0
 1646 0014 2370     		strb	r3, [r4]
1270:.\Generated_Source\PSoC4/Timer_1.c **** 
1271:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_COMMAND_REG = ((uint32)(mask << command));
 1647              		.loc 1 1271 0
 1648 0016 074B     		ldr	r3, .L109
 1649 0018 3A68     		ldr	r2, [r7]
 1650 001a 7968     		ldr	r1, [r7, #4]
 1651 001c 9140     		lsl	r1, r1, r2
 1652 001e 0A1C     		mov	r2, r1
 1653 0020 1A60     		str	r2, [r3]
1272:.\Generated_Source\PSoC4/Timer_1.c **** 
1273:.\Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1654              		.loc 1 1273 0
 1655 0022 0F23     		mov	r3, #15
 1656 0024 FB18     		add	r3, r7, r3
 1657 0026 1B78     		ldrb	r3, [r3]
 1658 0028 181C     		mov	r0, r3
 1659 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:.\Generated_Source\PSoC4/Timer_1.c **** }
 1660              		.loc 1 1274 0
 1661 002e BD46     		mov	sp, r7
 1662 0030 05B0     		add	sp, sp, #20
 1663              		@ sp needed
 1664 0032 90BD     		pop	{r4, r7, pc}
 1665              	.L110:
 1666              		.align	2
 1667              	.L109:
 1668 0034 08002040 		.word	1075838984
 1669              		.cfi_endproc
 1670              	.LFE35:
 1671              		.size	Timer_1_TriggerCommand, .-Timer_1_TriggerCommand
 1672              		.section	.text.Timer_1_ReadStatus,"ax",%progbits
 1673              		.align	2
 1674              		.global	Timer_1_ReadStatus
 1675              		.code	16
 1676              		.thumb_func
 1677              		.type	Timer_1_ReadStatus, %function
 1678              	Timer_1_ReadStatus:
 1679              	.LFB36:
1275:.\Generated_Source\PSoC4/Timer_1.c **** 
1276:.\Generated_Source\PSoC4/Timer_1.c **** 
1277:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadStatus
1279:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/Timer_1.c **** *
1281:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1282:.\Generated_Source\PSoC4/Timer_1.c **** *  Reads the status of the Timer_1.
1283:.\Generated_Source\PSoC4/Timer_1.c **** *
1284:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1285:.\Generated_Source\PSoC4/Timer_1.c **** *  None
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 53


1286:.\Generated_Source\PSoC4/Timer_1.c **** *
1287:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1288:.\Generated_Source\PSoC4/Timer_1.c **** *  Status
1289:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1290:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/Timer_1.c **** *
1293:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadStatus(void)
1295:.\Generated_Source\PSoC4/Timer_1.c **** {
 1680              		.loc 1 1295 0
 1681              		.cfi_startproc
 1682 0000 80B5     		push	{r7, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 7, -8
 1685              		.cfi_offset 14, -4
 1686 0002 00AF     		add	r7, sp, #0
 1687              		.cfi_def_cfa_register 7
1296:.\Generated_Source\PSoC4/Timer_1.c ****     return ((Timer_1_STATUS_REG >> Timer_1_RUNNING_STATUS_SHIFT) |
 1688              		.loc 1 1296 0
 1689 0004 054B     		ldr	r3, .L113
 1690 0006 1B68     		ldr	r3, [r3]
 1691 0008 9A0F     		lsr	r2, r3, #30
1297:.\Generated_Source\PSoC4/Timer_1.c ****             (Timer_1_STATUS_REG & Timer_1_STATUS_DOWN));
 1692              		.loc 1 1297 0
 1693 000a 044B     		ldr	r3, .L113
 1694 000c 1B68     		ldr	r3, [r3]
 1695 000e 0121     		mov	r1, #1
 1696 0010 0B40     		and	r3, r1
1296:.\Generated_Source\PSoC4/Timer_1.c ****     return ((Timer_1_STATUS_REG >> Timer_1_RUNNING_STATUS_SHIFT) |
 1697              		.loc 1 1296 0
 1698 0012 1343     		orr	r3, r2
1298:.\Generated_Source\PSoC4/Timer_1.c **** }
 1699              		.loc 1 1298 0
 1700 0014 181C     		mov	r0, r3
 1701 0016 BD46     		mov	sp, r7
 1702              		@ sp needed
 1703 0018 80BD     		pop	{r7, pc}
 1704              	.L114:
 1705 001a C046     		.align	2
 1706              	.L113:
 1707 001c 04012040 		.word	1075839236
 1708              		.cfi_endproc
 1709              	.LFE36:
 1710              		.size	Timer_1_ReadStatus, .-Timer_1_ReadStatus
 1711              		.section	.text.Timer_1_SetInterruptMode,"ax",%progbits
 1712              		.align	2
 1713              		.global	Timer_1_SetInterruptMode
 1714              		.code	16
 1715              		.thumb_func
 1716              		.type	Timer_1_SetInterruptMode, %function
 1717              	Timer_1_SetInterruptMode:
 1718              	.LFB37:
1299:.\Generated_Source\PSoC4/Timer_1.c **** 
1300:.\Generated_Source\PSoC4/Timer_1.c **** 
1301:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetInterruptMode
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 54


1303:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/Timer_1.c **** *
1305:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1306:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/Timer_1.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/Timer_1.c **** *
1309:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1310:.\Generated_Source\PSoC4/Timer_1.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1312:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/Timer_1.c **** *
1315:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1316:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1317:.\Generated_Source\PSoC4/Timer_1.c **** *
1318:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/Timer_1.c **** {
 1719              		.loc 1 1320 0
 1720              		.cfi_startproc
 1721 0000 80B5     		push	{r7, lr}
 1722              		.cfi_def_cfa_offset 8
 1723              		.cfi_offset 7, -8
 1724              		.cfi_offset 14, -4
 1725 0002 82B0     		sub	sp, sp, #8
 1726              		.cfi_def_cfa_offset 16
 1727 0004 00AF     		add	r7, sp, #0
 1728              		.cfi_def_cfa_register 7
 1729 0006 7860     		str	r0, [r7, #4]
1321:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_INTERRUPT_MASK_REG =  interruptMask;
 1730              		.loc 1 1321 0
 1731 0008 024B     		ldr	r3, .L116
 1732 000a 7A68     		ldr	r2, [r7, #4]
 1733 000c 1A60     		str	r2, [r3]
1322:.\Generated_Source\PSoC4/Timer_1.c **** }
 1734              		.loc 1 1322 0
 1735 000e BD46     		mov	sp, r7
 1736 0010 02B0     		add	sp, sp, #8
 1737              		@ sp needed
 1738 0012 80BD     		pop	{r7, pc}
 1739              	.L117:
 1740              		.align	2
 1741              	.L116:
 1742 0014 38012040 		.word	1075839288
 1743              		.cfi_endproc
 1744              	.LFE37:
 1745              		.size	Timer_1_SetInterruptMode, .-Timer_1_SetInterruptMode
 1746              		.section	.text.Timer_1_GetInterruptSourceMasked,"ax",%progbits
 1747              		.align	2
 1748              		.global	Timer_1_GetInterruptSourceMasked
 1749              		.code	16
 1750              		.thumb_func
 1751              		.type	Timer_1_GetInterruptSourceMasked, %function
 1752              	Timer_1_GetInterruptSourceMasked:
 1753              	.LFB38:
1323:.\Generated_Source\PSoC4/Timer_1.c **** 
1324:.\Generated_Source\PSoC4/Timer_1.c **** 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 55


1325:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/Timer_1.c **** *
1329:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1330:.\Generated_Source\PSoC4/Timer_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/Timer_1.c **** *
1332:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1333:.\Generated_Source\PSoC4/Timer_1.c **** *   None
1334:.\Generated_Source\PSoC4/Timer_1.c **** *
1335:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1336:.\Generated_Source\PSoC4/Timer_1.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1338:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/Timer_1.c **** *
1341:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/Timer_1.c **** {
 1754              		.loc 1 1343 0
 1755              		.cfi_startproc
 1756 0000 80B5     		push	{r7, lr}
 1757              		.cfi_def_cfa_offset 8
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 00AF     		add	r7, sp, #0
 1761              		.cfi_def_cfa_register 7
1344:.\Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_INTERRUPT_MASKED_REG);
 1762              		.loc 1 1344 0
 1763 0004 024B     		ldr	r3, .L120
 1764 0006 1B68     		ldr	r3, [r3]
1345:.\Generated_Source\PSoC4/Timer_1.c **** }
 1765              		.loc 1 1345 0
 1766 0008 181C     		mov	r0, r3
 1767 000a BD46     		mov	sp, r7
 1768              		@ sp needed
 1769 000c 80BD     		pop	{r7, pc}
 1770              	.L121:
 1771 000e C046     		.align	2
 1772              	.L120:
 1773 0010 3C012040 		.word	1075839292
 1774              		.cfi_endproc
 1775              	.LFE38:
 1776              		.size	Timer_1_GetInterruptSourceMasked, .-Timer_1_GetInterruptSourceMasked
 1777              		.section	.text.Timer_1_GetInterruptSource,"ax",%progbits
 1778              		.align	2
 1779              		.global	Timer_1_GetInterruptSource
 1780              		.code	16
 1781              		.thumb_func
 1782              		.type	Timer_1_GetInterruptSource, %function
 1783              	Timer_1_GetInterruptSource:
 1784              	.LFB39:
1346:.\Generated_Source\PSoC4/Timer_1.c **** 
1347:.\Generated_Source\PSoC4/Timer_1.c **** 
1348:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_GetInterruptSource
1350:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 56


1351:.\Generated_Source\PSoC4/Timer_1.c **** *
1352:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1353:.\Generated_Source\PSoC4/Timer_1.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/Timer_1.c **** *
1355:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1356:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1357:.\Generated_Source\PSoC4/Timer_1.c **** *
1358:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1359:.\Generated_Source\PSoC4/Timer_1.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1361:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/Timer_1.c **** *
1364:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/Timer_1.c **** {
 1785              		.loc 1 1366 0
 1786              		.cfi_startproc
 1787 0000 80B5     		push	{r7, lr}
 1788              		.cfi_def_cfa_offset 8
 1789              		.cfi_offset 7, -8
 1790              		.cfi_offset 14, -4
 1791 0002 00AF     		add	r7, sp, #0
 1792              		.cfi_def_cfa_register 7
1367:.\Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_INTERRUPT_REQ_REG);
 1793              		.loc 1 1367 0
 1794 0004 024B     		ldr	r3, .L124
 1795 0006 1B68     		ldr	r3, [r3]
1368:.\Generated_Source\PSoC4/Timer_1.c **** }
 1796              		.loc 1 1368 0
 1797 0008 181C     		mov	r0, r3
 1798 000a BD46     		mov	sp, r7
 1799              		@ sp needed
 1800 000c 80BD     		pop	{r7, pc}
 1801              	.L125:
 1802 000e C046     		.align	2
 1803              	.L124:
 1804 0010 30012040 		.word	1075839280
 1805              		.cfi_endproc
 1806              	.LFE39:
 1807              		.size	Timer_1_GetInterruptSource, .-Timer_1_GetInterruptSource
 1808              		.section	.text.Timer_1_ClearInterrupt,"ax",%progbits
 1809              		.align	2
 1810              		.global	Timer_1_ClearInterrupt
 1811              		.code	16
 1812              		.thumb_func
 1813              		.type	Timer_1_ClearInterrupt, %function
 1814              	Timer_1_ClearInterrupt:
 1815              	.LFB40:
1369:.\Generated_Source\PSoC4/Timer_1.c **** 
1370:.\Generated_Source\PSoC4/Timer_1.c **** 
1371:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ClearInterrupt
1373:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1374:.\Generated_Source\PSoC4/Timer_1.c **** *
1375:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
1376:.\Generated_Source\PSoC4/Timer_1.c **** *  Clears the interrupt request.
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 57


1377:.\Generated_Source\PSoC4/Timer_1.c **** *
1378:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1379:.\Generated_Source\PSoC4/Timer_1.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1381:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/Timer_1.c **** *
1384:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1385:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1386:.\Generated_Source\PSoC4/Timer_1.c **** *
1387:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/Timer_1.c **** {
 1816              		.loc 1 1389 0
 1817              		.cfi_startproc
 1818 0000 80B5     		push	{r7, lr}
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 7, -8
 1821              		.cfi_offset 14, -4
 1822 0002 82B0     		sub	sp, sp, #8
 1823              		.cfi_def_cfa_offset 16
 1824 0004 00AF     		add	r7, sp, #0
 1825              		.cfi_def_cfa_register 7
 1826 0006 7860     		str	r0, [r7, #4]
1390:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_INTERRUPT_REQ_REG = interruptMask;
 1827              		.loc 1 1390 0
 1828 0008 024B     		ldr	r3, .L127
 1829 000a 7A68     		ldr	r2, [r7, #4]
 1830 000c 1A60     		str	r2, [r3]
1391:.\Generated_Source\PSoC4/Timer_1.c **** }
 1831              		.loc 1 1391 0
 1832 000e BD46     		mov	sp, r7
 1833 0010 02B0     		add	sp, sp, #8
 1834              		@ sp needed
 1835 0012 80BD     		pop	{r7, pc}
 1836              	.L128:
 1837              		.align	2
 1838              	.L127:
 1839 0014 30012040 		.word	1075839280
 1840              		.cfi_endproc
 1841              	.LFE40:
 1842              		.size	Timer_1_ClearInterrupt, .-Timer_1_ClearInterrupt
 1843              		.section	.text.Timer_1_SetInterrupt,"ax",%progbits
 1844              		.align	2
 1845              		.global	Timer_1_SetInterrupt
 1846              		.code	16
 1847              		.thumb_func
 1848              		.type	Timer_1_SetInterrupt, %function
 1849              	Timer_1_SetInterrupt:
 1850              	.LFB41:
1392:.\Generated_Source\PSoC4/Timer_1.c **** 
1393:.\Generated_Source\PSoC4/Timer_1.c **** 
1394:.\Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetInterrupt
1396:.\Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/Timer_1.c **** *
1398:.\Generated_Source\PSoC4/Timer_1.c **** * Summary:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 58


1399:.\Generated_Source\PSoC4/Timer_1.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/Timer_1.c **** *
1401:.\Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1402:.\Generated_Source\PSoC4/Timer_1.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/Timer_1.c **** *   Values:
1404:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/Timer_1.c **** *
1407:.\Generated_Source\PSoC4/Timer_1.c **** * Return:
1408:.\Generated_Source\PSoC4/Timer_1.c **** *  None
1409:.\Generated_Source\PSoC4/Timer_1.c **** *
1410:.\Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/Timer_1.c **** {
 1851              		.loc 1 1412 0
 1852              		.cfi_startproc
 1853 0000 80B5     		push	{r7, lr}
 1854              		.cfi_def_cfa_offset 8
 1855              		.cfi_offset 7, -8
 1856              		.cfi_offset 14, -4
 1857 0002 82B0     		sub	sp, sp, #8
 1858              		.cfi_def_cfa_offset 16
 1859 0004 00AF     		add	r7, sp, #0
 1860              		.cfi_def_cfa_register 7
 1861 0006 7860     		str	r0, [r7, #4]
1413:.\Generated_Source\PSoC4/Timer_1.c ****     Timer_1_INTERRUPT_SET_REG = interruptMask;
 1862              		.loc 1 1413 0
 1863 0008 024B     		ldr	r3, .L130
 1864 000a 7A68     		ldr	r2, [r7, #4]
 1865 000c 1A60     		str	r2, [r3]
1414:.\Generated_Source\PSoC4/Timer_1.c **** }
 1866              		.loc 1 1414 0
 1867 000e BD46     		mov	sp, r7
 1868 0010 02B0     		add	sp, sp, #8
 1869              		@ sp needed
 1870 0012 80BD     		pop	{r7, pc}
 1871              	.L131:
 1872              		.align	2
 1873              	.L130:
 1874 0014 34012040 		.word	1075839284
 1875              		.cfi_endproc
 1876              	.LFE41:
 1877              		.size	Timer_1_SetInterrupt, .-Timer_1_SetInterrupt
 1878              		.text
 1879              	.Letext0:
 1880              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1881              		.section	.debug_info,"",%progbits
 1882              	.Ldebug_info0:
 1883 0000 F0060000 		.4byte	0x6f0
 1884 0004 0400     		.2byte	0x4
 1885 0006 00000000 		.4byte	.Ldebug_abbrev0
 1886 000a 04       		.byte	0x4
 1887 000b 01       		.uleb128 0x1
 1888 000c 39050000 		.4byte	.LASF76
 1889 0010 01       		.byte	0x1
 1890 0011 41000000 		.4byte	.LASF77
 1891 0015 52020000 		.4byte	.LASF78
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 59


 1892 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1893 001d 00000000 		.4byte	0
 1894 0021 00000000 		.4byte	.Ldebug_line0
 1895 0025 02       		.uleb128 0x2
 1896 0026 01       		.byte	0x1
 1897 0027 06       		.byte	0x6
 1898 0028 90000000 		.4byte	.LASF0
 1899 002c 02       		.uleb128 0x2
 1900 002d 01       		.byte	0x1
 1901 002e 08       		.byte	0x8
 1902 002f D8030000 		.4byte	.LASF1
 1903 0033 02       		.uleb128 0x2
 1904 0034 02       		.byte	0x2
 1905 0035 05       		.byte	0x5
 1906 0036 0A040000 		.4byte	.LASF2
 1907 003a 02       		.uleb128 0x2
 1908 003b 02       		.byte	0x2
 1909 003c 07       		.byte	0x7
 1910 003d F6010000 		.4byte	.LASF3
 1911 0041 02       		.uleb128 0x2
 1912 0042 04       		.byte	0x4
 1913 0043 05       		.byte	0x5
 1914 0044 C7000000 		.4byte	.LASF4
 1915 0048 02       		.uleb128 0x2
 1916 0049 04       		.byte	0x4
 1917 004a 07       		.byte	0x7
 1918 004b A2010000 		.4byte	.LASF5
 1919 004f 02       		.uleb128 0x2
 1920 0050 08       		.byte	0x8
 1921 0051 05       		.byte	0x5
 1922 0052 82000000 		.4byte	.LASF6
 1923 0056 02       		.uleb128 0x2
 1924 0057 08       		.byte	0x8
 1925 0058 07       		.byte	0x7
 1926 0059 64000000 		.4byte	.LASF7
 1927 005d 03       		.uleb128 0x3
 1928 005e 04       		.byte	0x4
 1929 005f 05       		.byte	0x5
 1930 0060 696E7400 		.ascii	"int\000"
 1931 0064 02       		.uleb128 0x2
 1932 0065 04       		.byte	0x4
 1933 0066 07       		.byte	0x7
 1934 0067 79010000 		.4byte	.LASF8
 1935 006b 04       		.uleb128 0x4
 1936 006c DB000000 		.4byte	.LASF9
 1937 0070 02       		.byte	0x2
 1938 0071 3801     		.2byte	0x138
 1939 0073 2C000000 		.4byte	0x2c
 1940 0077 04       		.uleb128 0x4
 1941 0078 2D010000 		.4byte	.LASF10
 1942 007c 02       		.byte	0x2
 1943 007d 3A01     		.2byte	0x13a
 1944 007f 48000000 		.4byte	0x48
 1945 0083 02       		.uleb128 0x2
 1946 0084 04       		.byte	0x4
 1947 0085 04       		.byte	0x4
 1948 0086 8A030000 		.4byte	.LASF11
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 60


 1949 008a 02       		.uleb128 0x2
 1950 008b 08       		.byte	0x8
 1951 008c 04       		.byte	0x4
 1952 008d E1000000 		.4byte	.LASF12
 1953 0091 02       		.uleb128 0x2
 1954 0092 01       		.byte	0x1
 1955 0093 08       		.byte	0x8
 1956 0094 64040000 		.4byte	.LASF13
 1957 0098 04       		.uleb128 0x4
 1958 0099 DE020000 		.4byte	.LASF14
 1959 009d 02       		.byte	0x2
 1960 009e E401     		.2byte	0x1e4
 1961 00a0 A4000000 		.4byte	0xa4
 1962 00a4 05       		.uleb128 0x5
 1963 00a5 77000000 		.4byte	0x77
 1964 00a9 02       		.uleb128 0x2
 1965 00aa 04       		.byte	0x4
 1966 00ab 07       		.byte	0x7
 1967 00ac E4020000 		.4byte	.LASF15
 1968 00b0 06       		.uleb128 0x6
 1969 00b1 82040000 		.4byte	.LASF16
 1970 00b5 01       		.byte	0x1
 1971 00b6 26       		.byte	0x26
 1972 00b7 00000000 		.4byte	.LFB2
 1973 00bb 38000000 		.4byte	.LFE2-.LFB2
 1974 00bf 01       		.uleb128 0x1
 1975 00c0 9C       		.byte	0x9c
 1976 00c1 07       		.uleb128 0x7
 1977 00c2 B2030000 		.4byte	.LASF18
 1978 00c6 01       		.byte	0x1
 1979 00c7 B1       		.byte	0xb1
 1980 00c8 00000000 		.4byte	.LFB3
 1981 00cc 30000000 		.4byte	.LFE3-.LFB3
 1982 00d0 01       		.uleb128 0x1
 1983 00d1 9C       		.byte	0x9c
 1984 00d2 E5000000 		.4byte	0xe5
 1985 00d6 08       		.uleb128 0x8
 1986 00d7 04050000 		.4byte	.LASF20
 1987 00db 01       		.byte	0x1
 1988 00dc B3       		.byte	0xb3
 1989 00dd 6B000000 		.4byte	0x6b
 1990 00e1 02       		.uleb128 0x2
 1991 00e2 91       		.byte	0x91
 1992 00e3 6F       		.sleb128 -17
 1993 00e4 00       		.byte	0
 1994 00e5 06       		.uleb128 0x6
 1995 00e6 00000000 		.4byte	.LASF17
 1996 00ea 01       		.byte	0x1
 1997 00eb E6       		.byte	0xe6
 1998 00ec 00000000 		.4byte	.LFB4
 1999 00f0 24000000 		.4byte	.LFE4-.LFB4
 2000 00f4 01       		.uleb128 0x1
 2001 00f5 9C       		.byte	0x9c
 2002 00f6 09       		.uleb128 0x9
 2003 00f7 BD010000 		.4byte	.LASF19
 2004 00fb 01       		.byte	0x1
 2005 00fc 0001     		.2byte	0x100
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 61


 2006 00fe 00000000 		.4byte	.LFB5
 2007 0102 30000000 		.4byte	.LFE5-.LFB5
 2008 0106 01       		.uleb128 0x1
 2009 0107 9C       		.byte	0x9c
 2010 0108 1C010000 		.4byte	0x11c
 2011 010c 0A       		.uleb128 0xa
 2012 010d 04050000 		.4byte	.LASF20
 2013 0111 01       		.byte	0x1
 2014 0112 0201     		.2byte	0x102
 2015 0114 6B000000 		.4byte	0x6b
 2016 0118 02       		.uleb128 0x2
 2017 0119 91       		.byte	0x91
 2018 011a 6F       		.sleb128 -17
 2019 011b 00       		.byte	0
 2020 011c 09       		.uleb128 0x9
 2021 011d A5020000 		.4byte	.LASF21
 2022 0121 01       		.byte	0x1
 2023 0122 2501     		.2byte	0x125
 2024 0124 00000000 		.4byte	.LFB6
 2025 0128 48000000 		.4byte	.LFE6-.LFB6
 2026 012c 01       		.uleb128 0x1
 2027 012d 9C       		.byte	0x9c
 2028 012e 51010000 		.4byte	0x151
 2029 0132 0B       		.uleb128 0xb
 2030 0133 69040000 		.4byte	.LASF23
 2031 0137 01       		.byte	0x1
 2032 0138 2501     		.2byte	0x125
 2033 013a 77000000 		.4byte	0x77
 2034 013e 02       		.uleb128 0x2
 2035 013f 91       		.byte	0x91
 2036 0140 64       		.sleb128 -28
 2037 0141 0A       		.uleb128 0xa
 2038 0142 04050000 		.4byte	.LASF20
 2039 0146 01       		.byte	0x1
 2040 0147 2701     		.2byte	0x127
 2041 0149 6B000000 		.4byte	0x6b
 2042 014d 02       		.uleb128 0x2
 2043 014e 91       		.byte	0x91
 2044 014f 6F       		.sleb128 -17
 2045 0150 00       		.byte	0
 2046 0151 09       		.uleb128 0x9
 2047 0152 04030000 		.4byte	.LASF22
 2048 0156 01       		.byte	0x1
 2049 0157 4601     		.2byte	0x146
 2050 0159 00000000 		.4byte	.LFB7
 2051 015d 48000000 		.4byte	.LFE7-.LFB7
 2052 0161 01       		.uleb128 0x1
 2053 0162 9C       		.byte	0x9c
 2054 0163 86010000 		.4byte	0x186
 2055 0167 0B       		.uleb128 0xb
 2056 0168 7B000000 		.4byte	.LASF24
 2057 016c 01       		.byte	0x1
 2058 016d 4601     		.2byte	0x146
 2059 016f 77000000 		.4byte	0x77
 2060 0173 02       		.uleb128 0x2
 2061 0174 91       		.byte	0x91
 2062 0175 64       		.sleb128 -28
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 62


 2063 0176 0A       		.uleb128 0xa
 2064 0177 04050000 		.4byte	.LASF20
 2065 017b 01       		.byte	0x1
 2066 017c 4801     		.2byte	0x148
 2067 017e 6B000000 		.4byte	0x6b
 2068 0182 02       		.uleb128 0x2
 2069 0183 91       		.byte	0x91
 2070 0184 6F       		.sleb128 -17
 2071 0185 00       		.byte	0
 2072 0186 09       		.uleb128 0x9
 2073 0187 4A030000 		.4byte	.LASF25
 2074 018b 01       		.byte	0x1
 2075 018c 6B01     		.2byte	0x16b
 2076 018e 00000000 		.4byte	.LFB8
 2077 0192 48000000 		.4byte	.LFE8-.LFB8
 2078 0196 01       		.uleb128 0x1
 2079 0197 9C       		.byte	0x9c
 2080 0198 BB010000 		.4byte	0x1bb
 2081 019c 0B       		.uleb128 0xb
 2082 019d 90030000 		.4byte	.LASF26
 2083 01a1 01       		.byte	0x1
 2084 01a2 6B01     		.2byte	0x16b
 2085 01a4 77000000 		.4byte	0x77
 2086 01a8 02       		.uleb128 0x2
 2087 01a9 91       		.byte	0x91
 2088 01aa 64       		.sleb128 -28
 2089 01ab 0A       		.uleb128 0xa
 2090 01ac 04050000 		.4byte	.LASF20
 2091 01b0 01       		.byte	0x1
 2092 01b1 6D01     		.2byte	0x16d
 2093 01b3 6B000000 		.4byte	0x6b
 2094 01b7 02       		.uleb128 0x2
 2095 01b8 91       		.byte	0x91
 2096 01b9 6F       		.sleb128 -17
 2097 01ba 00       		.byte	0
 2098 01bb 09       		.uleb128 0x9
 2099 01bc 3F020000 		.4byte	.LASF27
 2100 01c0 01       		.byte	0x1
 2101 01c1 8B01     		.2byte	0x18b
 2102 01c3 00000000 		.4byte	.LFB9
 2103 01c7 4C000000 		.4byte	.LFE9-.LFB9
 2104 01cb 01       		.uleb128 0x1
 2105 01cc 9C       		.byte	0x9c
 2106 01cd F0010000 		.4byte	0x1f0
 2107 01d1 0B       		.uleb128 0xb
 2108 01d2 97020000 		.4byte	.LASF28
 2109 01d6 01       		.byte	0x1
 2110 01d7 8B01     		.2byte	0x18b
 2111 01d9 77000000 		.4byte	0x77
 2112 01dd 02       		.uleb128 0x2
 2113 01de 91       		.byte	0x91
 2114 01df 64       		.sleb128 -28
 2115 01e0 0A       		.uleb128 0xa
 2116 01e1 04050000 		.4byte	.LASF20
 2117 01e5 01       		.byte	0x1
 2118 01e6 8D01     		.2byte	0x18d
 2119 01e8 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 63


 2120 01ec 02       		.uleb128 0x2
 2121 01ed 91       		.byte	0x91
 2122 01ee 6F       		.sleb128 -17
 2123 01ef 00       		.byte	0
 2124 01f0 0C       		.uleb128 0xc
 2125 01f1 DA040000 		.4byte	.LASF29
 2126 01f5 01       		.byte	0x1
 2127 01f6 C101     		.2byte	0x1c1
 2128 01f8 00000000 		.4byte	.LFB10
 2129 01fc 1C000000 		.4byte	.LFE10-.LFB10
 2130 0200 01       		.uleb128 0x1
 2131 0201 9C       		.byte	0x9c
 2132 0202 16020000 		.4byte	0x216
 2133 0206 0B       		.uleb128 0xb
 2134 0207 B4010000 		.4byte	.LASF30
 2135 020b 01       		.byte	0x1
 2136 020c C101     		.2byte	0x1c1
 2137 020e 77000000 		.4byte	0x77
 2138 0212 02       		.uleb128 0x2
 2139 0213 91       		.byte	0x91
 2140 0214 74       		.sleb128 -12
 2141 0215 00       		.byte	0
 2142 0216 09       		.uleb128 0x9
 2143 0217 39040000 		.4byte	.LASF31
 2144 021b 01       		.byte	0x1
 2145 021c E501     		.2byte	0x1e5
 2146 021e 00000000 		.4byte	.LFB11
 2147 0222 48000000 		.4byte	.LFE11-.LFB11
 2148 0226 01       		.uleb128 0x1
 2149 0227 9C       		.byte	0x9c
 2150 0228 4B020000 		.4byte	0x24b
 2151 022c 0B       		.uleb128 0xb
 2152 022d 2A050000 		.4byte	.LASF32
 2153 0231 01       		.byte	0x1
 2154 0232 E501     		.2byte	0x1e5
 2155 0234 77000000 		.4byte	0x77
 2156 0238 02       		.uleb128 0x2
 2157 0239 91       		.byte	0x91
 2158 023a 64       		.sleb128 -28
 2159 023b 0A       		.uleb128 0xa
 2160 023c 04050000 		.4byte	.LASF20
 2161 0240 01       		.byte	0x1
 2162 0241 E701     		.2byte	0x1e7
 2163 0243 6B000000 		.4byte	0x6b
 2164 0247 02       		.uleb128 0x2
 2165 0248 91       		.byte	0x91
 2166 0249 6F       		.sleb128 -17
 2167 024a 00       		.byte	0
 2168 024b 09       		.uleb128 0x9
 2169 024c FD000000 		.4byte	.LASF33
 2170 0250 01       		.byte	0x1
 2171 0251 0702     		.2byte	0x207
 2172 0253 00000000 		.4byte	.LFB12
 2173 0257 48000000 		.4byte	.LFE12-.LFB12
 2174 025b 01       		.uleb128 0x1
 2175 025c 9C       		.byte	0x9c
 2176 025d 80020000 		.4byte	0x280
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 64


 2177 0261 0B       		.uleb128 0xb
 2178 0262 E6030000 		.4byte	.LASF34
 2179 0266 01       		.byte	0x1
 2180 0267 0702     		.2byte	0x207
 2181 0269 77000000 		.4byte	0x77
 2182 026d 02       		.uleb128 0x2
 2183 026e 91       		.byte	0x91
 2184 026f 64       		.sleb128 -28
 2185 0270 0A       		.uleb128 0xa
 2186 0271 04050000 		.4byte	.LASF20
 2187 0275 01       		.byte	0x1
 2188 0276 0902     		.2byte	0x209
 2189 0278 6B000000 		.4byte	0x6b
 2190 027c 02       		.uleb128 0x2
 2191 027d 91       		.byte	0x91
 2192 027e 6F       		.sleb128 -17
 2193 027f 00       		.byte	0
 2194 0280 09       		.uleb128 0x9
 2195 0281 22040000 		.4byte	.LASF35
 2196 0285 01       		.byte	0x1
 2197 0286 2802     		.2byte	0x228
 2198 0288 00000000 		.4byte	.LFB13
 2199 028c 4C000000 		.4byte	.LFE13-.LFB13
 2200 0290 01       		.uleb128 0x1
 2201 0291 9C       		.byte	0x9c
 2202 0292 B5020000 		.4byte	0x2b5
 2203 0296 0B       		.uleb128 0xb
 2204 0297 60010000 		.4byte	.LASF36
 2205 029b 01       		.byte	0x1
 2206 029c 2802     		.2byte	0x228
 2207 029e 77000000 		.4byte	0x77
 2208 02a2 02       		.uleb128 0x2
 2209 02a3 91       		.byte	0x91
 2210 02a4 64       		.sleb128 -28
 2211 02a5 0A       		.uleb128 0xa
 2212 02a6 04050000 		.4byte	.LASF20
 2213 02aa 01       		.byte	0x1
 2214 02ab 2A02     		.2byte	0x22a
 2215 02ad 6B000000 		.4byte	0x6b
 2216 02b1 02       		.uleb128 0x2
 2217 02b2 91       		.byte	0x91
 2218 02b3 6F       		.sleb128 -17
 2219 02b4 00       		.byte	0
 2220 02b5 09       		.uleb128 0x9
 2221 02b6 CA010000 		.4byte	.LASF37
 2222 02ba 01       		.byte	0x1
 2223 02bb 4902     		.2byte	0x249
 2224 02bd 00000000 		.4byte	.LFB14
 2225 02c1 48000000 		.4byte	.LFE14-.LFB14
 2226 02c5 01       		.uleb128 0x1
 2227 02c6 9C       		.byte	0x9c
 2228 02c7 EA020000 		.4byte	0x2ea
 2229 02cb 0B       		.uleb128 0xb
 2230 02cc 5B010000 		.4byte	.LASF38
 2231 02d0 01       		.byte	0x1
 2232 02d1 4902     		.2byte	0x249
 2233 02d3 77000000 		.4byte	0x77
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 65


 2234 02d7 02       		.uleb128 0x2
 2235 02d8 91       		.byte	0x91
 2236 02d9 64       		.sleb128 -28
 2237 02da 0A       		.uleb128 0xa
 2238 02db 04050000 		.4byte	.LASF20
 2239 02df 01       		.byte	0x1
 2240 02e0 4B02     		.2byte	0x24b
 2241 02e2 6B000000 		.4byte	0x6b
 2242 02e6 02       		.uleb128 0x2
 2243 02e7 91       		.byte	0x91
 2244 02e8 6F       		.sleb128 -17
 2245 02e9 00       		.byte	0
 2246 02ea 0C       		.uleb128 0xc
 2247 02eb E8000000 		.4byte	.LASF39
 2248 02ef 01       		.byte	0x1
 2249 02f0 6702     		.2byte	0x267
 2250 02f2 00000000 		.4byte	.LFB15
 2251 02f6 1C000000 		.4byte	.LFE15-.LFB15
 2252 02fa 01       		.uleb128 0x1
 2253 02fb 9C       		.byte	0x9c
 2254 02fc 10030000 		.4byte	0x310
 2255 0300 0B       		.uleb128 0xb
 2256 0301 34010000 		.4byte	.LASF40
 2257 0305 01       		.byte	0x1
 2258 0306 6702     		.2byte	0x267
 2259 0308 77000000 		.4byte	0x77
 2260 030c 02       		.uleb128 0x2
 2261 030d 91       		.byte	0x91
 2262 030e 74       		.sleb128 -12
 2263 030f 00       		.byte	0
 2264 0310 0D       		.uleb128 0xd
 2265 0311 5F030000 		.4byte	.LASF45
 2266 0315 01       		.byte	0x1
 2267 0316 7B02     		.2byte	0x27b
 2268 0318 77000000 		.4byte	0x77
 2269 031c 00000000 		.4byte	.LFB16
 2270 0320 18000000 		.4byte	.LFE16-.LFB16
 2271 0324 01       		.uleb128 0x1
 2272 0325 9C       		.byte	0x9c
 2273 0326 09       		.uleb128 0x9
 2274 0327 DF010000 		.4byte	.LASF41
 2275 032b 01       		.byte	0x1
 2276 032c 9802     		.2byte	0x298
 2277 032e 00000000 		.4byte	.LFB17
 2278 0332 48000000 		.4byte	.LFE17-.LFB17
 2279 0336 01       		.uleb128 0x1
 2280 0337 9C       		.byte	0x9c
 2281 0338 5B030000 		.4byte	0x35b
 2282 033c 0B       		.uleb128 0xb
 2283 033d 8F040000 		.4byte	.LASF42
 2284 0341 01       		.byte	0x1
 2285 0342 9802     		.2byte	0x298
 2286 0344 77000000 		.4byte	0x77
 2287 0348 02       		.uleb128 0x2
 2288 0349 91       		.byte	0x91
 2289 034a 64       		.sleb128 -28
 2290 034b 0A       		.uleb128 0xa
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 66


 2291 034c 04050000 		.4byte	.LASF20
 2292 0350 01       		.byte	0x1
 2293 0351 9A02     		.2byte	0x29a
 2294 0353 6B000000 		.4byte	0x6b
 2295 0357 02       		.uleb128 0x2
 2296 0358 91       		.byte	0x91
 2297 0359 6F       		.sleb128 -17
 2298 035a 00       		.byte	0
 2299 035b 0C       		.uleb128 0xc
 2300 035c B3000000 		.4byte	.LASF43
 2301 0360 01       		.byte	0x1
 2302 0361 B502     		.2byte	0x2b5
 2303 0363 00000000 		.4byte	.LFB18
 2304 0367 1C000000 		.4byte	.LFE18-.LFB18
 2305 036b 01       		.uleb128 0x1
 2306 036c 9C       		.byte	0x9c
 2307 036d 81030000 		.4byte	0x381
 2308 0371 0B       		.uleb128 0xb
 2309 0372 3A000000 		.4byte	.LASF44
 2310 0376 01       		.byte	0x1
 2311 0377 B502     		.2byte	0x2b5
 2312 0379 77000000 		.4byte	0x77
 2313 037d 02       		.uleb128 0x2
 2314 037e 91       		.byte	0x91
 2315 037f 74       		.sleb128 -12
 2316 0380 00       		.byte	0
 2317 0381 0D       		.uleb128 0xd
 2318 0382 F7030000 		.4byte	.LASF46
 2319 0386 01       		.byte	0x1
 2320 0387 C902     		.2byte	0x2c9
 2321 0389 77000000 		.4byte	0x77
 2322 038d 00000000 		.4byte	.LFB19
 2323 0391 18000000 		.4byte	.LFE19-.LFB19
 2324 0395 01       		.uleb128 0x1
 2325 0396 9C       		.byte	0x9c
 2326 0397 09       		.uleb128 0x9
 2327 0398 23000000 		.4byte	.LASF47
 2328 039c 01       		.byte	0x1
 2329 039d E302     		.2byte	0x2e3
 2330 039f 00000000 		.4byte	.LFB20
 2331 03a3 48000000 		.4byte	.LFE20-.LFB20
 2332 03a7 01       		.uleb128 0x1
 2333 03a8 9C       		.byte	0x9c
 2334 03a9 CC030000 		.4byte	0x3cc
 2335 03ad 0B       		.uleb128 0xb
 2336 03ae 9B040000 		.4byte	.LASF48
 2337 03b2 01       		.byte	0x1
 2338 03b3 E302     		.2byte	0x2e3
 2339 03b5 77000000 		.4byte	0x77
 2340 03b9 02       		.uleb128 0x2
 2341 03ba 91       		.byte	0x91
 2342 03bb 64       		.sleb128 -28
 2343 03bc 0A       		.uleb128 0xa
 2344 03bd 04050000 		.4byte	.LASF20
 2345 03c1 01       		.byte	0x1
 2346 03c2 E502     		.2byte	0x2e5
 2347 03c4 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 67


 2348 03c8 02       		.uleb128 0x2
 2349 03c9 91       		.byte	0x91
 2350 03ca 6F       		.sleb128 -17
 2351 03cb 00       		.byte	0
 2352 03cc 0C       		.uleb128 0xc
 2353 03cd 9C000000 		.4byte	.LASF49
 2354 03d1 01       		.byte	0x1
 2355 03d2 FE02     		.2byte	0x2fe
 2356 03d4 00000000 		.4byte	.LFB21
 2357 03d8 1C000000 		.4byte	.LFE21-.LFB21
 2358 03dc 01       		.uleb128 0x1
 2359 03dd 9C       		.byte	0x9c
 2360 03de F2030000 		.4byte	0x3f2
 2361 03e2 0B       		.uleb128 0xb
 2362 03e3 C7050000 		.4byte	.LASF50
 2363 03e7 01       		.byte	0x1
 2364 03e8 FE02     		.2byte	0x2fe
 2365 03ea 77000000 		.4byte	0x77
 2366 03ee 02       		.uleb128 0x2
 2367 03ef 91       		.byte	0x91
 2368 03f0 74       		.sleb128 -12
 2369 03f1 00       		.byte	0
 2370 03f2 0D       		.uleb128 0xd
 2371 03f3 B5020000 		.4byte	.LASF51
 2372 03f7 01       		.byte	0x1
 2373 03f8 1203     		.2byte	0x312
 2374 03fa 77000000 		.4byte	0x77
 2375 03fe 00000000 		.4byte	.LFB22
 2376 0402 18000000 		.4byte	.LFE22-.LFB22
 2377 0406 01       		.uleb128 0x1
 2378 0407 9C       		.byte	0x9c
 2379 0408 09       		.uleb128 0x9
 2380 0409 2C030000 		.4byte	.LASF52
 2381 040d 01       		.byte	0x1
 2382 040e 2C03     		.2byte	0x32c
 2383 0410 00000000 		.4byte	.LFB23
 2384 0414 48000000 		.4byte	.LFE23-.LFB23
 2385 0418 01       		.uleb128 0x1
 2386 0419 9C       		.byte	0x9c
 2387 041a 3D040000 		.4byte	0x43d
 2388 041e 0B       		.uleb128 0xb
 2389 041f 9B040000 		.4byte	.LASF48
 2390 0423 01       		.byte	0x1
 2391 0424 2C03     		.2byte	0x32c
 2392 0426 77000000 		.4byte	0x77
 2393 042a 02       		.uleb128 0x2
 2394 042b 91       		.byte	0x91
 2395 042c 64       		.sleb128 -28
 2396 042d 0A       		.uleb128 0xa
 2397 042e 04050000 		.4byte	.LASF20
 2398 0432 01       		.byte	0x1
 2399 0433 2E03     		.2byte	0x32e
 2400 0435 6B000000 		.4byte	0x6b
 2401 0439 02       		.uleb128 0x2
 2402 043a 91       		.byte	0x91
 2403 043b 6F       		.sleb128 -17
 2404 043c 00       		.byte	0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 68


 2405 043d 0C       		.uleb128 0xc
 2406 043e 46010000 		.4byte	.LASF53
 2407 0442 01       		.byte	0x1
 2408 0443 5103     		.2byte	0x351
 2409 0445 00000000 		.4byte	.LFB24
 2410 0449 1C000000 		.4byte	.LFE24-.LFB24
 2411 044d 01       		.uleb128 0x1
 2412 044e 9C       		.byte	0x9c
 2413 044f 63040000 		.4byte	0x463
 2414 0453 0B       		.uleb128 0xb
 2415 0454 42030000 		.4byte	.LASF54
 2416 0458 01       		.byte	0x1
 2417 0459 5103     		.2byte	0x351
 2418 045b 77000000 		.4byte	0x77
 2419 045f 02       		.uleb128 0x2
 2420 0460 91       		.byte	0x91
 2421 0461 74       		.sleb128 -12
 2422 0462 00       		.byte	0
 2423 0463 0D       		.uleb128 0xd
 2424 0464 6E040000 		.4byte	.LASF55
 2425 0468 01       		.byte	0x1
 2426 0469 8403     		.2byte	0x384
 2427 046b 77000000 		.4byte	0x77
 2428 046f 00000000 		.4byte	.LFB25
 2429 0473 18000000 		.4byte	.LFE25-.LFB25
 2430 0477 01       		.uleb128 0x1
 2431 0478 9C       		.byte	0x9c
 2432 0479 0C       		.uleb128 0xc
 2433 047a 9A030000 		.4byte	.LASF56
 2434 047e 01       		.byte	0x1
 2435 047f BA03     		.2byte	0x3ba
 2436 0481 00000000 		.4byte	.LFB26
 2437 0485 1C000000 		.4byte	.LFE26-.LFB26
 2438 0489 01       		.uleb128 0x1
 2439 048a 9C       		.byte	0x9c
 2440 048b 9F040000 		.4byte	0x49f
 2441 048f 0B       		.uleb128 0xb
 2442 0490 D0000000 		.4byte	.LASF57
 2443 0494 01       		.byte	0x1
 2444 0495 BA03     		.2byte	0x3ba
 2445 0497 77000000 		.4byte	0x77
 2446 049b 02       		.uleb128 0x2
 2447 049c 91       		.byte	0x91
 2448 049d 74       		.sleb128 -12
 2449 049e 00       		.byte	0
 2450 049f 0D       		.uleb128 0xd
 2451 04a0 C1030000 		.4byte	.LASF58
 2452 04a4 01       		.byte	0x1
 2453 04a5 E803     		.2byte	0x3e8
 2454 04a7 77000000 		.4byte	0x77
 2455 04ab 00000000 		.4byte	.LFB27
 2456 04af 18000000 		.4byte	.LFE27-.LFB27
 2457 04b3 01       		.uleb128 0x1
 2458 04b4 9C       		.byte	0x9c
 2459 04b5 0D       		.uleb128 0xd
 2460 04b6 86010000 		.4byte	.LASF59
 2461 04ba 01       		.byte	0x1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 69


 2462 04bb 1604     		.2byte	0x416
 2463 04bd 77000000 		.4byte	0x77
 2464 04c1 00000000 		.4byte	.LFB28
 2465 04c5 18000000 		.4byte	.LFE28-.LFB28
 2466 04c9 01       		.uleb128 0x1
 2467 04ca 9C       		.byte	0x9c
 2468 04cb 0D       		.uleb128 0xd
 2469 04cc 16010000 		.4byte	.LASF60
 2470 04d0 01       		.byte	0x1
 2471 04d1 2B04     		.2byte	0x42b
 2472 04d3 77000000 		.4byte	0x77
 2473 04d7 00000000 		.4byte	.LFB29
 2474 04db 18000000 		.4byte	.LFE29-.LFB29
 2475 04df 01       		.uleb128 0x1
 2476 04e0 9C       		.byte	0x9c
 2477 04e1 09       		.uleb128 0x9
 2478 04e2 ED020000 		.4byte	.LASF61
 2479 04e6 01       		.byte	0x1
 2480 04e7 4604     		.2byte	0x446
 2481 04e9 00000000 		.4byte	.LFB30
 2482 04ed 44000000 		.4byte	.LFE30-.LFB30
 2483 04f1 01       		.uleb128 0x1
 2484 04f2 9C       		.byte	0x9c
 2485 04f3 16050000 		.4byte	0x516
 2486 04f7 0B       		.uleb128 0xb
 2487 04f8 3A010000 		.4byte	.LASF62
 2488 04fc 01       		.byte	0x1
 2489 04fd 4604     		.2byte	0x446
 2490 04ff 77000000 		.4byte	0x77
 2491 0503 02       		.uleb128 0x2
 2492 0504 91       		.byte	0x91
 2493 0505 64       		.sleb128 -28
 2494 0506 0A       		.uleb128 0xa
 2495 0507 04050000 		.4byte	.LASF20
 2496 050b 01       		.byte	0x1
 2497 050c 4804     		.2byte	0x448
 2498 050e 6B000000 		.4byte	0x6b
 2499 0512 02       		.uleb128 0x2
 2500 0513 91       		.byte	0x91
 2501 0514 6F       		.sleb128 -17
 2502 0515 00       		.byte	0
 2503 0516 09       		.uleb128 0x9
 2504 0517 16030000 		.4byte	.LASF63
 2505 051b 01       		.byte	0x1
 2506 051c 6704     		.2byte	0x467
 2507 051e 00000000 		.4byte	.LFB31
 2508 0522 44000000 		.4byte	.LFE31-.LFB31
 2509 0526 01       		.uleb128 0x1
 2510 0527 9C       		.byte	0x9c
 2511 0528 4B050000 		.4byte	0x54b
 2512 052c 0B       		.uleb128 0xb
 2513 052d 3A010000 		.4byte	.LASF62
 2514 0531 01       		.byte	0x1
 2515 0532 6704     		.2byte	0x467
 2516 0534 77000000 		.4byte	0x77
 2517 0538 02       		.uleb128 0x2
 2518 0539 91       		.byte	0x91
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 70


 2519 053a 64       		.sleb128 -28
 2520 053b 0A       		.uleb128 0xa
 2521 053c 04050000 		.4byte	.LASF20
 2522 0540 01       		.byte	0x1
 2523 0541 6904     		.2byte	0x469
 2524 0543 6B000000 		.4byte	0x6b
 2525 0547 02       		.uleb128 0x2
 2526 0548 91       		.byte	0x91
 2527 0549 6F       		.sleb128 -17
 2528 054a 00       		.byte	0
 2529 054b 09       		.uleb128 0x9
 2530 054c 09020000 		.4byte	.LASF64
 2531 0550 01       		.byte	0x1
 2532 0551 8804     		.2byte	0x488
 2533 0553 00000000 		.4byte	.LFB32
 2534 0557 48000000 		.4byte	.LFE32-.LFB32
 2535 055b 01       		.uleb128 0x1
 2536 055c 9C       		.byte	0x9c
 2537 055d 80050000 		.4byte	0x580
 2538 0561 0B       		.uleb128 0xb
 2539 0562 3A010000 		.4byte	.LASF62
 2540 0566 01       		.byte	0x1
 2541 0567 8804     		.2byte	0x488
 2542 0569 77000000 		.4byte	0x77
 2543 056d 02       		.uleb128 0x2
 2544 056e 91       		.byte	0x91
 2545 056f 64       		.sleb128 -28
 2546 0570 0A       		.uleb128 0xa
 2547 0571 04050000 		.4byte	.LASF20
 2548 0575 01       		.byte	0x1
 2549 0576 8A04     		.2byte	0x48a
 2550 0578 6B000000 		.4byte	0x6b
 2551 057c 02       		.uleb128 0x2
 2552 057d 91       		.byte	0x91
 2553 057e 6F       		.sleb128 -17
 2554 057f 00       		.byte	0
 2555 0580 09       		.uleb128 0x9
 2556 0581 50040000 		.4byte	.LASF65
 2557 0585 01       		.byte	0x1
 2558 0586 A804     		.2byte	0x4a8
 2559 0588 00000000 		.4byte	.LFB33
 2560 058c 44000000 		.4byte	.LFE33-.LFB33
 2561 0590 01       		.uleb128 0x1
 2562 0591 9C       		.byte	0x9c
 2563 0592 B5050000 		.4byte	0x5b5
 2564 0596 0B       		.uleb128 0xb
 2565 0597 3A010000 		.4byte	.LASF62
 2566 059b 01       		.byte	0x1
 2567 059c A804     		.2byte	0x4a8
 2568 059e 77000000 		.4byte	0x77
 2569 05a2 02       		.uleb128 0x2
 2570 05a3 91       		.byte	0x91
 2571 05a4 64       		.sleb128 -28
 2572 05a5 0A       		.uleb128 0xa
 2573 05a6 04050000 		.4byte	.LASF20
 2574 05aa 01       		.byte	0x1
 2575 05ab AA04     		.2byte	0x4aa
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 71


 2576 05ad 6B000000 		.4byte	0x6b
 2577 05b1 02       		.uleb128 0x2
 2578 05b2 91       		.byte	0x91
 2579 05b3 6F       		.sleb128 -17
 2580 05b4 00       		.byte	0
 2581 05b5 09       		.uleb128 0x9
 2582 05b6 0E000000 		.4byte	.LASF66
 2583 05ba 01       		.byte	0x1
 2584 05bb C904     		.2byte	0x4c9
 2585 05bd 00000000 		.4byte	.LFB34
 2586 05c1 44000000 		.4byte	.LFE34-.LFB34
 2587 05c5 01       		.uleb128 0x1
 2588 05c6 9C       		.byte	0x9c
 2589 05c7 EA050000 		.4byte	0x5ea
 2590 05cb 0B       		.uleb128 0xb
 2591 05cc 3A010000 		.4byte	.LASF62
 2592 05d0 01       		.byte	0x1
 2593 05d1 C904     		.2byte	0x4c9
 2594 05d3 77000000 		.4byte	0x77
 2595 05d7 02       		.uleb128 0x2
 2596 05d8 91       		.byte	0x91
 2597 05d9 64       		.sleb128 -28
 2598 05da 0A       		.uleb128 0xa
 2599 05db 04050000 		.4byte	.LASF20
 2600 05df 01       		.byte	0x1
 2601 05e0 CB04     		.2byte	0x4cb
 2602 05e2 6B000000 		.4byte	0x6b
 2603 05e6 02       		.uleb128 0x2
 2604 05e7 91       		.byte	0x91
 2605 05e8 6F       		.sleb128 -17
 2606 05e9 00       		.byte	0
 2607 05ea 09       		.uleb128 0x9
 2608 05eb ED040000 		.4byte	.LASF67
 2609 05ef 01       		.byte	0x1
 2610 05f0 F104     		.2byte	0x4f1
 2611 05f2 00000000 		.4byte	.LFB35
 2612 05f6 38000000 		.4byte	.LFE35-.LFB35
 2613 05fa 01       		.uleb128 0x1
 2614 05fb 9C       		.byte	0x9c
 2615 05fc 2E060000 		.4byte	0x62e
 2616 0600 0B       		.uleb128 0xb
 2617 0601 5B010000 		.4byte	.LASF38
 2618 0605 01       		.byte	0x1
 2619 0606 F104     		.2byte	0x4f1
 2620 0608 77000000 		.4byte	0x77
 2621 060c 02       		.uleb128 0x2
 2622 060d 91       		.byte	0x91
 2623 060e 64       		.sleb128 -28
 2624 060f 0B       		.uleb128 0xb
 2625 0610 9A010000 		.4byte	.LASF68
 2626 0614 01       		.byte	0x1
 2627 0615 F104     		.2byte	0x4f1
 2628 0617 77000000 		.4byte	0x77
 2629 061b 02       		.uleb128 0x2
 2630 061c 91       		.byte	0x91
 2631 061d 60       		.sleb128 -32
 2632 061e 0A       		.uleb128 0xa
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 72


 2633 061f 04050000 		.4byte	.LASF20
 2634 0623 01       		.byte	0x1
 2635 0624 F304     		.2byte	0x4f3
 2636 0626 6B000000 		.4byte	0x6b
 2637 062a 02       		.uleb128 0x2
 2638 062b 91       		.byte	0x91
 2639 062c 6F       		.sleb128 -17
 2640 062d 00       		.byte	0
 2641 062e 0D       		.uleb128 0xd
 2642 062f CB020000 		.4byte	.LASF69
 2643 0633 01       		.byte	0x1
 2644 0634 0E05     		.2byte	0x50e
 2645 0636 77000000 		.4byte	0x77
 2646 063a 00000000 		.4byte	.LFB36
 2647 063e 20000000 		.4byte	.LFE36-.LFB36
 2648 0642 01       		.uleb128 0x1
 2649 0643 9C       		.byte	0x9c
 2650 0644 0C       		.uleb128 0xc
 2651 0645 C1040000 		.4byte	.LASF70
 2652 0649 01       		.byte	0x1
 2653 064a 2705     		.2byte	0x527
 2654 064c 00000000 		.4byte	.LFB37
 2655 0650 18000000 		.4byte	.LFE37-.LFB37
 2656 0654 01       		.uleb128 0x1
 2657 0655 9C       		.byte	0x9c
 2658 0656 6A060000 		.4byte	0x66a
 2659 065a 0B       		.uleb128 0xb
 2660 065b 14040000 		.4byte	.LASF71
 2661 065f 01       		.byte	0x1
 2662 0660 2705     		.2byte	0x527
 2663 0662 77000000 		.4byte	0x77
 2664 0666 02       		.uleb128 0x2
 2665 0667 91       		.byte	0x91
 2666 0668 74       		.sleb128 -12
 2667 0669 00       		.byte	0
 2668 066a 0D       		.uleb128 0xd
 2669 066b 1E020000 		.4byte	.LASF72
 2670 066f 01       		.byte	0x1
 2671 0670 3E05     		.2byte	0x53e
 2672 0672 77000000 		.4byte	0x77
 2673 0676 00000000 		.4byte	.LFB38
 2674 067a 14000000 		.4byte	.LFE38-.LFB38
 2675 067e 01       		.uleb128 0x1
 2676 067f 9C       		.byte	0x9c
 2677 0680 0D       		.uleb128 0xd
 2678 0681 A6040000 		.4byte	.LASF73
 2679 0685 01       		.byte	0x1
 2680 0686 5505     		.2byte	0x555
 2681 0688 77000000 		.4byte	0x77
 2682 068c 00000000 		.4byte	.LFB39
 2683 0690 14000000 		.4byte	.LFE39-.LFB39
 2684 0694 01       		.uleb128 0x1
 2685 0695 9C       		.byte	0x9c
 2686 0696 0C       		.uleb128 0xc
 2687 0697 73030000 		.4byte	.LASF74
 2688 069b 01       		.byte	0x1
 2689 069c 6C05     		.2byte	0x56c
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 73


 2690 069e 00000000 		.4byte	.LFB40
 2691 06a2 18000000 		.4byte	.LFE40-.LFB40
 2692 06a6 01       		.uleb128 0x1
 2693 06a7 9C       		.byte	0x9c
 2694 06a8 BC060000 		.4byte	0x6bc
 2695 06ac 0B       		.uleb128 0xb
 2696 06ad 14040000 		.4byte	.LASF71
 2697 06b1 01       		.byte	0x1
 2698 06b2 6C05     		.2byte	0x56c
 2699 06b4 77000000 		.4byte	0x77
 2700 06b8 02       		.uleb128 0x2
 2701 06b9 91       		.byte	0x91
 2702 06ba 74       		.sleb128 -12
 2703 06bb 00       		.byte	0
 2704 06bc 0C       		.uleb128 0xc
 2705 06bd 15050000 		.4byte	.LASF75
 2706 06c1 01       		.byte	0x1
 2707 06c2 8305     		.2byte	0x583
 2708 06c4 00000000 		.4byte	.LFB41
 2709 06c8 18000000 		.4byte	.LFE41-.LFB41
 2710 06cc 01       		.uleb128 0x1
 2711 06cd 9C       		.byte	0x9c
 2712 06ce E2060000 		.4byte	0x6e2
 2713 06d2 0B       		.uleb128 0xb
 2714 06d3 14040000 		.4byte	.LASF71
 2715 06d7 01       		.byte	0x1
 2716 06d8 8305     		.2byte	0x583
 2717 06da 77000000 		.4byte	0x77
 2718 06de 02       		.uleb128 0x2
 2719 06df 91       		.byte	0x91
 2720 06e0 74       		.sleb128 -12
 2721 06e1 00       		.byte	0
 2722 06e2 0E       		.uleb128 0xe
 2723 06e3 69010000 		.4byte	.LASF79
 2724 06e7 01       		.byte	0x1
 2725 06e8 15       		.byte	0x15
 2726 06e9 6B000000 		.4byte	0x6b
 2727 06ed 05       		.uleb128 0x5
 2728 06ee 03       		.byte	0x3
 2729 06ef 00000000 		.4byte	Timer_1_initVar
 2730 06f3 00       		.byte	0
 2731              		.section	.debug_abbrev,"",%progbits
 2732              	.Ldebug_abbrev0:
 2733 0000 01       		.uleb128 0x1
 2734 0001 11       		.uleb128 0x11
 2735 0002 01       		.byte	0x1
 2736 0003 25       		.uleb128 0x25
 2737 0004 0E       		.uleb128 0xe
 2738 0005 13       		.uleb128 0x13
 2739 0006 0B       		.uleb128 0xb
 2740 0007 03       		.uleb128 0x3
 2741 0008 0E       		.uleb128 0xe
 2742 0009 1B       		.uleb128 0x1b
 2743 000a 0E       		.uleb128 0xe
 2744 000b 55       		.uleb128 0x55
 2745 000c 17       		.uleb128 0x17
 2746 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 74


 2747 000e 01       		.uleb128 0x1
 2748 000f 10       		.uleb128 0x10
 2749 0010 17       		.uleb128 0x17
 2750 0011 00       		.byte	0
 2751 0012 00       		.byte	0
 2752 0013 02       		.uleb128 0x2
 2753 0014 24       		.uleb128 0x24
 2754 0015 00       		.byte	0
 2755 0016 0B       		.uleb128 0xb
 2756 0017 0B       		.uleb128 0xb
 2757 0018 3E       		.uleb128 0x3e
 2758 0019 0B       		.uleb128 0xb
 2759 001a 03       		.uleb128 0x3
 2760 001b 0E       		.uleb128 0xe
 2761 001c 00       		.byte	0
 2762 001d 00       		.byte	0
 2763 001e 03       		.uleb128 0x3
 2764 001f 24       		.uleb128 0x24
 2765 0020 00       		.byte	0
 2766 0021 0B       		.uleb128 0xb
 2767 0022 0B       		.uleb128 0xb
 2768 0023 3E       		.uleb128 0x3e
 2769 0024 0B       		.uleb128 0xb
 2770 0025 03       		.uleb128 0x3
 2771 0026 08       		.uleb128 0x8
 2772 0027 00       		.byte	0
 2773 0028 00       		.byte	0
 2774 0029 04       		.uleb128 0x4
 2775 002a 16       		.uleb128 0x16
 2776 002b 00       		.byte	0
 2777 002c 03       		.uleb128 0x3
 2778 002d 0E       		.uleb128 0xe
 2779 002e 3A       		.uleb128 0x3a
 2780 002f 0B       		.uleb128 0xb
 2781 0030 3B       		.uleb128 0x3b
 2782 0031 05       		.uleb128 0x5
 2783 0032 49       		.uleb128 0x49
 2784 0033 13       		.uleb128 0x13
 2785 0034 00       		.byte	0
 2786 0035 00       		.byte	0
 2787 0036 05       		.uleb128 0x5
 2788 0037 35       		.uleb128 0x35
 2789 0038 00       		.byte	0
 2790 0039 49       		.uleb128 0x49
 2791 003a 13       		.uleb128 0x13
 2792 003b 00       		.byte	0
 2793 003c 00       		.byte	0
 2794 003d 06       		.uleb128 0x6
 2795 003e 2E       		.uleb128 0x2e
 2796 003f 00       		.byte	0
 2797 0040 3F       		.uleb128 0x3f
 2798 0041 19       		.uleb128 0x19
 2799 0042 03       		.uleb128 0x3
 2800 0043 0E       		.uleb128 0xe
 2801 0044 3A       		.uleb128 0x3a
 2802 0045 0B       		.uleb128 0xb
 2803 0046 3B       		.uleb128 0x3b
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 75


 2804 0047 0B       		.uleb128 0xb
 2805 0048 27       		.uleb128 0x27
 2806 0049 19       		.uleb128 0x19
 2807 004a 11       		.uleb128 0x11
 2808 004b 01       		.uleb128 0x1
 2809 004c 12       		.uleb128 0x12
 2810 004d 06       		.uleb128 0x6
 2811 004e 40       		.uleb128 0x40
 2812 004f 18       		.uleb128 0x18
 2813 0050 9642     		.uleb128 0x2116
 2814 0052 19       		.uleb128 0x19
 2815 0053 00       		.byte	0
 2816 0054 00       		.byte	0
 2817 0055 07       		.uleb128 0x7
 2818 0056 2E       		.uleb128 0x2e
 2819 0057 01       		.byte	0x1
 2820 0058 3F       		.uleb128 0x3f
 2821 0059 19       		.uleb128 0x19
 2822 005a 03       		.uleb128 0x3
 2823 005b 0E       		.uleb128 0xe
 2824 005c 3A       		.uleb128 0x3a
 2825 005d 0B       		.uleb128 0xb
 2826 005e 3B       		.uleb128 0x3b
 2827 005f 0B       		.uleb128 0xb
 2828 0060 27       		.uleb128 0x27
 2829 0061 19       		.uleb128 0x19
 2830 0062 11       		.uleb128 0x11
 2831 0063 01       		.uleb128 0x1
 2832 0064 12       		.uleb128 0x12
 2833 0065 06       		.uleb128 0x6
 2834 0066 40       		.uleb128 0x40
 2835 0067 18       		.uleb128 0x18
 2836 0068 9642     		.uleb128 0x2116
 2837 006a 19       		.uleb128 0x19
 2838 006b 01       		.uleb128 0x1
 2839 006c 13       		.uleb128 0x13
 2840 006d 00       		.byte	0
 2841 006e 00       		.byte	0
 2842 006f 08       		.uleb128 0x8
 2843 0070 34       		.uleb128 0x34
 2844 0071 00       		.byte	0
 2845 0072 03       		.uleb128 0x3
 2846 0073 0E       		.uleb128 0xe
 2847 0074 3A       		.uleb128 0x3a
 2848 0075 0B       		.uleb128 0xb
 2849 0076 3B       		.uleb128 0x3b
 2850 0077 0B       		.uleb128 0xb
 2851 0078 49       		.uleb128 0x49
 2852 0079 13       		.uleb128 0x13
 2853 007a 02       		.uleb128 0x2
 2854 007b 18       		.uleb128 0x18
 2855 007c 00       		.byte	0
 2856 007d 00       		.byte	0
 2857 007e 09       		.uleb128 0x9
 2858 007f 2E       		.uleb128 0x2e
 2859 0080 01       		.byte	0x1
 2860 0081 3F       		.uleb128 0x3f
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 76


 2861 0082 19       		.uleb128 0x19
 2862 0083 03       		.uleb128 0x3
 2863 0084 0E       		.uleb128 0xe
 2864 0085 3A       		.uleb128 0x3a
 2865 0086 0B       		.uleb128 0xb
 2866 0087 3B       		.uleb128 0x3b
 2867 0088 05       		.uleb128 0x5
 2868 0089 27       		.uleb128 0x27
 2869 008a 19       		.uleb128 0x19
 2870 008b 11       		.uleb128 0x11
 2871 008c 01       		.uleb128 0x1
 2872 008d 12       		.uleb128 0x12
 2873 008e 06       		.uleb128 0x6
 2874 008f 40       		.uleb128 0x40
 2875 0090 18       		.uleb128 0x18
 2876 0091 9642     		.uleb128 0x2116
 2877 0093 19       		.uleb128 0x19
 2878 0094 01       		.uleb128 0x1
 2879 0095 13       		.uleb128 0x13
 2880 0096 00       		.byte	0
 2881 0097 00       		.byte	0
 2882 0098 0A       		.uleb128 0xa
 2883 0099 34       		.uleb128 0x34
 2884 009a 00       		.byte	0
 2885 009b 03       		.uleb128 0x3
 2886 009c 0E       		.uleb128 0xe
 2887 009d 3A       		.uleb128 0x3a
 2888 009e 0B       		.uleb128 0xb
 2889 009f 3B       		.uleb128 0x3b
 2890 00a0 05       		.uleb128 0x5
 2891 00a1 49       		.uleb128 0x49
 2892 00a2 13       		.uleb128 0x13
 2893 00a3 02       		.uleb128 0x2
 2894 00a4 18       		.uleb128 0x18
 2895 00a5 00       		.byte	0
 2896 00a6 00       		.byte	0
 2897 00a7 0B       		.uleb128 0xb
 2898 00a8 05       		.uleb128 0x5
 2899 00a9 00       		.byte	0
 2900 00aa 03       		.uleb128 0x3
 2901 00ab 0E       		.uleb128 0xe
 2902 00ac 3A       		.uleb128 0x3a
 2903 00ad 0B       		.uleb128 0xb
 2904 00ae 3B       		.uleb128 0x3b
 2905 00af 05       		.uleb128 0x5
 2906 00b0 49       		.uleb128 0x49
 2907 00b1 13       		.uleb128 0x13
 2908 00b2 02       		.uleb128 0x2
 2909 00b3 18       		.uleb128 0x18
 2910 00b4 00       		.byte	0
 2911 00b5 00       		.byte	0
 2912 00b6 0C       		.uleb128 0xc
 2913 00b7 2E       		.uleb128 0x2e
 2914 00b8 01       		.byte	0x1
 2915 00b9 3F       		.uleb128 0x3f
 2916 00ba 19       		.uleb128 0x19
 2917 00bb 03       		.uleb128 0x3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 77


 2918 00bc 0E       		.uleb128 0xe
 2919 00bd 3A       		.uleb128 0x3a
 2920 00be 0B       		.uleb128 0xb
 2921 00bf 3B       		.uleb128 0x3b
 2922 00c0 05       		.uleb128 0x5
 2923 00c1 27       		.uleb128 0x27
 2924 00c2 19       		.uleb128 0x19
 2925 00c3 11       		.uleb128 0x11
 2926 00c4 01       		.uleb128 0x1
 2927 00c5 12       		.uleb128 0x12
 2928 00c6 06       		.uleb128 0x6
 2929 00c7 40       		.uleb128 0x40
 2930 00c8 18       		.uleb128 0x18
 2931 00c9 9742     		.uleb128 0x2117
 2932 00cb 19       		.uleb128 0x19
 2933 00cc 01       		.uleb128 0x1
 2934 00cd 13       		.uleb128 0x13
 2935 00ce 00       		.byte	0
 2936 00cf 00       		.byte	0
 2937 00d0 0D       		.uleb128 0xd
 2938 00d1 2E       		.uleb128 0x2e
 2939 00d2 00       		.byte	0
 2940 00d3 3F       		.uleb128 0x3f
 2941 00d4 19       		.uleb128 0x19
 2942 00d5 03       		.uleb128 0x3
 2943 00d6 0E       		.uleb128 0xe
 2944 00d7 3A       		.uleb128 0x3a
 2945 00d8 0B       		.uleb128 0xb
 2946 00d9 3B       		.uleb128 0x3b
 2947 00da 05       		.uleb128 0x5
 2948 00db 27       		.uleb128 0x27
 2949 00dc 19       		.uleb128 0x19
 2950 00dd 49       		.uleb128 0x49
 2951 00de 13       		.uleb128 0x13
 2952 00df 11       		.uleb128 0x11
 2953 00e0 01       		.uleb128 0x1
 2954 00e1 12       		.uleb128 0x12
 2955 00e2 06       		.uleb128 0x6
 2956 00e3 40       		.uleb128 0x40
 2957 00e4 18       		.uleb128 0x18
 2958 00e5 9742     		.uleb128 0x2117
 2959 00e7 19       		.uleb128 0x19
 2960 00e8 00       		.byte	0
 2961 00e9 00       		.byte	0
 2962 00ea 0E       		.uleb128 0xe
 2963 00eb 34       		.uleb128 0x34
 2964 00ec 00       		.byte	0
 2965 00ed 03       		.uleb128 0x3
 2966 00ee 0E       		.uleb128 0xe
 2967 00ef 3A       		.uleb128 0x3a
 2968 00f0 0B       		.uleb128 0xb
 2969 00f1 3B       		.uleb128 0x3b
 2970 00f2 0B       		.uleb128 0xb
 2971 00f3 49       		.uleb128 0x49
 2972 00f4 13       		.uleb128 0x13
 2973 00f5 3F       		.uleb128 0x3f
 2974 00f6 19       		.uleb128 0x19
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 78


 2975 00f7 02       		.uleb128 0x2
 2976 00f8 18       		.uleb128 0x18
 2977 00f9 00       		.byte	0
 2978 00fa 00       		.byte	0
 2979 00fb 00       		.byte	0
 2980              		.section	.debug_aranges,"",%progbits
 2981 0000 54010000 		.4byte	0x154
 2982 0004 0200     		.2byte	0x2
 2983 0006 00000000 		.4byte	.Ldebug_info0
 2984 000a 04       		.byte	0x4
 2985 000b 00       		.byte	0
 2986 000c 0000     		.2byte	0
 2987 000e 0000     		.2byte	0
 2988 0010 00000000 		.4byte	.LFB2
 2989 0014 38000000 		.4byte	.LFE2-.LFB2
 2990 0018 00000000 		.4byte	.LFB3
 2991 001c 30000000 		.4byte	.LFE3-.LFB3
 2992 0020 00000000 		.4byte	.LFB4
 2993 0024 24000000 		.4byte	.LFE4-.LFB4
 2994 0028 00000000 		.4byte	.LFB5
 2995 002c 30000000 		.4byte	.LFE5-.LFB5
 2996 0030 00000000 		.4byte	.LFB6
 2997 0034 48000000 		.4byte	.LFE6-.LFB6
 2998 0038 00000000 		.4byte	.LFB7
 2999 003c 48000000 		.4byte	.LFE7-.LFB7
 3000 0040 00000000 		.4byte	.LFB8
 3001 0044 48000000 		.4byte	.LFE8-.LFB8
 3002 0048 00000000 		.4byte	.LFB9
 3003 004c 4C000000 		.4byte	.LFE9-.LFB9
 3004 0050 00000000 		.4byte	.LFB10
 3005 0054 1C000000 		.4byte	.LFE10-.LFB10
 3006 0058 00000000 		.4byte	.LFB11
 3007 005c 48000000 		.4byte	.LFE11-.LFB11
 3008 0060 00000000 		.4byte	.LFB12
 3009 0064 48000000 		.4byte	.LFE12-.LFB12
 3010 0068 00000000 		.4byte	.LFB13
 3011 006c 4C000000 		.4byte	.LFE13-.LFB13
 3012 0070 00000000 		.4byte	.LFB14
 3013 0074 48000000 		.4byte	.LFE14-.LFB14
 3014 0078 00000000 		.4byte	.LFB15
 3015 007c 1C000000 		.4byte	.LFE15-.LFB15
 3016 0080 00000000 		.4byte	.LFB16
 3017 0084 18000000 		.4byte	.LFE16-.LFB16
 3018 0088 00000000 		.4byte	.LFB17
 3019 008c 48000000 		.4byte	.LFE17-.LFB17
 3020 0090 00000000 		.4byte	.LFB18
 3021 0094 1C000000 		.4byte	.LFE18-.LFB18
 3022 0098 00000000 		.4byte	.LFB19
 3023 009c 18000000 		.4byte	.LFE19-.LFB19
 3024 00a0 00000000 		.4byte	.LFB20
 3025 00a4 48000000 		.4byte	.LFE20-.LFB20
 3026 00a8 00000000 		.4byte	.LFB21
 3027 00ac 1C000000 		.4byte	.LFE21-.LFB21
 3028 00b0 00000000 		.4byte	.LFB22
 3029 00b4 18000000 		.4byte	.LFE22-.LFB22
 3030 00b8 00000000 		.4byte	.LFB23
 3031 00bc 48000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 79


 3032 00c0 00000000 		.4byte	.LFB24
 3033 00c4 1C000000 		.4byte	.LFE24-.LFB24
 3034 00c8 00000000 		.4byte	.LFB25
 3035 00cc 18000000 		.4byte	.LFE25-.LFB25
 3036 00d0 00000000 		.4byte	.LFB26
 3037 00d4 1C000000 		.4byte	.LFE26-.LFB26
 3038 00d8 00000000 		.4byte	.LFB27
 3039 00dc 18000000 		.4byte	.LFE27-.LFB27
 3040 00e0 00000000 		.4byte	.LFB28
 3041 00e4 18000000 		.4byte	.LFE28-.LFB28
 3042 00e8 00000000 		.4byte	.LFB29
 3043 00ec 18000000 		.4byte	.LFE29-.LFB29
 3044 00f0 00000000 		.4byte	.LFB30
 3045 00f4 44000000 		.4byte	.LFE30-.LFB30
 3046 00f8 00000000 		.4byte	.LFB31
 3047 00fc 44000000 		.4byte	.LFE31-.LFB31
 3048 0100 00000000 		.4byte	.LFB32
 3049 0104 48000000 		.4byte	.LFE32-.LFB32
 3050 0108 00000000 		.4byte	.LFB33
 3051 010c 44000000 		.4byte	.LFE33-.LFB33
 3052 0110 00000000 		.4byte	.LFB34
 3053 0114 44000000 		.4byte	.LFE34-.LFB34
 3054 0118 00000000 		.4byte	.LFB35
 3055 011c 38000000 		.4byte	.LFE35-.LFB35
 3056 0120 00000000 		.4byte	.LFB36
 3057 0124 20000000 		.4byte	.LFE36-.LFB36
 3058 0128 00000000 		.4byte	.LFB37
 3059 012c 18000000 		.4byte	.LFE37-.LFB37
 3060 0130 00000000 		.4byte	.LFB38
 3061 0134 14000000 		.4byte	.LFE38-.LFB38
 3062 0138 00000000 		.4byte	.LFB39
 3063 013c 14000000 		.4byte	.LFE39-.LFB39
 3064 0140 00000000 		.4byte	.LFB40
 3065 0144 18000000 		.4byte	.LFE40-.LFB40
 3066 0148 00000000 		.4byte	.LFB41
 3067 014c 18000000 		.4byte	.LFE41-.LFB41
 3068 0150 00000000 		.4byte	0
 3069 0154 00000000 		.4byte	0
 3070              		.section	.debug_ranges,"",%progbits
 3071              	.Ldebug_ranges0:
 3072 0000 00000000 		.4byte	.LFB2
 3073 0004 38000000 		.4byte	.LFE2
 3074 0008 00000000 		.4byte	.LFB3
 3075 000c 30000000 		.4byte	.LFE3
 3076 0010 00000000 		.4byte	.LFB4
 3077 0014 24000000 		.4byte	.LFE4
 3078 0018 00000000 		.4byte	.LFB5
 3079 001c 30000000 		.4byte	.LFE5
 3080 0020 00000000 		.4byte	.LFB6
 3081 0024 48000000 		.4byte	.LFE6
 3082 0028 00000000 		.4byte	.LFB7
 3083 002c 48000000 		.4byte	.LFE7
 3084 0030 00000000 		.4byte	.LFB8
 3085 0034 48000000 		.4byte	.LFE8
 3086 0038 00000000 		.4byte	.LFB9
 3087 003c 4C000000 		.4byte	.LFE9
 3088 0040 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 80


 3089 0044 1C000000 		.4byte	.LFE10
 3090 0048 00000000 		.4byte	.LFB11
 3091 004c 48000000 		.4byte	.LFE11
 3092 0050 00000000 		.4byte	.LFB12
 3093 0054 48000000 		.4byte	.LFE12
 3094 0058 00000000 		.4byte	.LFB13
 3095 005c 4C000000 		.4byte	.LFE13
 3096 0060 00000000 		.4byte	.LFB14
 3097 0064 48000000 		.4byte	.LFE14
 3098 0068 00000000 		.4byte	.LFB15
 3099 006c 1C000000 		.4byte	.LFE15
 3100 0070 00000000 		.4byte	.LFB16
 3101 0074 18000000 		.4byte	.LFE16
 3102 0078 00000000 		.4byte	.LFB17
 3103 007c 48000000 		.4byte	.LFE17
 3104 0080 00000000 		.4byte	.LFB18
 3105 0084 1C000000 		.4byte	.LFE18
 3106 0088 00000000 		.4byte	.LFB19
 3107 008c 18000000 		.4byte	.LFE19
 3108 0090 00000000 		.4byte	.LFB20
 3109 0094 48000000 		.4byte	.LFE20
 3110 0098 00000000 		.4byte	.LFB21
 3111 009c 1C000000 		.4byte	.LFE21
 3112 00a0 00000000 		.4byte	.LFB22
 3113 00a4 18000000 		.4byte	.LFE22
 3114 00a8 00000000 		.4byte	.LFB23
 3115 00ac 48000000 		.4byte	.LFE23
 3116 00b0 00000000 		.4byte	.LFB24
 3117 00b4 1C000000 		.4byte	.LFE24
 3118 00b8 00000000 		.4byte	.LFB25
 3119 00bc 18000000 		.4byte	.LFE25
 3120 00c0 00000000 		.4byte	.LFB26
 3121 00c4 1C000000 		.4byte	.LFE26
 3122 00c8 00000000 		.4byte	.LFB27
 3123 00cc 18000000 		.4byte	.LFE27
 3124 00d0 00000000 		.4byte	.LFB28
 3125 00d4 18000000 		.4byte	.LFE28
 3126 00d8 00000000 		.4byte	.LFB29
 3127 00dc 18000000 		.4byte	.LFE29
 3128 00e0 00000000 		.4byte	.LFB30
 3129 00e4 44000000 		.4byte	.LFE30
 3130 00e8 00000000 		.4byte	.LFB31
 3131 00ec 44000000 		.4byte	.LFE31
 3132 00f0 00000000 		.4byte	.LFB32
 3133 00f4 48000000 		.4byte	.LFE32
 3134 00f8 00000000 		.4byte	.LFB33
 3135 00fc 44000000 		.4byte	.LFE33
 3136 0100 00000000 		.4byte	.LFB34
 3137 0104 44000000 		.4byte	.LFE34
 3138 0108 00000000 		.4byte	.LFB35
 3139 010c 38000000 		.4byte	.LFE35
 3140 0110 00000000 		.4byte	.LFB36
 3141 0114 20000000 		.4byte	.LFE36
 3142 0118 00000000 		.4byte	.LFB37
 3143 011c 18000000 		.4byte	.LFE37
 3144 0120 00000000 		.4byte	.LFB38
 3145 0124 14000000 		.4byte	.LFE38
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 81


 3146 0128 00000000 		.4byte	.LFB39
 3147 012c 14000000 		.4byte	.LFE39
 3148 0130 00000000 		.4byte	.LFB40
 3149 0134 18000000 		.4byte	.LFE40
 3150 0138 00000000 		.4byte	.LFB41
 3151 013c 18000000 		.4byte	.LFE41
 3152 0140 00000000 		.4byte	0
 3153 0144 00000000 		.4byte	0
 3154              		.section	.debug_line,"",%progbits
 3155              	.Ldebug_line0:
 3156 0000 6B030000 		.section	.debug_str,"MS",%progbits,1
 3156      02004600 
 3156      00000201 
 3156      FB0E0D00 
 3156      01010101 
 3157              	.LASF17:
 3158 0000 54696D65 		.ascii	"Timer_1_Start\000"
 3158      725F315F 
 3158      53746172 
 3158      7400
 3159              	.LASF66:
 3160 000e 54696D65 		.ascii	"Timer_1_SetCountMode\000"
 3160      725F315F 
 3160      53657443 
 3160      6F756E74 
 3160      4D6F6465 
 3161              	.LASF47:
 3162 0023 54696D65 		.ascii	"Timer_1_SetCompareSwap\000"
 3162      725F315F 
 3162      53657443 
 3162      6F6D7061 
 3162      72655377 
 3163              	.LASF44:
 3164 003a 70657269 		.ascii	"period\000"
 3164      6F6400
 3165              	.LASF77:
 3166 0041 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Timer_1.c\000"
 3166      6E657261 
 3166      7465645F 
 3166      536F7572 
 3166      63655C50 
 3167              	.LASF7:
 3168 0064 6C6F6E67 		.ascii	"long long unsigned int\000"
 3168      206C6F6E 
 3168      6720756E 
 3168      7369676E 
 3168      65642069 
 3169              	.LASF24:
 3170 007b 71644D6F 		.ascii	"qdMode\000"
 3170      646500
 3171              	.LASF6:
 3172 0082 6C6F6E67 		.ascii	"long long int\000"
 3172      206C6F6E 
 3172      6720696E 
 3172      7400
 3173              	.LASF0:
 3174 0090 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 82


 3174      65642063 
 3174      68617200 
 3175              	.LASF49:
 3176 009c 54696D65 		.ascii	"Timer_1_WritePeriodBuf\000"
 3176      725F315F 
 3176      57726974 
 3176      65506572 
 3176      696F6442 
 3177              	.LASF43:
 3178 00b3 54696D65 		.ascii	"Timer_1_WritePeriod\000"
 3178      725F315F 
 3178      57726974 
 3178      65506572 
 3178      696F6400 
 3179              	.LASF4:
 3180 00c7 6C6F6E67 		.ascii	"long int\000"
 3180      20696E74 
 3180      00
 3181              	.LASF57:
 3182 00d0 636F6D70 		.ascii	"compareBuf\000"
 3182      61726542 
 3182      756600
 3183              	.LASF9:
 3184 00db 75696E74 		.ascii	"uint8\000"
 3184      3800
 3185              	.LASF12:
 3186 00e1 646F7562 		.ascii	"double\000"
 3186      6C6500
 3187              	.LASF39:
 3188 00e8 54696D65 		.ascii	"Timer_1_WriteCounter\000"
 3188      725F315F 
 3188      57726974 
 3188      65436F75 
 3188      6E746572 
 3189              	.LASF33:
 3190 00fd 54696D65 		.ascii	"Timer_1_SetPWMStopOnKill\000"
 3190      725F315F 
 3190      53657450 
 3190      574D5374 
 3190      6F704F6E 
 3191              	.LASF60:
 3192 0116 54696D65 		.ascii	"Timer_1_ReadCaptureBuf\000"
 3192      725F315F 
 3192      52656164 
 3192      43617074 
 3192      75726542 
 3193              	.LASF10:
 3194 012d 75696E74 		.ascii	"uint32\000"
 3194      333200
 3195              	.LASF40:
 3196 0134 636F756E 		.ascii	"count\000"
 3196      7400
 3197              	.LASF62:
 3198 013a 74726967 		.ascii	"triggerMode\000"
 3198      6765724D 
 3198      6F646500 
 3199              	.LASF53:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 83


 3200 0146 54696D65 		.ascii	"Timer_1_WriteCompare\000"
 3200      725F315F 
 3200      57726974 
 3200      65436F6D 
 3200      70617265 
 3201              	.LASF38:
 3202 015b 6D61736B 		.ascii	"mask\000"
 3202      00
 3203              	.LASF36:
 3204 0160 64656164 		.ascii	"deadTime\000"
 3204      54696D65 
 3204      00
 3205              	.LASF79:
 3206 0169 54696D65 		.ascii	"Timer_1_initVar\000"
 3206      725F315F 
 3206      696E6974 
 3206      56617200 
 3207              	.LASF8:
 3208 0179 756E7369 		.ascii	"unsigned int\000"
 3208      676E6564 
 3208      20696E74 
 3208      00
 3209              	.LASF59:
 3210 0186 54696D65 		.ascii	"Timer_1_ReadCapture\000"
 3210      725F315F 
 3210      52656164 
 3210      43617074 
 3210      75726500 
 3211              	.LASF68:
 3212 019a 636F6D6D 		.ascii	"command\000"
 3212      616E6400 
 3213              	.LASF5:
 3214 01a2 6C6F6E67 		.ascii	"long unsigned int\000"
 3214      20756E73 
 3214      69676E65 
 3214      6420696E 
 3214      7400
 3215              	.LASF30:
 3216 01b4 6D6F6465 		.ascii	"modeMask\000"
 3216      4D61736B 
 3216      00
 3217              	.LASF19:
 3218 01bd 54696D65 		.ascii	"Timer_1_Stop\000"
 3218      725F315F 
 3218      53746F70 
 3218      00
 3219              	.LASF37:
 3220 01ca 54696D65 		.ascii	"Timer_1_SetPWMInvert\000"
 3220      725F315F 
 3220      53657450 
 3220      574D496E 
 3220      76657274 
 3221              	.LASF41:
 3222 01df 54696D65 		.ascii	"Timer_1_SetCounterMode\000"
 3222      725F315F 
 3222      53657443 
 3222      6F756E74 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 84


 3222      65724D6F 
 3223              	.LASF3:
 3224 01f6 73686F72 		.ascii	"short unsigned int\000"
 3224      7420756E 
 3224      7369676E 
 3224      65642069 
 3224      6E7400
 3225              	.LASF64:
 3226 0209 54696D65 		.ascii	"Timer_1_SetStartMode\000"
 3226      725F315F 
 3226      53657453 
 3226      74617274 
 3226      4D6F6465 
 3227              	.LASF72:
 3228 021e 54696D65 		.ascii	"Timer_1_GetInterruptSourceMasked\000"
 3228      725F315F 
 3228      47657449 
 3228      6E746572 
 3228      72757074 
 3229              	.LASF27:
 3230 023f 54696D65 		.ascii	"Timer_1_SetOneShot\000"
 3230      725F315F 
 3230      5365744F 
 3230      6E655368 
 3230      6F7400
 3231              	.LASF78:
 3232 0252 433A5C55 		.ascii	"C:\\Users\\Linette Helena\\Desktop\\hgjki\\ADC_filt"
 3232      73657273 
 3232      5C4C696E 
 3232      65747465 
 3232      2048656C 
 3233 0280 72655F73 		.ascii	"re_samlet_grader.cydsn\000"
 3233      616D6C65 
 3233      745F6772 
 3233      61646572 
 3233      2E637964 
 3234              	.LASF28:
 3235 0297 6F6E6553 		.ascii	"oneShotEnable\000"
 3235      686F7445 
 3235      6E61626C 
 3235      6500
 3236              	.LASF21:
 3237 02a5 54696D65 		.ascii	"Timer_1_SetMode\000"
 3237      725F315F 
 3237      5365744D 
 3237      6F646500 
 3238              	.LASF51:
 3239 02b5 54696D65 		.ascii	"Timer_1_ReadPeriodBuf\000"
 3239      725F315F 
 3239      52656164 
 3239      50657269 
 3239      6F644275 
 3240              	.LASF69:
 3241 02cb 54696D65 		.ascii	"Timer_1_ReadStatus\000"
 3241      725F315F 
 3241      52656164 
 3241      53746174 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 85


 3241      757300
 3242              	.LASF14:
 3243 02de 72656733 		.ascii	"reg32\000"
 3243      3200
 3244              	.LASF15:
 3245 02e4 73697A65 		.ascii	"sizetype\000"
 3245      74797065 
 3245      00
 3246              	.LASF61:
 3247 02ed 54696D65 		.ascii	"Timer_1_SetCaptureMode\000"
 3247      725F315F 
 3247      53657443 
 3247      61707475 
 3247      72654D6F 
 3248              	.LASF22:
 3249 0304 54696D65 		.ascii	"Timer_1_SetQDMode\000"
 3249      725F315F 
 3249      53657451 
 3249      444D6F64 
 3249      6500
 3250              	.LASF63:
 3251 0316 54696D65 		.ascii	"Timer_1_SetReloadMode\000"
 3251      725F315F 
 3251      53657452 
 3251      656C6F61 
 3251      644D6F64 
 3252              	.LASF52:
 3253 032c 54696D65 		.ascii	"Timer_1_SetPeriodSwap\000"
 3253      725F315F 
 3253      53657450 
 3253      6572696F 
 3253      64537761 
 3254              	.LASF54:
 3255 0342 636F6D70 		.ascii	"compare\000"
 3255      61726500 
 3256              	.LASF25:
 3257 034a 54696D65 		.ascii	"Timer_1_SetPrescaler\000"
 3257      725F315F 
 3257      53657450 
 3257      72657363 
 3257      616C6572 
 3258              	.LASF45:
 3259 035f 54696D65 		.ascii	"Timer_1_ReadCounter\000"
 3259      725F315F 
 3259      52656164 
 3259      436F756E 
 3259      74657200 
 3260              	.LASF74:
 3261 0373 54696D65 		.ascii	"Timer_1_ClearInterrupt\000"
 3261      725F315F 
 3261      436C6561 
 3261      72496E74 
 3261      65727275 
 3262              	.LASF11:
 3263 038a 666C6F61 		.ascii	"float\000"
 3263      7400
 3264              	.LASF26:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 86


 3265 0390 70726573 		.ascii	"prescaler\000"
 3265      63616C65 
 3265      7200
 3266              	.LASF56:
 3267 039a 54696D65 		.ascii	"Timer_1_WriteCompareBuf\000"
 3267      725F315F 
 3267      57726974 
 3267      65436F6D 
 3267      70617265 
 3268              	.LASF18:
 3269 03b2 54696D65 		.ascii	"Timer_1_Enable\000"
 3269      725F315F 
 3269      456E6162 
 3269      6C6500
 3270              	.LASF58:
 3271 03c1 54696D65 		.ascii	"Timer_1_ReadCompareBuf\000"
 3271      725F315F 
 3271      52656164 
 3271      436F6D70 
 3271      61726542 
 3272              	.LASF1:
 3273 03d8 756E7369 		.ascii	"unsigned char\000"
 3273      676E6564 
 3273      20636861 
 3273      7200
 3274              	.LASF34:
 3275 03e6 73746F70 		.ascii	"stopOnKillEnable\000"
 3275      4F6E4B69 
 3275      6C6C456E 
 3275      61626C65 
 3275      00
 3276              	.LASF46:
 3277 03f7 54696D65 		.ascii	"Timer_1_ReadPeriod\000"
 3277      725F315F 
 3277      52656164 
 3277      50657269 
 3277      6F6400
 3278              	.LASF2:
 3279 040a 73686F72 		.ascii	"short int\000"
 3279      7420696E 
 3279      7400
 3280              	.LASF71:
 3281 0414 696E7465 		.ascii	"interruptMask\000"
 3281      72727570 
 3281      744D6173 
 3281      6B00
 3282              	.LASF35:
 3283 0422 54696D65 		.ascii	"Timer_1_SetPWMDeadTime\000"
 3283      725F315F 
 3283      53657450 
 3283      574D4465 
 3283      61645469 
 3284              	.LASF31:
 3285 0439 54696D65 		.ascii	"Timer_1_SetPWMSyncKill\000"
 3285      725F315F 
 3285      53657450 
 3285      574D5379 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 87


 3285      6E634B69 
 3286              	.LASF65:
 3287 0450 54696D65 		.ascii	"Timer_1_SetStopMode\000"
 3287      725F315F 
 3287      53657453 
 3287      746F704D 
 3287      6F646500 
 3288              	.LASF13:
 3289 0464 63686172 		.ascii	"char\000"
 3289      00
 3290              	.LASF23:
 3291 0469 6D6F6465 		.ascii	"mode\000"
 3291      00
 3292              	.LASF55:
 3293 046e 54696D65 		.ascii	"Timer_1_ReadCompare\000"
 3293      725F315F 
 3293      52656164 
 3293      436F6D70 
 3293      61726500 
 3294              	.LASF16:
 3295 0482 54696D65 		.ascii	"Timer_1_Init\000"
 3295      725F315F 
 3295      496E6974 
 3295      00
 3296              	.LASF42:
 3297 048f 636F756E 		.ascii	"counterMode\000"
 3297      7465724D 
 3297      6F646500 
 3298              	.LASF48:
 3299 049b 73776170 		.ascii	"swapEnable\000"
 3299      456E6162 
 3299      6C6500
 3300              	.LASF73:
 3301 04a6 54696D65 		.ascii	"Timer_1_GetInterruptSource\000"
 3301      725F315F 
 3301      47657449 
 3301      6E746572 
 3301      72757074 
 3302              	.LASF70:
 3303 04c1 54696D65 		.ascii	"Timer_1_SetInterruptMode\000"
 3303      725F315F 
 3303      53657449 
 3303      6E746572 
 3303      72757074 
 3304              	.LASF29:
 3305 04da 54696D65 		.ascii	"Timer_1_SetPWMMode\000"
 3305      725F315F 
 3305      53657450 
 3305      574D4D6F 
 3305      646500
 3306              	.LASF67:
 3307 04ed 54696D65 		.ascii	"Timer_1_TriggerCommand\000"
 3307      725F315F 
 3307      54726967 
 3307      67657243 
 3307      6F6D6D61 
 3308              	.LASF20:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccgPgYHk.s 			page 88


 3309 0504 656E6162 		.ascii	"enableInterrupts\000"
 3309      6C65496E 
 3309      74657272 
 3309      75707473 
 3309      00
 3310              	.LASF75:
 3311 0515 54696D65 		.ascii	"Timer_1_SetInterrupt\000"
 3311      725F315F 
 3311      53657449 
 3311      6E746572 
 3311      72757074 
 3312              	.LASF32:
 3313 052a 73796E63 		.ascii	"syncKillEnable\000"
 3313      4B696C6C 
 3313      456E6162 
 3313      6C6500
 3314              	.LASF76:
 3315 0539 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3315      4320342E 
 3315      392E3320 
 3315      32303135 
 3315      30333033 
 3316 056c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3316      20726576 
 3316      6973696F 
 3316      6E203232 
 3316      31323230 
 3317 059f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3317      66756E63 
 3317      74696F6E 
 3317      2D736563 
 3317      74696F6E 
 3318              	.LASF50:
 3319 05c7 70657269 		.ascii	"periodBuf\000"
 3319      6F644275 
 3319      6600
 3320              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
