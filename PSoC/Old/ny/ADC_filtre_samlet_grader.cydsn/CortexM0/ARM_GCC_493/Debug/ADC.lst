ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_initVar
  18              		.bss
  19              		.type	ADC_initVar, %object
  20              		.size	ADC_initVar, 1
  21              	ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_offset,6,4
  24              		.comm	ADC_countsPer10Volt,12,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_channelsConfig, %object
  28              		.size	ADC_channelsConfig, 12
  29              	ADC_channelsConfig:
  30 0000 00040000 		.word	1024
  31 0004 00040000 		.word	1024
  32 0008 00040000 		.word	1024
  33              		.section	.text.ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_Start, %function
  39              	ADC_Start:
  40              	.LFB2:
  41              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.30
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 2


  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000400u, 0x00000400u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 3


  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  50              		.loc 1 66 0
  51 0004 064B     		ldr	r3, .L3
  52 0006 1B78     		ldrb	r3, [r3]
  53 0008 002B     		cmp	r3, #0
  54 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  55              		.loc 1 68 0
  56 000c FFF7FEFF 		bl	ADC_Init
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  57              		.loc 1 69 0
  58 0010 034B     		ldr	r3, .L3
  59 0012 0122     		mov	r2, #1
  60 0014 1A70     		strb	r2, [r3]
  61              	.L2:
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  62              		.loc 1 71 0
  63 0016 FFF7FEFF 		bl	ADC_Enable
  72:.\Generated_Source\PSoC4/ADC.c **** }
  64              		.loc 1 72 0
  65 001a BD46     		mov	sp, r7
  66              		@ sp needed
  67 001c 80BD     		pop	{r7, pc}
  68              	.L4:
  69 001e C046     		.align	2
  70              	.L3:
  71 0020 00000000 		.word	ADC_initVar
  72              		.cfi_endproc
  73              	.LFE2:
  74              		.size	ADC_Start, .-ADC_Start
  75              		.global	__aeabi_idiv
  76              		.section	.text.ADC_Init,"ax",%progbits
  77              		.align	2
  78              		.global	ADC_Init
  79              		.code	16
  80              		.thumb_func
  81              		.type	ADC_Init, %function
  82              	ADC_Init:
  83              	.LFB3:
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 4


  89:.\Generated_Source\PSoC4/ADC.c **** *
  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  84              		.loc 1 95 0
  85              		.cfi_startproc
  86 0000 80B5     		push	{r7, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 84B0     		sub	sp, sp, #16
  91              		.cfi_def_cfa_offset 24
  92 0004 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 5


 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  94              		.loc 1 172 0
  95 0006 0F20     		mov	r0, #15
  96 0008 0321     		mov	r1, #3
  97 000a FFF7FEFF 		bl	CyIntSetPriority
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  98              		.loc 1 173 0
  99 000e 624B     		ldr	r3, .L16
 100 0010 0F20     		mov	r0, #15
 101 0012 191C     		mov	r1, r3
 102 0014 FFF7FEFF 		bl	CyIntSetVector
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 103              		.loc 1 177 0
 104 0018 604B     		ldr	r3, .L16+4
 105 001a 0722     		mov	r2, #7
 106 001c 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 6


 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 107              		.loc 1 180 0
 108 001e 604B     		ldr	r3, .L16+8
 109 0020 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 110              		.loc 1 178 0
 111 0022 002B     		cmp	r3, #0
 112 0024 01DA     		bge	.L6
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 113              		.loc 1 178 0 is_stmt 0 discriminator 1
 114 0026 5F49     		ldr	r1, .L16+12
 115 0028 00E0     		b	.L7
 116              	.L6:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 117              		.loc 1 178 0 discriminator 2
 118 002a 5F49     		ldr	r1, .L16+16
 119              	.L7:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 120              		.loc 1 178 0 discriminator 4
 121 002c 5F4B     		ldr	r3, .L16+20
 122 002e 5F4A     		ldr	r2, .L16+20
 123 0030 1268     		ldr	r2, [r2]
 124 0032 0A43     		orr	r2, r1
 125 0034 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 126              		.loc 1 182 0 is_stmt 1 discriminator 4
 127 0036 5E4B     		ldr	r3, .L16+24
 128 0038 5E4A     		ldr	r2, .L16+28
 129 003a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 130              		.loc 1 183 0 discriminator 4
 131 003c 5E4B     		ldr	r3, .L16+32
 132 003e 5F4A     		ldr	r2, .L16+36
 133 0040 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 134              		.loc 1 184 0 discriminator 4
 135 0042 5F4B     		ldr	r3, .L16+40
 136 0044 0022     		mov	r2, #0
 137 0046 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 138              		.loc 1 185 0 discriminator 4
 139 0048 5E4B     		ldr	r3, .L16+44
 140 004a 5F4A     		ldr	r2, .L16+48
 141 004c 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 142              		.loc 1 186 0 discriminator 4
 143 004e 5F4B     		ldr	r3, .L16+52
 144 0050 5F4A     		ldr	r2, .L16+56
 145 0052 1A60     		str	r2, [r3]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 146              		.loc 1 190 0 discriminator 4
 147 0054 5F4B     		ldr	r3, .L16+60
 148 0056 5F4A     		ldr	r2, .L16+60
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 7


 149 0058 1268     		ldr	r2, [r2]
 150 005a 8021     		mov	r1, #128
 151 005c 4902     		lsl	r1, r1, #9
 152 005e 0A43     		orr	r2, r1
 153 0060 1A60     		str	r2, [r3]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 154              		.loc 1 193 0 discriminator 4
 155 0062 5D4B     		ldr	r3, .L16+64
 156 0064 5C4A     		ldr	r2, .L16+64
 157 0066 1268     		ldr	r2, [r2]
 158 0068 8021     		mov	r1, #128
 159 006a 4902     		lsl	r1, r1, #9
 160 006c 0A43     		orr	r2, r1
 161 006e 1A60     		str	r2, [r3]
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 162              		.loc 1 197 0 discriminator 4
 163 0070 5A4B     		ldr	r3, .L16+68
 164 0072 0022     		mov	r2, #0
 165 0074 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 166              		.loc 1 198 0 discriminator 4
 167 0076 5A4B     		ldr	r3, .L16+72
 168 0078 0022     		mov	r2, #0
 169 007a 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 170              		.loc 1 199 0 discriminator 4
 171 007c 594B     		ldr	r3, .L16+76
 172 007e 0122     		mov	r2, #1
 173 0080 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 174              		.loc 1 206 0 discriminator 4
 175 0082 594B     		ldr	r3, .L16+80
 176 0084 1B68     		ldr	r3, [r3]
 177 0086 7B60     		str	r3, [r7, #4]
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 178              		.loc 1 207 0 discriminator 4
 179 0088 7B68     		ldr	r3, [r7, #4]
 180 008a 584A     		ldr	r2, .L16+84
 181 008c 1340     		and	r3, r2
 182 008e 7B60     		str	r3, [r7, #4]
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 8


 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 183              		.loc 1 220 0 discriminator 4
 184 0090 7B68     		ldr	r3, [r7, #4]
 185 0092 8022     		mov	r2, #128
 186 0094 9205     		lsl	r2, r2, #22
 187 0096 1343     		orr	r3, r2
 188 0098 7B60     		str	r3, [r7, #4]
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 189              		.loc 1 221 0 discriminator 4
 190 009a 7B68     		ldr	r3, [r7, #4]
 191 009c 0122     		mov	r2, #1
 192 009e 9343     		bic	r3, r2
 193 00a0 7B60     		str	r3, [r7, #4]
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 194              		.loc 1 226 0 discriminator 4
 195 00a2 514B     		ldr	r3, .L16+80
 196 00a4 7A68     		ldr	r2, [r7, #4]
 197 00a6 1A60     		str	r2, [r3]
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 198              		.loc 1 232 0 discriminator 4
 199 00a8 0023     		mov	r3, #0
 200 00aa FB60     		str	r3, [r7, #12]
 201 00ac 6EE0     		b	.L8
 202              	.L15:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 203              		.loc 1 234 0
 204 00ae 504B     		ldr	r3, .L16+88
 205 00b0 FA68     		ldr	r2, [r7, #12]
 206 00b2 9200     		lsl	r2, r2, #2
 207 00b4 D258     		ldr	r2, [r2, r3]
 208 00b6 DC23     		mov	r3, #220
 209 00b8 9B01     		lsl	r3, r3, #6
 210 00ba 1340     		and	r3, r2
 211 00bc 7B60     		str	r3, [r7, #4]
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 212              		.loc 1 236 0
 213 00be 4D4A     		ldr	r2, .L16+92
 214 00c0 FB68     		ldr	r3, [r7, #12]
 215 00c2 D318     		add	r3, r2, r3
 216 00c4 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 9


 217 00c6 1A1C     		mov	r2, r3
 218 00c8 7B68     		ldr	r3, [r7, #4]
 219 00ca 1343     		orr	r3, r2
 220 00cc 7B60     		str	r3, [r7, #4]
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 221              		.loc 1 253 0
 222 00ce FB68     		ldr	r3, [r7, #12]
 223 00d0 9B00     		lsl	r3, r3, #2
 224 00d2 494A     		ldr	r2, .L16+96
 225 00d4 9446     		mov	ip, r2
 226 00d6 6344     		add	r3, r3, ip
 227 00d8 7A68     		ldr	r2, [r7, #4]
 228 00da 1A60     		str	r2, [r3]
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 229              		.loc 1 255 0
 230 00dc 444B     		ldr	r3, .L16+88
 231 00de FA68     		ldr	r2, [r7, #12]
 232 00e0 9200     		lsl	r2, r2, #2
 233 00e2 D358     		ldr	r3, [r2, r3]
 234 00e4 0122     		mov	r2, #1
 235 00e6 1340     		and	r3, r2
 236 00e8 09D0     		beq	.L9
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 237              		.loc 1 257 0
 238 00ea 3C4B     		ldr	r3, .L16+68
 239 00ec 3B4A     		ldr	r2, .L16+68
 240 00ee 1268     		ldr	r2, [r2]
 241 00f0 F968     		ldr	r1, [r7, #12]
 242 00f2 0120     		mov	r0, #1
 243 00f4 8840     		lsl	r0, r0, r1
 244 00f6 011C     		mov	r1, r0
 245 00f8 89B2     		uxth	r1, r1
 246 00fa 0A43     		orr	r2, r1
 247 00fc 1A60     		str	r2, [r3]
 248              	.L9:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 249              		.loc 1 260 0
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 10


 250 00fe 3C4B     		ldr	r3, .L16+88
 251 0100 FA68     		ldr	r2, [r7, #12]
 252 0102 9200     		lsl	r2, r2, #2
 253 0104 D358     		ldr	r3, [r2, r3]
 254 0106 0222     		mov	r2, #2
 255 0108 1340     		and	r3, r2
 256 010a 09D0     		beq	.L10
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 257              		.loc 1 262 0
 258 010c 344B     		ldr	r3, .L16+72
 259 010e 344A     		ldr	r2, .L16+72
 260 0110 1268     		ldr	r2, [r2]
 261 0112 F968     		ldr	r1, [r7, #12]
 262 0114 0120     		mov	r0, #1
 263 0116 8840     		lsl	r0, r0, r1
 264 0118 011C     		mov	r1, r0
 265 011a 89B2     		uxth	r1, r1
 266 011c 0A43     		orr	r2, r1
 267 011e 1A60     		str	r2, [r3]
 268              	.L10:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 269              		.loc 1 282 0
 270 0120 334B     		ldr	r3, .L16+88
 271 0122 FA68     		ldr	r2, [r7, #12]
 272 0124 9200     		lsl	r2, r2, #2
 273 0126 D258     		ldr	r2, [r2, r3]
 274 0128 8023     		mov	r3, #128
 275 012a 9B00     		lsl	r3, r3, #2
 276 012c 1340     		and	r3, r2
 277 012e 03D0     		beq	.L11
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 278              		.loc 1 284 0
 279 0130 8023     		mov	r3, #128
 280 0132 5B00     		lsl	r3, r3, #1
 281 0134 BB60     		str	r3, [r7, #8]
 282 0136 02E0     		b	.L12
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 11


 283              	.L11:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 284              		.loc 1 288 0
 285 0138 8023     		mov	r3, #128
 286 013a 5B01     		lsl	r3, r3, #5
 287 013c BB60     		str	r3, [r7, #8]
 288              	.L12:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 289              		.loc 1 291 0
 290 013e 2C4B     		ldr	r3, .L16+88
 291 0140 FA68     		ldr	r2, [r7, #12]
 292 0142 9200     		lsl	r2, r2, #2
 293 0144 D258     		ldr	r2, [r2, r3]
 294 0146 8023     		mov	r3, #128
 295 0148 5B00     		lsl	r3, r3, #1
 296 014a 1340     		and	r3, r2
 297 014c 05D1     		bne	.L13
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 298              		.loc 1 298 0
 299 014e 2B4B     		ldr	r3, .L16+100
 300 0150 FA68     		ldr	r2, [r7, #12]
 301 0152 5200     		lsl	r2, r2, #1
 302 0154 0021     		mov	r1, #0
 303 0156 D152     		strh	r1, [r2, r3]
 304 0158 04E0     		b	.L14
 305              	.L13:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 306              		.loc 1 307 0
 307 015a 284B     		ldr	r3, .L16+100
 308 015c FA68     		ldr	r2, [r7, #12]
 309 015e 5200     		lsl	r2, r2, #1
 310 0160 0021     		mov	r1, #0
 311 0162 D152     		strh	r1, [r2, r3]
 312              	.L14:
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 12


 313              		.loc 1 311 0 discriminator 2
 314 0164 BB68     		ldr	r3, [r7, #8]
 315 0166 264A     		ldr	r2, .L16+104
 316 0168 5343     		mul	r3, r2
 317 016a 264A     		ldr	r2, .L16+108
 318 016c 9446     		mov	ip, r2
 319 016e 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 320              		.loc 1 312 0 discriminator 2
 321 0170 181C     		mov	r0, r3
 322 0172 2349     		ldr	r1, .L16+104
 323 0174 FFF7FEFF 		bl	__aeabi_idiv
 324 0178 031C     		mov	r3, r0
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 325              		.loc 1 311 0 discriminator 2
 326 017a 9BB2     		uxth	r3, r3
 327 017c 19B2     		sxth	r1, r3
 328 017e 224B     		ldr	r3, .L16+112
 329 0180 FA68     		ldr	r2, [r7, #12]
 330 0182 9200     		lsl	r2, r2, #2
 331 0184 D150     		str	r1, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 332              		.loc 1 232 0 discriminator 2
 333 0186 FB68     		ldr	r3, [r7, #12]
 334 0188 0133     		add	r3, r3, #1
 335 018a FB60     		str	r3, [r7, #12]
 336              	.L8:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 337              		.loc 1 232 0 is_stmt 0 discriminator 1
 338 018c FB68     		ldr	r3, [r7, #12]
 339 018e 022B     		cmp	r3, #2
 340 0190 8DD9     		bls	.L15
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 341              		.loc 1 314 0 is_stmt 1
 342 0192 BD46     		mov	sp, r7
 343 0194 04B0     		add	sp, sp, #16
 344              		@ sp needed
 345 0196 80BD     		pop	{r7, pc}
 346              	.L17:
 347              		.align	2
 348              	.L16:
 349 0198 00000000 		.word	ADC_ISR
 350 019c 20003A40 		.word	1077542944
 351 01a0 80033A40 		.word	1077543808
 352 01a4 70201013 		.word	319823984
 353 01a8 70200013 		.word	318775408
 354 01ac 00003A40 		.word	1077542912
 355 01b0 04003A40 		.word	1077542916
 356 01b4 CC000080 		.word	-2147483444
 357 01b8 18003A40 		.word	1077542936
 358 01bc 00000908 		.word	134807552
 359 01c0 1C003A40 		.word	1077542940
 360 01c4 10003A40 		.word	1077542928
 361 01c8 98000400 		.word	262296
 362 01cc 14003A40 		.word	1077542932
 363 01d0 04000400 		.word	262148
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 13


 364 01d4 00033A40 		.word	1077543680
 365 01d8 40033A40 		.word	1077543744
 366 01dc 28023A40 		.word	1077543464
 367 01e0 38023A40 		.word	1077543480
 368 01e4 18023A40 		.word	1077543448
 369 01e8 30003A40 		.word	1077542960
 370 01ec FFFFFFDF 		.word	-536870913
 371 01f0 00000000 		.word	ADC_channelsConfig
 372 01f4 0C000000 		.word	ADC_InputsPlacement.4768
 373 01f8 80003A40 		.word	1077543040
 374 01fc 00000000 		.word	ADC_offset
 375 0200 10270000 		.word	10000
 376 0204 88130000 		.word	5000
 377 0208 00000000 		.word	ADC_countsPer10Volt
 378              		.cfi_endproc
 379              	.LFE3:
 380              		.size	ADC_Init, .-ADC_Init
 381              		.section	.text.ADC_Enable,"ax",%progbits
 382              		.align	2
 383              		.global	ADC_Enable
 384              		.code	16
 385              		.thumb_func
 386              		.type	ADC_Enable, %function
 387              	ADC_Enable:
 388              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 389              		.loc 1 331 0
 390              		.cfi_startproc
 391 0000 80B5     		push	{r7, lr}
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 00AF     		add	r7, sp, #0
 396              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 397              		.loc 1 332 0
 398 0004 0A4B     		ldr	r3, .L21
 399 0006 1B68     		ldr	r3, [r3]
 400 0008 002B     		cmp	r3, #0
 401 000a 0EDB     		blt	.L18
 333:.\Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 14


 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 402              		.loc 1 336 0
 403 000c C046     		mov	r8, r8
 404              	.L20:
 405              		.loc 1 336 0 is_stmt 0 discriminator 1
 406 000e 094B     		ldr	r3, .L21+4
 407 0010 1B68     		ldr	r3, [r3]
 408 0012 002B     		cmp	r3, #0
 409 0014 FBDB     		blt	.L20
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 410              		.loc 1 342 0 is_stmt 1
 411 0016 064B     		ldr	r3, .L21
 412 0018 054A     		ldr	r2, .L21
 413 001a 1268     		ldr	r2, [r2]
 414 001c 8021     		mov	r1, #128
 415 001e 0906     		lsl	r1, r1, #24
 416 0020 0A43     		orr	r2, r1
 417 0022 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 418              		.loc 1 345 0
 419 0024 0A20     		mov	r0, #10
 420 0026 FFF7FEFF 		bl	CyDelayUs
 421              	.L18:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 422              		.loc 1 347 0
 423 002a BD46     		mov	sp, r7
 424              		@ sp needed
 425 002c 80BD     		pop	{r7, pc}
 426              	.L22:
 427 002e C046     		.align	2
 428              	.L21:
 429 0030 00003A40 		.word	1077542912
 430 0034 08023A40 		.word	1077543432
 431              		.cfi_endproc
 432              	.LFE4:
 433              		.size	ADC_Enable, .-ADC_Enable
 434              		.section	.text.ADC_Stop,"ax",%progbits
 435              		.align	2
 436              		.global	ADC_Stop
 437              		.code	16
 438              		.thumb_func
 439              		.type	ADC_Stop, %function
 440              	ADC_Stop:
 441              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 15


 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 442              		.loc 1 366 0
 443              		.cfi_startproc
 444 0000 80B5     		push	{r7, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 450              		.loc 1 367 0
 451 0004 034B     		ldr	r3, .L24
 452 0006 034A     		ldr	r2, .L24
 453 0008 1268     		ldr	r2, [r2]
 454 000a 5200     		lsl	r2, r2, #1
 455 000c 5208     		lsr	r2, r2, #1
 456 000e 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 457              		.loc 1 368 0
 458 0010 BD46     		mov	sp, r7
 459              		@ sp needed
 460 0012 80BD     		pop	{r7, pc}
 461              	.L25:
 462              		.align	2
 463              	.L24:
 464 0014 00003A40 		.word	1077542912
 465              		.cfi_endproc
 466              	.LFE5:
 467              		.size	ADC_Stop, .-ADC_Stop
 468              		.section	.text.ADC_StartConvert,"ax",%progbits
 469              		.align	2
 470              		.global	ADC_StartConvert
 471              		.code	16
 472              		.thumb_func
 473              		.type	ADC_StartConvert, %function
 474              	ADC_StartConvert:
 475              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 16


 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 476              		.loc 1 392 0
 477              		.cfi_startproc
 478 0000 80B5     		push	{r7, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 00AF     		add	r7, sp, #0
 483              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 484              		.loc 1 394 0
 485 0004 044B     		ldr	r3, .L27
 486 0006 044A     		ldr	r2, .L27
 487 0008 1268     		ldr	r2, [r2]
 488 000a 8021     		mov	r1, #128
 489 000c 4902     		lsl	r1, r1, #9
 490 000e 0A43     		orr	r2, r1
 491 0010 1A60     		str	r2, [r3]
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 492              		.loc 1 399 0
 493 0012 BD46     		mov	sp, r7
 494              		@ sp needed
 495 0014 80BD     		pop	{r7, pc}
 496              	.L28:
 497 0016 C046     		.align	2
 498              	.L27:
 499 0018 04003A40 		.word	1077542916
 500              		.cfi_endproc
 501              	.LFE6:
 502              		.size	ADC_StartConvert, .-ADC_StartConvert
 503              		.section	.text.ADC_StopConvert,"ax",%progbits
 504              		.align	2
 505              		.global	ADC_StopConvert
 506              		.code	16
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 17


 507              		.thumb_func
 508              		.type	ADC_StopConvert, %function
 509              	ADC_StopConvert:
 510              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 511              		.loc 1 417 0
 512              		.cfi_startproc
 513 0000 80B5     		push	{r7, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 519              		.loc 1 419 0
 520 0004 034B     		ldr	r3, .L30
 521 0006 034A     		ldr	r2, .L30
 522 0008 1268     		ldr	r2, [r2]
 523 000a 0349     		ldr	r1, .L30+4
 524 000c 0A40     		and	r2, r1
 525 000e 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 526              		.loc 1 421 0
 527 0010 BD46     		mov	sp, r7
 528              		@ sp needed
 529 0012 80BD     		pop	{r7, pc}
 530              	.L31:
 531              		.align	2
 532              	.L30:
 533 0014 04003A40 		.word	1077542916
 534 0018 FFFFFEFF 		.word	-65537
 535              		.cfi_endproc
 536              	.LFE7:
 537              		.size	ADC_StopConvert, .-ADC_StopConvert
 538              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 539              		.align	2
 540              		.global	ADC_IsEndConversion
 541              		.code	16
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 18


 542              		.thumb_func
 543              		.type	ADC_IsEndConversion, %function
 544              	ADC_IsEndConversion:
 545              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 546              		.loc 1 451 0
 547              		.cfi_startproc
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 84B0     		sub	sp, sp, #16
 553              		.cfi_def_cfa_offset 24
 554 0004 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 556 0006 7860     		str	r0, [r7, #4]
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 557              		.loc 1 452 0
 558 0008 0023     		mov	r3, #0
 559 000a FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 560              		.loc 1 454 0
 561 000c 7B68     		ldr	r3, [r7, #4]
 562 000e 0322     		mov	r2, #3
 563 0010 1340     		and	r3, r2
 564 0012 11D0     		beq	.L33
 565              	.L35:
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 19


 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 566              		.loc 1 458 0 discriminator 2
 567 0014 0B4B     		ldr	r3, .L37
 568 0016 1B68     		ldr	r3, [r3]
 569 0018 0122     		mov	r2, #1
 570 001a 1340     		and	r3, r2
 571 001c FB60     		str	r3, [r7, #12]
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 572              		.loc 1 459 0 discriminator 2
 573 001e FB68     		ldr	r3, [r7, #12]
 574 0020 002B     		cmp	r3, #0
 575 0022 03D1     		bne	.L34
 576              		.loc 1 459 0 is_stmt 0 discriminator 1
 577 0024 7B68     		ldr	r3, [r7, #4]
 578 0026 0222     		mov	r2, #2
 579 0028 1340     		and	r3, r2
 580 002a F3D1     		bne	.L35
 581              	.L34:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 582              		.loc 1 461 0 is_stmt 1
 583 002c FB68     		ldr	r3, [r7, #12]
 584 002e 002B     		cmp	r3, #0
 585 0030 02D0     		beq	.L33
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 586              		.loc 1 464 0
 587 0032 044B     		ldr	r3, .L37
 588 0034 0122     		mov	r2, #1
 589 0036 1A60     		str	r2, [r3]
 590              	.L33:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 591              		.loc 1 485 0
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 20


 592 0038 FB68     		ldr	r3, [r7, #12]
 486:.\Generated_Source\PSoC4/ADC.c **** }
 593              		.loc 1 486 0
 594 003a 181C     		mov	r0, r3
 595 003c BD46     		mov	sp, r7
 596 003e 04B0     		add	sp, sp, #16
 597              		@ sp needed
 598 0040 80BD     		pop	{r7, pc}
 599              	.L38:
 600 0042 C046     		.align	2
 601              	.L37:
 602 0044 10023A40 		.word	1077543440
 603              		.cfi_endproc
 604              	.LFE8:
 605              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 606              		.section	.text.ADC_GetResult16,"ax",%progbits
 607              		.align	2
 608              		.global	ADC_GetResult16
 609              		.code	16
 610              		.thumb_func
 611              		.type	ADC_GetResult16, %function
 612              	ADC_GetResult16:
 613              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 614              		.loc 1 505 0
 615              		.cfi_startproc
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 84B0     		sub	sp, sp, #16
 621              		.cfi_def_cfa_offset 24
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 624 0006 7860     		str	r0, [r7, #4]
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 21


 625              		.loc 1 509 0
 626 0008 7B68     		ldr	r3, [r7, #4]
 627 000a 022B     		cmp	r3, #2
 628 000c 02D9     		bls	.L40
 629              		.loc 1 509 0 is_stmt 0 discriminator 1
 630 000e 0020     		mov	r0, #0
 631 0010 FFF7FEFF 		bl	CyHalt
 632              	.L40:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 633              		.loc 1 511 0 is_stmt 1
 634 0014 7B68     		ldr	r3, [r7, #4]
 635 0016 022B     		cmp	r3, #2
 636 0018 09D8     		bhi	.L41
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 637              		.loc 1 513 0
 638 001a 7B68     		ldr	r3, [r7, #4]
 639 001c 9B00     		lsl	r3, r3, #2
 640 001e 084A     		ldr	r2, .L44
 641 0020 9446     		mov	ip, r2
 642 0022 6344     		add	r3, r3, ip
 643 0024 1B68     		ldr	r3, [r3]
 644 0026 1B04     		lsl	r3, r3, #16
 645 0028 1B0C     		lsr	r3, r3, #16
 646 002a FB60     		str	r3, [r7, #12]
 647 002c 01E0     		b	.L42
 648              	.L41:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 649              		.loc 1 521 0
 650 002e 0023     		mov	r3, #0
 651 0030 FB60     		str	r3, [r7, #12]
 652              	.L42:
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 653              		.loc 1 525 0
 654 0032 FB68     		ldr	r3, [r7, #12]
 655 0034 9BB2     		uxth	r3, r3
 656 0036 1BB2     		sxth	r3, r3
 526:.\Generated_Source\PSoC4/ADC.c **** }
 657              		.loc 1 526 0
 658 0038 181C     		mov	r0, r3
 659 003a BD46     		mov	sp, r7
 660 003c 04B0     		add	sp, sp, #16
 661              		@ sp needed
 662 003e 80BD     		pop	{r7, pc}
 663              	.L45:
 664              		.align	2
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 22


 665              	.L44:
 666 0040 80013A40 		.word	1077543296
 667              		.cfi_endproc
 668              	.LFE9:
 669              		.size	ADC_GetResult16, .-ADC_GetResult16
 670              		.section	.text.ADC_SetChanMask,"ax",%progbits
 671              		.align	2
 672              		.global	ADC_SetChanMask
 673              		.code	16
 674              		.thumb_func
 675              		.type	ADC_SetChanMask, %function
 676              	ADC_SetChanMask:
 677              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 678              		.loc 1 550 0
 679              		.cfi_startproc
 680 0000 80B5     		push	{r7, lr}
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 7, -8
 683              		.cfi_offset 14, -4
 684 0002 82B0     		sub	sp, sp, #8
 685              		.cfi_def_cfa_offset 16
 686 0004 00AF     		add	r7, sp, #0
 687              		.cfi_def_cfa_register 7
 688 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 689              		.loc 1 551 0
 690 0008 034B     		ldr	r3, .L47
 691 000a 7A68     		ldr	r2, [r7, #4]
 692 000c 0721     		mov	r1, #7
 693 000e 0A40     		and	r2, r1
 694 0010 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 695              		.loc 1 552 0
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 23


 696 0012 BD46     		mov	sp, r7
 697 0014 02B0     		add	sp, sp, #8
 698              		@ sp needed
 699 0016 80BD     		pop	{r7, pc}
 700              	.L48:
 701              		.align	2
 702              	.L47:
 703 0018 20003A40 		.word	1077542944
 704              		.cfi_endproc
 705              	.LFE10:
 706              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 707              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 708              		.align	2
 709              		.global	ADC_SetLowLimit
 710              		.code	16
 711              		.thumb_func
 712              		.type	ADC_SetLowLimit, %function
 713              	ADC_SetLowLimit:
 714              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 24


 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 715              		.loc 1 594 0
 716              		.cfi_startproc
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 82B0     		sub	sp, sp, #8
 722              		.cfi_def_cfa_offset 16
 723 0004 00AF     		add	r7, sp, #0
 724              		.cfi_def_cfa_register 7
 725 0006 7860     		str	r0, [r7, #4]
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 726              		.loc 1 595 0
 727 0008 084B     		ldr	r3, .L50
 728 000a 084A     		ldr	r2, .L50
 729 000c 1268     		ldr	r2, [r2]
 730 000e 120C     		lsr	r2, r2, #16
 731 0010 1204     		lsl	r2, r2, #16
 732 0012 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 733              		.loc 1 596 0
 734 0014 054B     		ldr	r3, .L50
 735 0016 054A     		ldr	r2, .L50
 736 0018 1168     		ldr	r1, [r2]
 737 001a 7A68     		ldr	r2, [r7, #4]
 738 001c 1204     		lsl	r2, r2, #16
 739 001e 120C     		lsr	r2, r2, #16
 740 0020 0A43     		orr	r2, r1
 741 0022 1A60     		str	r2, [r3]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 742              		.loc 1 597 0
 743 0024 BD46     		mov	sp, r7
 744 0026 02B0     		add	sp, sp, #8
 745              		@ sp needed
 746 0028 80BD     		pop	{r7, pc}
 747              	.L51:
 748 002a C046     		.align	2
 749              	.L50:
 750 002c 18003A40 		.word	1077542936
 751              		.cfi_endproc
 752              	.LFE11:
 753              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 754              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 755              		.align	2
 756              		.global	ADC_SetHighLimit
 757              		.code	16
 758              		.thumb_func
 759              		.type	ADC_SetHighLimit, %function
 760              	ADC_SetHighLimit:
 761              	.LFB12:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 25


 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 762              		.loc 1 615 0
 763              		.cfi_startproc
 764 0000 80B5     		push	{r7, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 82B0     		sub	sp, sp, #8
 769              		.cfi_def_cfa_offset 16
 770 0004 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 772 0006 7860     		str	r0, [r7, #4]
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 773              		.loc 1 616 0
 774 0008 074B     		ldr	r3, .L53
 775 000a 074A     		ldr	r2, .L53
 776 000c 1268     		ldr	r2, [r2]
 777 000e 1204     		lsl	r2, r2, #16
 778 0010 120C     		lsr	r2, r2, #16
 779 0012 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 780              		.loc 1 617 0
 781 0014 044B     		ldr	r3, .L53
 782 0016 044A     		ldr	r2, .L53
 783 0018 1168     		ldr	r1, [r2]
 784 001a 7A68     		ldr	r2, [r7, #4]
 785 001c 1204     		lsl	r2, r2, #16
 786 001e 0A43     		orr	r2, r1
 787 0020 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 788              		.loc 1 618 0
 789 0022 BD46     		mov	sp, r7
 790 0024 02B0     		add	sp, sp, #8
 791              		@ sp needed
 792 0026 80BD     		pop	{r7, pc}
 793              	.L54:
 794              		.align	2
 795              	.L53:
 796 0028 18003A40 		.word	1077542936
 797              		.cfi_endproc
 798              	.LFE12:
 799              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 800              		.section	.text.ADC_SetLimitMask,"ax",%progbits
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 26


 801              		.align	2
 802              		.global	ADC_SetLimitMask
 803              		.code	16
 804              		.thumb_func
 805              		.type	ADC_SetLimitMask, %function
 806              	ADC_SetLimitMask:
 807              	.LFB13:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 808              		.loc 1 639 0
 809              		.cfi_startproc
 810 0000 80B5     		push	{r7, lr}
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 7, -8
 813              		.cfi_offset 14, -4
 814 0002 82B0     		sub	sp, sp, #8
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 818 0006 7860     		str	r0, [r7, #4]
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 819              		.loc 1 640 0
 820 0008 034B     		ldr	r3, .L56
 821 000a 7A68     		ldr	r2, [r7, #4]
 822 000c 0721     		mov	r1, #7
 823 000e 0A40     		and	r2, r1
 824 0010 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 825              		.loc 1 641 0
 826 0012 BD46     		mov	sp, r7
 827 0014 02B0     		add	sp, sp, #8
 828              		@ sp needed
 829 0016 80BD     		pop	{r7, pc}
 830              	.L57:
 831              		.align	2
 832              	.L56:
 833 0018 38023A40 		.word	1077543480
 834              		.cfi_endproc
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 27


 835              	.LFE13:
 836              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 837              		.section	.text.ADC_SetSatMask,"ax",%progbits
 838              		.align	2
 839              		.global	ADC_SetSatMask
 840              		.code	16
 841              		.thumb_func
 842              		.type	ADC_SetSatMask, %function
 843              	ADC_SetSatMask:
 844              	.LFB14:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 845              		.loc 1 662 0
 846              		.cfi_startproc
 847 0000 80B5     		push	{r7, lr}
 848              		.cfi_def_cfa_offset 8
 849              		.cfi_offset 7, -8
 850              		.cfi_offset 14, -4
 851 0002 82B0     		sub	sp, sp, #8
 852              		.cfi_def_cfa_offset 16
 853 0004 00AF     		add	r7, sp, #0
 854              		.cfi_def_cfa_register 7
 855 0006 7860     		str	r0, [r7, #4]
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 856              		.loc 1 663 0
 857 0008 034B     		ldr	r3, .L59
 858 000a 7A68     		ldr	r2, [r7, #4]
 859 000c 0721     		mov	r1, #7
 860 000e 0A40     		and	r2, r1
 861 0010 1A60     		str	r2, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 862              		.loc 1 664 0
 863 0012 BD46     		mov	sp, r7
 864 0014 02B0     		add	sp, sp, #8
 865              		@ sp needed
 866 0016 80BD     		pop	{r7, pc}
 867              	.L60:
 868              		.align	2
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 28


 869              	.L59:
 870 0018 28023A40 		.word	1077543464
 871              		.cfi_endproc
 872              	.LFE14:
 873              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 874              		.section	.text.ADC_SetOffset,"ax",%progbits
 875              		.align	2
 876              		.global	ADC_SetOffset
 877              		.code	16
 878              		.thumb_func
 879              		.type	ADC_SetOffset, %function
 880              	ADC_SetOffset:
 881              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 882              		.loc 1 690 0
 883              		.cfi_startproc
 884 0000 80B5     		push	{r7, lr}
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 7, -8
 887              		.cfi_offset 14, -4
 888 0002 82B0     		sub	sp, sp, #8
 889              		.cfi_def_cfa_offset 16
 890 0004 00AF     		add	r7, sp, #0
 891              		.cfi_def_cfa_register 7
 892 0006 7860     		str	r0, [r7, #4]
 893 0008 0A1C     		mov	r2, r1
 894 000a BB1C     		add	r3, r7, #2
 895 000c 1A80     		strh	r2, [r3]
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 896              		.loc 1 692 0
 897 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 29


 898 0010 022B     		cmp	r3, #2
 899 0012 02D9     		bls	.L62
 900              		.loc 1 692 0 is_stmt 0 discriminator 1
 901 0014 0020     		mov	r0, #0
 902 0016 FFF7FEFF 		bl	CyHalt
 903              	.L62:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 904              		.loc 1 694 0 is_stmt 1
 905 001a 044B     		ldr	r3, .L63
 906 001c 7A68     		ldr	r2, [r7, #4]
 907 001e 5200     		lsl	r2, r2, #1
 908 0020 B91C     		add	r1, r7, #2
 909 0022 0988     		ldrh	r1, [r1]
 910 0024 D152     		strh	r1, [r2, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 911              		.loc 1 695 0
 912 0026 BD46     		mov	sp, r7
 913 0028 02B0     		add	sp, sp, #8
 914              		@ sp needed
 915 002a 80BD     		pop	{r7, pc}
 916              	.L64:
 917              		.align	2
 918              	.L63:
 919 002c 00000000 		.word	ADC_offset
 920              		.cfi_endproc
 921              	.LFE15:
 922              		.size	ADC_SetOffset, .-ADC_SetOffset
 923              		.section	.text.ADC_SetGain,"ax",%progbits
 924              		.align	2
 925              		.global	ADC_SetGain
 926              		.code	16
 927              		.thumb_func
 928              		.type	ADC_SetGain, %function
 929              	ADC_SetGain:
 930              	.LFB16:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 30


 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 931              		.loc 1 724 0
 932              		.cfi_startproc
 933 0000 80B5     		push	{r7, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 7, -8
 936              		.cfi_offset 14, -4
 937 0002 82B0     		sub	sp, sp, #8
 938              		.cfi_def_cfa_offset 16
 939 0004 00AF     		add	r7, sp, #0
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
 942 0008 3960     		str	r1, [r7]
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 943              		.loc 1 726 0
 944 000a 7B68     		ldr	r3, [r7, #4]
 945 000c 022B     		cmp	r3, #2
 946 000e 02D9     		bls	.L66
 947              		.loc 1 726 0 is_stmt 0 discriminator 1
 948 0010 0020     		mov	r0, #0
 949 0012 FFF7FEFF 		bl	CyHalt
 950              	.L66:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 951              		.loc 1 728 0 is_stmt 1
 952 0016 044B     		ldr	r3, .L67
 953 0018 7A68     		ldr	r2, [r7, #4]
 954 001a 9200     		lsl	r2, r2, #2
 955 001c 3968     		ldr	r1, [r7]
 956 001e D150     		str	r1, [r2, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 957              		.loc 1 729 0
 958 0020 BD46     		mov	sp, r7
 959 0022 02B0     		add	sp, sp, #8
 960              		@ sp needed
 961 0024 80BD     		pop	{r7, pc}
 962              	.L68:
 963 0026 C046     		.align	2
 964              	.L67:
 965 0028 00000000 		.word	ADC_countsPer10Volt
 966              		.cfi_endproc
 967              	.LFE16:
 968              		.size	ADC_SetGain, .-ADC_SetGain
 969              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 970              		.align	2
 971              		.global	ADC_CountsTo_mVolts
 972              		.code	16
 973              		.thumb_func
 974              		.type	ADC_CountsTo_mVolts, %function
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 31


 975              	ADC_CountsTo_mVolts:
 976              	.LFB17:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 977              		.loc 1 757 0
 978              		.cfi_startproc
 979 0000 80B5     		push	{r7, lr}
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 84B0     		sub	sp, sp, #16
 984              		.cfi_def_cfa_offset 24
 985 0004 00AF     		add	r7, sp, #0
 986              		.cfi_def_cfa_register 7
 987 0006 7860     		str	r0, [r7, #4]
 988 0008 0A1C     		mov	r2, r1
 989 000a BB1C     		add	r3, r7, #2
 990 000c 1A80     		strh	r2, [r3]
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 991              		.loc 1 761 0
 992 000e 7B68     		ldr	r3, [r7, #4]
 993 0010 022B     		cmp	r3, #2
 994 0012 02D9     		bls	.L70
 995              		.loc 1 761 0 is_stmt 0 discriminator 1
 996 0014 0020     		mov	r0, #0
 997 0016 FFF7FEFF 		bl	CyHalt
 998              	.L70:
 762:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 32


 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 999              		.loc 1 772 0 is_stmt 1
 1000 001a 1F4B     		ldr	r3, .L76
 1001 001c 7A68     		ldr	r2, [r7, #4]
 1002 001e 5200     		lsl	r2, r2, #1
 1003 0020 D35A     		ldrh	r3, [r2, r3]
 1004 0022 99B2     		uxth	r1, r3
 1005 0024 BB1C     		add	r3, r7, #2
 1006 0026 1A88     		ldrh	r2, [r3]
 1007 0028 8BB2     		uxth	r3, r1
 1008 002a D31A     		sub	r3, r2, r3
 1009 002c 9AB2     		uxth	r2, r3
 1010 002e BB1C     		add	r3, r7, #2
 1011 0030 1A80     		strh	r2, [r3]
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1012              		.loc 1 774 0
 1013 0032 BB1C     		add	r3, r7, #2
 1014 0034 0022     		mov	r2, #0
 1015 0036 9B5E     		ldrsh	r3, [r3, r2]
 1016 0038 184A     		ldr	r2, .L76+4
 1017 003a 5A43     		mul	r2, r3
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1018              		.loc 1 775 0
 1019 003c BB1C     		add	r3, r7, #2
 1020 003e 0021     		mov	r1, #0
 1021 0040 5B5E     		ldrsh	r3, [r3, r1]
 1022 0042 002B     		cmp	r3, #0
 1023 0044 08DD     		ble	.L71
 1024              		.loc 1 775 0 is_stmt 0 discriminator 1
 1025 0046 164B     		ldr	r3, .L76+8
 1026 0048 7968     		ldr	r1, [r7, #4]
 1027 004a 8900     		lsl	r1, r1, #2
 1028 004c CB58     		ldr	r3, [r1, r3]
 1029 004e 002B     		cmp	r3, #0
 1030 0050 00DA     		bge	.L72
 1031 0052 0133     		add	r3, r3, #1
 1032              	.L72:
 1033 0054 5B10     		asr	r3, r3, #1
 1034 0056 08E0     		b	.L73
 1035              	.L71:
 1036              		.loc 1 775 0 discriminator 2
 1037 0058 114B     		ldr	r3, .L76+8
 1038 005a 7968     		ldr	r1, [r7, #4]
 1039 005c 8900     		lsl	r1, r1, #2
 1040 005e CB58     		ldr	r3, [r1, r3]
 1041 0060 002B     		cmp	r3, #0
 1042 0062 00DA     		bge	.L74
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 33


 1043 0064 0133     		add	r3, r3, #1
 1044              	.L74:
 1045 0066 5B10     		asr	r3, r3, #1
 1046 0068 5B42     		neg	r3, r3
 1047              	.L73:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1048              		.loc 1 774 0 is_stmt 1
 1049 006a D118     		add	r1, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1050              		.loc 1 776 0
 1051 006c 0C4B     		ldr	r3, .L76+8
 1052 006e 7A68     		ldr	r2, [r7, #4]
 1053 0070 9200     		lsl	r2, r2, #2
 1054 0072 D358     		ldr	r3, [r2, r3]
 1055 0074 081C     		mov	r0, r1
 1056 0076 191C     		mov	r1, r3
 1057 0078 FFF7FEFF 		bl	__aeabi_idiv
 1058 007c 031C     		mov	r3, r0
 1059 007e 1A1C     		mov	r2, r3
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1060              		.loc 1 774 0
 1061 0080 0E23     		mov	r3, #14
 1062 0082 FB18     		add	r3, r7, r3
 1063 0084 1A80     		strh	r2, [r3]
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1064              		.loc 1 778 0
 1065 0086 0E23     		mov	r3, #14
 1066 0088 FB18     		add	r3, r7, r3
 1067 008a 1B88     		ldrh	r3, [r3]
 1068 008c 1BB2     		sxth	r3, r3
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 1069              		.loc 1 779 0
 1070 008e 181C     		mov	r0, r3
 1071 0090 BD46     		mov	sp, r7
 1072 0092 04B0     		add	sp, sp, #16
 1073              		@ sp needed
 1074 0094 80BD     		pop	{r7, pc}
 1075              	.L77:
 1076 0096 C046     		.align	2
 1077              	.L76:
 1078 0098 00000000 		.word	ADC_offset
 1079 009c 10270000 		.word	10000
 1080 00a0 00000000 		.word	ADC_countsPer10Volt
 1081              		.cfi_endproc
 1082              	.LFE17:
 1083              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1084              		.global	__aeabi_lmul
 1085              		.global	__aeabi_ldivmod
 1086              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1087              		.align	2
 1088              		.global	ADC_CountsTo_uVolts
 1089              		.code	16
 1090              		.thumb_func
 1091              		.type	ADC_CountsTo_uVolts, %function
 1092              	ADC_CountsTo_uVolts:
 1093              	.LFB18:
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 34


 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 1094              		.loc 1 811 0
 1095              		.cfi_startproc
 1096 0000 B0B5     		push	{r4, r5, r7, lr}
 1097              		.cfi_def_cfa_offset 16
 1098              		.cfi_offset 4, -16
 1099              		.cfi_offset 5, -12
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 0002 86B0     		sub	sp, sp, #24
 1103              		.cfi_def_cfa_offset 40
 1104 0004 00AF     		add	r7, sp, #0
 1105              		.cfi_def_cfa_register 7
 1106 0006 F860     		str	r0, [r7, #12]
 1107 0008 0A1C     		mov	r2, r1
 1108 000a 0A23     		mov	r3, #10
 1109 000c FB18     		add	r3, r7, r3
 1110 000e 1A80     		strh	r2, [r3]
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1111              		.loc 1 815 0
 1112 0010 FB68     		ldr	r3, [r7, #12]
 1113 0012 022B     		cmp	r3, #2
 1114 0014 02D9     		bls	.L79
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 35


 1115              		.loc 1 815 0 is_stmt 0 discriminator 1
 1116 0016 0020     		mov	r0, #0
 1117 0018 FFF7FEFF 		bl	CyHalt
 1118              	.L79:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1119              		.loc 1 826 0 is_stmt 1
 1120 001c 194B     		ldr	r3, .L81
 1121 001e FA68     		ldr	r2, [r7, #12]
 1122 0020 5200     		lsl	r2, r2, #1
 1123 0022 D35A     		ldrh	r3, [r2, r3]
 1124 0024 99B2     		uxth	r1, r3
 1125 0026 0A23     		mov	r3, #10
 1126 0028 FB18     		add	r3, r7, r3
 1127 002a 1A88     		ldrh	r2, [r3]
 1128 002c 8BB2     		uxth	r3, r1
 1129 002e D31A     		sub	r3, r2, r3
 1130 0030 9AB2     		uxth	r2, r3
 1131 0032 0A23     		mov	r3, #10
 1132 0034 FB18     		add	r3, r7, r3
 1133 0036 1A80     		strh	r2, [r3]
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1134              		.loc 1 828 0
 1135 0038 0A23     		mov	r3, #10
 1136 003a FB18     		add	r3, r7, r3
 1137 003c 1B88     		ldrh	r3, [r3]
 1138 003e 1BB2     		sxth	r3, r3
 1139 0040 3B60     		str	r3, [r7]
 1140 0042 DB17     		asr	r3, r3, #31
 1141 0044 7B60     		str	r3, [r7, #4]
 1142 0046 3868     		ldr	r0, [r7]
 1143 0048 7968     		ldr	r1, [r7, #4]
 1144 004a 0F4A     		ldr	r2, .L81+4
 1145 004c 0023     		mov	r3, #0
 1146 004e FFF7FEFF 		bl	__aeabi_lmul
 1147 0052 021C     		mov	r2, r0
 1148 0054 0B1C     		mov	r3, r1
 1149 0056 101C     		mov	r0, r2
 1150 0058 191C     		mov	r1, r3
 1151 005a 0C4B     		ldr	r3, .L81+8
 1152 005c FA68     		ldr	r2, [r7, #12]
 1153 005e 9200     		lsl	r2, r2, #2
 1154 0060 D358     		ldr	r3, [r2, r3]
 1155 0062 1C1C     		mov	r4, r3
 1156 0064 DB17     		asr	r3, r3, #31
 1157 0066 1D1C     		mov	r5, r3
 1158 0068 221C     		mov	r2, r4
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 36


 1159 006a 2B1C     		mov	r3, r5
 1160 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1161 0070 031C     		mov	r3, r0
 1162 0072 0C1C     		mov	r4, r1
 1163 0074 3B61     		str	r3, [r7, #16]
 1164 0076 7C61     		str	r4, [r7, #20]
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1165              		.loc 1 830 0
 1166 0078 3B69     		ldr	r3, [r7, #16]
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 1167              		.loc 1 831 0
 1168 007a 181C     		mov	r0, r3
 1169 007c BD46     		mov	sp, r7
 1170 007e 06B0     		add	sp, sp, #24
 1171              		@ sp needed
 1172 0080 B0BD     		pop	{r4, r5, r7, pc}
 1173              	.L82:
 1174 0082 C046     		.align	2
 1175              	.L81:
 1176 0084 00000000 		.word	ADC_offset
 1177 0088 80969800 		.word	10000000
 1178 008c 00000000 		.word	ADC_countsPer10Volt
 1179              		.cfi_endproc
 1180              	.LFE18:
 1181              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1182              		.global	__aeabi_i2f
 1183              		.global	__aeabi_fmul
 1184              		.global	__aeabi_fdiv
 1185              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1186              		.align	2
 1187              		.global	ADC_CountsTo_Volts
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	ADC_CountsTo_Volts, %function
 1191              	ADC_CountsTo_Volts:
 1192              	.LFB19:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 37


 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 1193              		.loc 1 856 0
 1194              		.cfi_startproc
 1195 0000 90B5     		push	{r4, r7, lr}
 1196              		.cfi_def_cfa_offset 12
 1197              		.cfi_offset 4, -12
 1198              		.cfi_offset 7, -8
 1199              		.cfi_offset 14, -4
 1200 0002 85B0     		sub	sp, sp, #20
 1201              		.cfi_def_cfa_offset 32
 1202 0004 00AF     		add	r7, sp, #0
 1203              		.cfi_def_cfa_register 7
 1204 0006 7860     		str	r0, [r7, #4]
 1205 0008 0A1C     		mov	r2, r1
 1206 000a BB1C     		add	r3, r7, #2
 1207 000c 1A80     		strh	r2, [r3]
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1208              		.loc 1 860 0
 1209 000e 7B68     		ldr	r3, [r7, #4]
 1210 0010 022B     		cmp	r3, #2
 1211 0012 02D9     		bls	.L84
 1212              		.loc 1 860 0 is_stmt 0 discriminator 1
 1213 0014 0020     		mov	r0, #0
 1214 0016 FFF7FEFF 		bl	CyHalt
 1215              	.L84:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1216              		.loc 1 871 0 is_stmt 1
 1217 001a 164B     		ldr	r3, .L86
 1218 001c 7A68     		ldr	r2, [r7, #4]
 1219 001e 5200     		lsl	r2, r2, #1
 1220 0020 D35A     		ldrh	r3, [r2, r3]
 1221 0022 99B2     		uxth	r1, r3
 1222 0024 BB1C     		add	r3, r7, #2
 1223 0026 1A88     		ldrh	r2, [r3]
 1224 0028 8BB2     		uxth	r3, r1
 1225 002a D31A     		sub	r3, r2, r3
 1226 002c 9AB2     		uxth	r2, r3
 1227 002e BB1C     		add	r3, r7, #2
 1228 0030 1A80     		strh	r2, [r3]
 872:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 38


 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1229              		.loc 1 873 0
 1230 0032 BB1C     		add	r3, r7, #2
 1231 0034 0022     		mov	r2, #0
 1232 0036 9B5E     		ldrsh	r3, [r3, r2]
 1233 0038 181C     		mov	r0, r3
 1234 003a FFF7FEFF 		bl	__aeabi_i2f
 1235 003e 031C     		add	r3, r0, #0
 1236 0040 181C     		add	r0, r3, #0
 1237 0042 0D49     		ldr	r1, .L86+4
 1238 0044 FFF7FEFF 		bl	__aeabi_fmul
 1239 0048 031C     		add	r3, r0, #0
 1240 004a 1C1C     		add	r4, r3, #0
 1241 004c 0B4B     		ldr	r3, .L86+8
 1242 004e 7A68     		ldr	r2, [r7, #4]
 1243 0050 9200     		lsl	r2, r2, #2
 1244 0052 D358     		ldr	r3, [r2, r3]
 1245 0054 181C     		mov	r0, r3
 1246 0056 FFF7FEFF 		bl	__aeabi_i2f
 1247 005a 031C     		add	r3, r0, #0
 1248 005c 201C     		add	r0, r4, #0
 1249 005e 191C     		add	r1, r3, #0
 1250 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1251 0064 031C     		add	r3, r0, #0
 1252 0066 FB60     		str	r3, [r7, #12]
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 1253              		.loc 1 875 0
 1254 0068 FB68     		ldr	r3, [r7, #12]
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 1255              		.loc 1 876 0
 1256 006a 181C     		add	r0, r3, #0
 1257 006c BD46     		mov	sp, r7
 1258 006e 05B0     		add	sp, sp, #20
 1259              		@ sp needed
 1260 0070 90BD     		pop	{r4, r7, pc}
 1261              	.L87:
 1262 0072 C046     		.align	2
 1263              	.L86:
 1264 0074 00000000 		.word	ADC_offset
 1265 0078 00002041 		.word	1092616192
 1266 007c 00000000 		.word	ADC_countsPer10Volt
 1267              		.cfi_endproc
 1268              	.LFE19:
 1269              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1270              		.section	.rodata
 1271              		.align	2
 1272              		.type	ADC_InputsPlacement.4768, %object
 1273              		.size	ADC_InputsPlacement.4768, 3
 1274              	ADC_InputsPlacement.4768:
 1275 000c 00       		.byte	0
 1276 000d 01       		.byte	1
 1277 000e 02       		.byte	2
 1278 000f 00       		.text
 1279              	.Letext0:
 1280              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1281              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 39


 1282              	.Ldebug_info0:
 1283 0000 9D040000 		.4byte	0x49d
 1284 0004 0400     		.2byte	0x4
 1285 0006 00000000 		.4byte	.Ldebug_abbrev0
 1286 000a 04       		.byte	0x4
 1287 000b 01       		.uleb128 0x1
 1288 000c 01030000 		.4byte	.LASF60
 1289 0010 01       		.byte	0x1
 1290 0011 63020000 		.4byte	.LASF61
 1291 0015 F5000000 		.4byte	.LASF62
 1292 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1293 001d 00000000 		.4byte	0
 1294 0021 00000000 		.4byte	.Ldebug_line0
 1295 0025 02       		.uleb128 0x2
 1296 0026 01       		.byte	0x1
 1297 0027 06       		.byte	0x6
 1298 0028 7C000000 		.4byte	.LASF0
 1299 002c 02       		.uleb128 0x2
 1300 002d 01       		.byte	0x1
 1301 002e 08       		.byte	0x8
 1302 002f 82020000 		.4byte	.LASF1
 1303 0033 02       		.uleb128 0x2
 1304 0034 02       		.byte	0x2
 1305 0035 05       		.byte	0x5
 1306 0036 9B020000 		.4byte	.LASF2
 1307 003a 02       		.uleb128 0x2
 1308 003b 02       		.byte	0x2
 1309 003c 07       		.byte	0x7
 1310 003d 9E010000 		.4byte	.LASF3
 1311 0041 02       		.uleb128 0x2
 1312 0042 04       		.byte	0x4
 1313 0043 05       		.byte	0x5
 1314 0044 9F000000 		.4byte	.LASF4
 1315 0048 02       		.uleb128 0x2
 1316 0049 04       		.byte	0x4
 1317 004a 07       		.byte	0x7
 1318 004b 6D010000 		.4byte	.LASF5
 1319 004f 02       		.uleb128 0x2
 1320 0050 08       		.byte	0x8
 1321 0051 05       		.byte	0x5
 1322 0052 6E000000 		.4byte	.LASF6
 1323 0056 02       		.uleb128 0x2
 1324 0057 08       		.byte	0x8
 1325 0058 07       		.byte	0x7
 1326 0059 32000000 		.4byte	.LASF7
 1327 005d 03       		.uleb128 0x3
 1328 005e 04       		.byte	0x4
 1329 005f 05       		.byte	0x5
 1330 0060 696E7400 		.ascii	"int\000"
 1331 0064 02       		.uleb128 0x2
 1332 0065 04       		.byte	0x4
 1333 0066 07       		.byte	0x7
 1334 0067 59010000 		.4byte	.LASF8
 1335 006b 04       		.uleb128 0x4
 1336 006c D0000000 		.4byte	.LASF9
 1337 0070 02       		.byte	0x2
 1338 0071 3801     		.2byte	0x138
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 40


 1339 0073 2C000000 		.4byte	0x2c
 1340 0077 04       		.uleb128 0x4
 1341 0078 00000000 		.4byte	.LASF10
 1342 007c 02       		.byte	0x2
 1343 007d 3901     		.2byte	0x139
 1344 007f 3A000000 		.4byte	0x3a
 1345 0083 04       		.uleb128 0x4
 1346 0084 DD000000 		.4byte	.LASF11
 1347 0088 02       		.byte	0x2
 1348 0089 3A01     		.2byte	0x13a
 1349 008b 48000000 		.4byte	0x48
 1350 008f 04       		.uleb128 0x4
 1351 0090 ED020000 		.4byte	.LASF12
 1352 0094 02       		.byte	0x2
 1353 0095 3C01     		.2byte	0x13c
 1354 0097 33000000 		.4byte	0x33
 1355 009b 04       		.uleb128 0x4
 1356 009c 8F000000 		.4byte	.LASF13
 1357 00a0 02       		.byte	0x2
 1358 00a1 3D01     		.2byte	0x13d
 1359 00a3 41000000 		.4byte	0x41
 1360 00a7 04       		.uleb128 0x4
 1361 00a8 CE010000 		.4byte	.LASF14
 1362 00ac 02       		.byte	0x2
 1363 00ad 3E01     		.2byte	0x13e
 1364 00af B3000000 		.4byte	0xb3
 1365 00b3 02       		.uleb128 0x2
 1366 00b4 04       		.byte	0x4
 1367 00b5 04       		.byte	0x4
 1368 00b6 2F020000 		.4byte	.LASF15
 1369 00ba 02       		.uleb128 0x2
 1370 00bb 08       		.byte	0x8
 1371 00bc 04       		.byte	0x4
 1372 00bd D6000000 		.4byte	.LASF16
 1373 00c1 04       		.uleb128 0x4
 1374 00c2 0D020000 		.4byte	.LASF17
 1375 00c6 02       		.byte	0x2
 1376 00c7 4301     		.2byte	0x143
 1377 00c9 4F000000 		.4byte	0x4f
 1378 00cd 02       		.uleb128 0x2
 1379 00ce 01       		.byte	0x1
 1380 00cf 08       		.byte	0x8
 1381 00d0 B9020000 		.4byte	.LASF18
 1382 00d4 04       		.uleb128 0x4
 1383 00d5 C8010000 		.4byte	.LASF19
 1384 00d9 02       		.byte	0x2
 1385 00da E401     		.2byte	0x1e4
 1386 00dc E0000000 		.4byte	0xe0
 1387 00e0 05       		.uleb128 0x5
 1388 00e1 83000000 		.4byte	0x83
 1389 00e5 02       		.uleb128 0x2
 1390 00e6 04       		.byte	0x4
 1391 00e7 07       		.byte	0x7
 1392 00e8 D6010000 		.4byte	.LASF20
 1393 00ec 06       		.uleb128 0x6
 1394 00ed 95000000 		.4byte	.LASF25
 1395 00f1 01       		.byte	0x1
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 41


 1396 00f2 3F       		.byte	0x3f
 1397 00f3 00000000 		.4byte	.LFB2
 1398 00f7 24000000 		.4byte	.LFE2-.LFB2
 1399 00fb 01       		.uleb128 0x1
 1400 00fc 9C       		.byte	0x9c
 1401 00fd 07       		.uleb128 0x7
 1402 00fe 29000000 		.4byte	.LASF36
 1403 0102 01       		.byte	0x1
 1404 0103 5E       		.byte	0x5e
 1405 0104 00000000 		.4byte	.LFB3
 1406 0108 0C020000 		.4byte	.LFE3-.LFB3
 1407 010c 01       		.uleb128 0x1
 1408 010d 9C       		.byte	0x9c
 1409 010e 4E010000 		.4byte	0x14e
 1410 0112 08       		.uleb128 0x8
 1411 0113 AE020000 		.4byte	.LASF21
 1412 0117 01       		.byte	0x1
 1413 0118 60       		.byte	0x60
 1414 0119 83000000 		.4byte	0x83
 1415 011d 02       		.uleb128 0x2
 1416 011e 91       		.byte	0x91
 1417 011f 74       		.sleb128 -12
 1418 0120 08       		.uleb128 0x8
 1419 0121 94010000 		.4byte	.LASF22
 1420 0125 01       		.byte	0x1
 1421 0126 61       		.byte	0x61
 1422 0127 83000000 		.4byte	0x83
 1423 012b 02       		.uleb128 0x2
 1424 012c 91       		.byte	0x91
 1425 012d 6C       		.sleb128 -20
 1426 012e 08       		.uleb128 0x8
 1427 012f 0F000000 		.4byte	.LASF23
 1428 0133 01       		.byte	0x1
 1429 0134 62       		.byte	0x62
 1430 0135 9B000000 		.4byte	0x9b
 1431 0139 02       		.uleb128 0x2
 1432 013a 91       		.byte	0x91
 1433 013b 70       		.sleb128 -16
 1434 013c 08       		.uleb128 0x8
 1435 013d 49000000 		.4byte	.LASF24
 1436 0141 01       		.byte	0x1
 1437 0142 65       		.byte	0x65
 1438 0143 5E010000 		.4byte	0x15e
 1439 0147 05       		.uleb128 0x5
 1440 0148 03       		.byte	0x3
 1441 0149 0C000000 		.4byte	ADC_InputsPlacement.4768
 1442 014d 00       		.byte	0
 1443 014e 09       		.uleb128 0x9
 1444 014f 6B000000 		.4byte	0x6b
 1445 0153 5E010000 		.4byte	0x15e
 1446 0157 0A       		.uleb128 0xa
 1447 0158 E5000000 		.4byte	0xe5
 1448 015c 02       		.byte	0x2
 1449 015d 00       		.byte	0
 1450 015e 0B       		.uleb128 0xb
 1451 015f 4E010000 		.4byte	0x14e
 1452 0163 0C       		.uleb128 0xc
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 42


 1453 0164 E2020000 		.4byte	.LASF26
 1454 0168 01       		.byte	0x1
 1455 0169 4A01     		.2byte	0x14a
 1456 016b 00000000 		.4byte	.LFB4
 1457 016f 38000000 		.4byte	.LFE4-.LFB4
 1458 0173 01       		.uleb128 0x1
 1459 0174 9C       		.byte	0x9c
 1460 0175 0D       		.uleb128 0xd
 1461 0176 A5020000 		.4byte	.LASF27
 1462 017a 01       		.byte	0x1
 1463 017b 6D01     		.2byte	0x16d
 1464 017d 00000000 		.4byte	.LFB5
 1465 0181 18000000 		.4byte	.LFE5-.LFB5
 1466 0185 01       		.uleb128 0x1
 1467 0186 9C       		.byte	0x9c
 1468 0187 0D       		.uleb128 0xd
 1469 0188 5D000000 		.4byte	.LASF28
 1470 018c 01       		.byte	0x1
 1471 018d 8701     		.2byte	0x187
 1472 018f 00000000 		.4byte	.LFB6
 1473 0193 1C000000 		.4byte	.LFE6-.LFB6
 1474 0197 01       		.uleb128 0x1
 1475 0198 9C       		.byte	0x9c
 1476 0199 0D       		.uleb128 0xd
 1477 019a B1010000 		.4byte	.LASF29
 1478 019e 01       		.byte	0x1
 1479 019f A001     		.2byte	0x1a0
 1480 01a1 00000000 		.4byte	.LFB7
 1481 01a5 1C000000 		.4byte	.LFE7-.LFB7
 1482 01a9 01       		.uleb128 0x1
 1483 01aa 9C       		.byte	0x9c
 1484 01ab 0E       		.uleb128 0xe
 1485 01ac F9010000 		.4byte	.LASF31
 1486 01b0 01       		.byte	0x1
 1487 01b1 C201     		.2byte	0x1c2
 1488 01b3 83000000 		.4byte	0x83
 1489 01b7 00000000 		.4byte	.LFB8
 1490 01bb 48000000 		.4byte	.LFE8-.LFB8
 1491 01bf 01       		.uleb128 0x1
 1492 01c0 9C       		.byte	0x9c
 1493 01c1 E4010000 		.4byte	0x1e4
 1494 01c5 0F       		.uleb128 0xf
 1495 01c6 40010000 		.4byte	.LASF33
 1496 01ca 01       		.byte	0x1
 1497 01cb C201     		.2byte	0x1c2
 1498 01cd 83000000 		.4byte	0x83
 1499 01d1 02       		.uleb128 0x2
 1500 01d2 91       		.byte	0x91
 1501 01d3 6C       		.sleb128 -20
 1502 01d4 10       		.uleb128 0x10
 1503 01d5 88000000 		.4byte	.LASF30
 1504 01d9 01       		.byte	0x1
 1505 01da C401     		.2byte	0x1c4
 1506 01dc 83000000 		.4byte	0x83
 1507 01e0 02       		.uleb128 0x2
 1508 01e1 91       		.byte	0x91
 1509 01e2 74       		.sleb128 -12
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 43


 1510 01e3 00       		.byte	0
 1511 01e4 11       		.uleb128 0x11
 1512 01e5 96030000 		.4byte	.LASF32
 1513 01e9 01       		.byte	0x1
 1514 01ea F801     		.2byte	0x1f8
 1515 01ec 8F000000 		.4byte	0x8f
 1516 01f0 00000000 		.4byte	.LFB9
 1517 01f4 44000000 		.4byte	.LFE9-.LFB9
 1518 01f8 01       		.uleb128 0x1
 1519 01f9 9C       		.byte	0x9c
 1520 01fa 1D020000 		.4byte	0x21d
 1521 01fe 0F       		.uleb128 0xf
 1522 01ff B4020000 		.4byte	.LASF34
 1523 0203 01       		.byte	0x1
 1524 0204 F801     		.2byte	0x1f8
 1525 0206 83000000 		.4byte	0x83
 1526 020a 02       		.uleb128 0x2
 1527 020b 91       		.byte	0x91
 1528 020c 6C       		.sleb128 -20
 1529 020d 10       		.uleb128 0x10
 1530 020e 8F030000 		.4byte	.LASF35
 1531 0212 01       		.byte	0x1
 1532 0213 FA01     		.2byte	0x1fa
 1533 0215 83000000 		.4byte	0x83
 1534 0219 02       		.uleb128 0x2
 1535 021a 91       		.byte	0x91
 1536 021b 74       		.sleb128 -12
 1537 021c 00       		.byte	0
 1538 021d 12       		.uleb128 0x12
 1539 021e 13020000 		.4byte	.LASF37
 1540 0222 01       		.byte	0x1
 1541 0223 2502     		.2byte	0x225
 1542 0225 00000000 		.4byte	.LFB10
 1543 0229 1C000000 		.4byte	.LFE10-.LFB10
 1544 022d 01       		.uleb128 0x1
 1545 022e 9C       		.byte	0x9c
 1546 022f 43020000 		.4byte	0x243
 1547 0233 0F       		.uleb128 0xf
 1548 0234 E4000000 		.4byte	.LASF38
 1549 0238 01       		.byte	0x1
 1550 0239 2502     		.2byte	0x225
 1551 023b 83000000 		.4byte	0x83
 1552 023f 02       		.uleb128 0x2
 1553 0240 91       		.byte	0x91
 1554 0241 74       		.sleb128 -12
 1555 0242 00       		.byte	0
 1556 0243 12       		.uleb128 0x12
 1557 0244 53020000 		.4byte	.LASF39
 1558 0248 01       		.byte	0x1
 1559 0249 5102     		.2byte	0x251
 1560 024b 00000000 		.4byte	.LFB11
 1561 024f 30000000 		.4byte	.LFE11-.LFB11
 1562 0253 01       		.uleb128 0x1
 1563 0254 9C       		.byte	0x9c
 1564 0255 69020000 		.4byte	0x269
 1565 0259 0F       		.uleb128 0xf
 1566 025a DF010000 		.4byte	.LASF40
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 44


 1567 025e 01       		.byte	0x1
 1568 025f 5102     		.2byte	0x251
 1569 0261 83000000 		.4byte	0x83
 1570 0265 02       		.uleb128 0x2
 1571 0266 91       		.byte	0x91
 1572 0267 74       		.sleb128 -12
 1573 0268 00       		.byte	0
 1574 0269 12       		.uleb128 0x12
 1575 026a E8010000 		.4byte	.LASF41
 1576 026e 01       		.byte	0x1
 1577 026f 6602     		.2byte	0x266
 1578 0271 00000000 		.4byte	.LFB12
 1579 0275 2C000000 		.4byte	.LFE12-.LFB12
 1580 0279 01       		.uleb128 0x1
 1581 027a 9C       		.byte	0x9c
 1582 027b 8F020000 		.4byte	0x28f
 1583 027f 0F       		.uleb128 0xf
 1584 0280 35020000 		.4byte	.LASF42
 1585 0284 01       		.byte	0x1
 1586 0285 6602     		.2byte	0x266
 1587 0287 83000000 		.4byte	0x83
 1588 028b 02       		.uleb128 0x2
 1589 028c 91       		.byte	0x91
 1590 028d 74       		.sleb128 -12
 1591 028e 00       		.byte	0
 1592 028f 12       		.uleb128 0x12
 1593 0290 48010000 		.4byte	.LASF43
 1594 0294 01       		.byte	0x1
 1595 0295 7E02     		.2byte	0x27e
 1596 0297 00000000 		.4byte	.LFB13
 1597 029b 1C000000 		.4byte	.LFE13-.LFB13
 1598 029f 01       		.uleb128 0x1
 1599 02a0 9C       		.byte	0x9c
 1600 02a1 B5020000 		.4byte	0x2b5
 1601 02a5 0F       		.uleb128 0xf
 1602 02a6 E4000000 		.4byte	.LASF38
 1603 02aa 01       		.byte	0x1
 1604 02ab 7E02     		.2byte	0x27e
 1605 02ad 83000000 		.4byte	0x83
 1606 02b1 02       		.uleb128 0x2
 1607 02b2 91       		.byte	0x91
 1608 02b3 74       		.sleb128 -12
 1609 02b4 00       		.byte	0
 1610 02b5 12       		.uleb128 0x12
 1611 02b6 7F010000 		.4byte	.LASF44
 1612 02ba 01       		.byte	0x1
 1613 02bb 9502     		.2byte	0x295
 1614 02bd 00000000 		.4byte	.LFB14
 1615 02c1 1C000000 		.4byte	.LFE14-.LFB14
 1616 02c5 01       		.uleb128 0x1
 1617 02c6 9C       		.byte	0x9c
 1618 02c7 DB020000 		.4byte	0x2db
 1619 02cb 0F       		.uleb128 0xf
 1620 02cc E4000000 		.4byte	.LASF38
 1621 02d0 01       		.byte	0x1
 1622 02d1 9502     		.2byte	0x295
 1623 02d3 83000000 		.4byte	0x83
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 45


 1624 02d7 02       		.uleb128 0x2
 1625 02d8 91       		.byte	0x91
 1626 02d9 74       		.sleb128 -12
 1627 02da 00       		.byte	0
 1628 02db 13       		.uleb128 0x13
 1629 02dc F3020000 		.4byte	.LASF45
 1630 02e0 01       		.byte	0x1
 1631 02e1 B102     		.2byte	0x2b1
 1632 02e3 00000000 		.4byte	.LFB15
 1633 02e7 30000000 		.4byte	.LFE15-.LFB15
 1634 02eb 01       		.uleb128 0x1
 1635 02ec 9C       		.byte	0x9c
 1636 02ed 10030000 		.4byte	0x310
 1637 02f1 0F       		.uleb128 0xf
 1638 02f2 B4020000 		.4byte	.LASF34
 1639 02f6 01       		.byte	0x1
 1640 02f7 B102     		.2byte	0x2b1
 1641 02f9 83000000 		.4byte	0x83
 1642 02fd 02       		.uleb128 0x2
 1643 02fe 91       		.byte	0x91
 1644 02ff 74       		.sleb128 -12
 1645 0300 0F       		.uleb128 0xf
 1646 0301 D1020000 		.4byte	.LASF46
 1647 0305 01       		.byte	0x1
 1648 0306 B102     		.2byte	0x2b1
 1649 0308 8F000000 		.4byte	0x8f
 1650 030c 02       		.uleb128 0x2
 1651 030d 91       		.byte	0x91
 1652 030e 72       		.sleb128 -14
 1653 030f 00       		.byte	0
 1654 0310 13       		.uleb128 0x13
 1655 0311 23020000 		.4byte	.LASF47
 1656 0315 01       		.byte	0x1
 1657 0316 D302     		.2byte	0x2d3
 1658 0318 00000000 		.4byte	.LFB16
 1659 031c 2C000000 		.4byte	.LFE16-.LFB16
 1660 0320 01       		.uleb128 0x1
 1661 0321 9C       		.byte	0x9c
 1662 0322 45030000 		.4byte	0x345
 1663 0326 0F       		.uleb128 0xf
 1664 0327 B4020000 		.4byte	.LASF34
 1665 032b 01       		.byte	0x1
 1666 032c D302     		.2byte	0x2d3
 1667 032e 83000000 		.4byte	0x83
 1668 0332 02       		.uleb128 0x2
 1669 0333 91       		.byte	0x91
 1670 0334 74       		.sleb128 -12
 1671 0335 0F       		.uleb128 0xf
 1672 0336 07000000 		.4byte	.LASF48
 1673 033a 01       		.byte	0x1
 1674 033b D302     		.2byte	0x2d3
 1675 033d 9B000000 		.4byte	0x9b
 1676 0341 02       		.uleb128 0x2
 1677 0342 91       		.byte	0x91
 1678 0343 70       		.sleb128 -16
 1679 0344 00       		.byte	0
 1680 0345 11       		.uleb128 0x11
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 46


 1681 0346 3F020000 		.4byte	.LASF49
 1682 034a 01       		.byte	0x1
 1683 034b F402     		.2byte	0x2f4
 1684 034d 8F000000 		.4byte	0x8f
 1685 0351 00000000 		.4byte	.LFB17
 1686 0355 A4000000 		.4byte	.LFE17-.LFB17
 1687 0359 01       		.uleb128 0x1
 1688 035a 9C       		.byte	0x9c
 1689 035b 8D030000 		.4byte	0x38d
 1690 035f 0F       		.uleb128 0xf
 1691 0360 B4020000 		.4byte	.LASF34
 1692 0364 01       		.byte	0x1
 1693 0365 F402     		.2byte	0x2f4
 1694 0367 83000000 		.4byte	0x83
 1695 036b 02       		.uleb128 0x2
 1696 036c 91       		.byte	0x91
 1697 036d 6C       		.sleb128 -20
 1698 036e 0F       		.uleb128 0xf
 1699 036f D8020000 		.4byte	.LASF50
 1700 0373 01       		.byte	0x1
 1701 0374 F402     		.2byte	0x2f4
 1702 0376 8F000000 		.4byte	0x8f
 1703 037a 02       		.uleb128 0x2
 1704 037b 91       		.byte	0x91
 1705 037c 6A       		.sleb128 -22
 1706 037d 10       		.uleb128 0x10
 1707 037e C1010000 		.4byte	.LASF51
 1708 0382 01       		.byte	0x1
 1709 0383 F602     		.2byte	0x2f6
 1710 0385 8F000000 		.4byte	0x8f
 1711 0389 02       		.uleb128 0x2
 1712 038a 91       		.byte	0x91
 1713 038b 76       		.sleb128 -10
 1714 038c 00       		.byte	0
 1715 038d 11       		.uleb128 0x11
 1716 038e A8000000 		.4byte	.LASF52
 1717 0392 01       		.byte	0x1
 1718 0393 2A03     		.2byte	0x32a
 1719 0395 9B000000 		.4byte	0x9b
 1720 0399 00000000 		.4byte	.LFB18
 1721 039d 90000000 		.4byte	.LFE18-.LFB18
 1722 03a1 01       		.uleb128 0x1
 1723 03a2 9C       		.byte	0x9c
 1724 03a3 D5030000 		.4byte	0x3d5
 1725 03a7 0F       		.uleb128 0xf
 1726 03a8 B4020000 		.4byte	.LASF34
 1727 03ac 01       		.byte	0x1
 1728 03ad 2A03     		.2byte	0x32a
 1729 03af 83000000 		.4byte	0x83
 1730 03b3 02       		.uleb128 0x2
 1731 03b4 91       		.byte	0x91
 1732 03b5 64       		.sleb128 -28
 1733 03b6 0F       		.uleb128 0xf
 1734 03b7 D8020000 		.4byte	.LASF50
 1735 03bb 01       		.byte	0x1
 1736 03bc 2A03     		.2byte	0x32a
 1737 03be 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 47


 1738 03c2 02       		.uleb128 0x2
 1739 03c3 91       		.byte	0x91
 1740 03c4 62       		.sleb128 -30
 1741 03c5 10       		.uleb128 0x10
 1742 03c6 66010000 		.4byte	.LASF53
 1743 03ca 01       		.byte	0x1
 1744 03cb 2C03     		.2byte	0x32c
 1745 03cd C1000000 		.4byte	0xc1
 1746 03d1 02       		.uleb128 0x2
 1747 03d2 91       		.byte	0x91
 1748 03d3 68       		.sleb128 -24
 1749 03d4 00       		.byte	0
 1750 03d5 11       		.uleb128 0x11
 1751 03d6 16000000 		.4byte	.LASF54
 1752 03da 01       		.byte	0x1
 1753 03db 5703     		.2byte	0x357
 1754 03dd A7000000 		.4byte	0xa7
 1755 03e1 00000000 		.4byte	.LFB19
 1756 03e5 80000000 		.4byte	.LFE19-.LFB19
 1757 03e9 01       		.uleb128 0x1
 1758 03ea 9C       		.byte	0x9c
 1759 03eb 1D040000 		.4byte	0x41d
 1760 03ef 0F       		.uleb128 0xf
 1761 03f0 B4020000 		.4byte	.LASF34
 1762 03f4 01       		.byte	0x1
 1763 03f5 5703     		.2byte	0x357
 1764 03f7 83000000 		.4byte	0x83
 1765 03fb 02       		.uleb128 0x2
 1766 03fc 91       		.byte	0x91
 1767 03fd 64       		.sleb128 -28
 1768 03fe 0F       		.uleb128 0xf
 1769 03ff D8020000 		.4byte	.LASF50
 1770 0403 01       		.byte	0x1
 1771 0404 5703     		.2byte	0x357
 1772 0406 8F000000 		.4byte	0x8f
 1773 040a 02       		.uleb128 0x2
 1774 040b 91       		.byte	0x91
 1775 040c 62       		.sleb128 -30
 1776 040d 10       		.uleb128 0x10
 1777 040e 8E010000 		.4byte	.LASF55
 1778 0412 01       		.byte	0x1
 1779 0413 5903     		.2byte	0x359
 1780 0415 A7000000 		.4byte	0xa7
 1781 0419 02       		.uleb128 0x2
 1782 041a 91       		.byte	0x91
 1783 041b 6C       		.sleb128 -20
 1784 041c 00       		.byte	0
 1785 041d 09       		.uleb128 0x9
 1786 041e 83000000 		.4byte	0x83
 1787 0422 2D040000 		.4byte	0x42d
 1788 0426 0A       		.uleb128 0xa
 1789 0427 E5000000 		.4byte	0xe5
 1790 042b 02       		.byte	0x2
 1791 042c 00       		.byte	0
 1792 042d 08       		.uleb128 0x8
 1793 042e BE020000 		.4byte	.LASF56
 1794 0432 01       		.byte	0x1
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 48


 1795 0433 21       		.byte	0x21
 1796 0434 3E040000 		.4byte	0x43e
 1797 0438 05       		.uleb128 0x5
 1798 0439 03       		.byte	0x3
 1799 043a 00000000 		.4byte	ADC_channelsConfig
 1800 043e 0B       		.uleb128 0xb
 1801 043f 1D040000 		.4byte	0x41d
 1802 0443 14       		.uleb128 0x14
 1803 0444 E9000000 		.4byte	.LASF57
 1804 0448 01       		.byte	0x1
 1805 0449 18       		.byte	0x18
 1806 044a 6B000000 		.4byte	0x6b
 1807 044e 05       		.uleb128 0x5
 1808 044f 03       		.byte	0x3
 1809 0450 00000000 		.4byte	ADC_initVar
 1810 0454 09       		.uleb128 0x9
 1811 0455 8F000000 		.4byte	0x8f
 1812 0459 64040000 		.4byte	0x464
 1813 045d 0A       		.uleb128 0xa
 1814 045e E5000000 		.4byte	0xe5
 1815 0462 02       		.byte	0x2
 1816 0463 00       		.byte	0
 1817 0464 14       		.uleb128 0x14
 1818 0465 90020000 		.4byte	.LASF58
 1819 0469 01       		.byte	0x1
 1820 046a 19       		.byte	0x19
 1821 046b 75040000 		.4byte	0x475
 1822 046f 05       		.uleb128 0x5
 1823 0470 03       		.byte	0x3
 1824 0471 00000000 		.4byte	ADC_offset
 1825 0475 05       		.uleb128 0x5
 1826 0476 54040000 		.4byte	0x454
 1827 047a 09       		.uleb128 0x9
 1828 047b 9B000000 		.4byte	0x9b
 1829 047f 8A040000 		.4byte	0x48a
 1830 0483 0A       		.uleb128 0xa
 1831 0484 E5000000 		.4byte	0xe5
 1832 0488 02       		.byte	0x2
 1833 0489 00       		.byte	0
 1834 048a 14       		.uleb128 0x14
 1835 048b BC000000 		.4byte	.LASF59
 1836 048f 01       		.byte	0x1
 1837 0490 1A       		.byte	0x1a
 1838 0491 9B040000 		.4byte	0x49b
 1839 0495 05       		.uleb128 0x5
 1840 0496 03       		.byte	0x3
 1841 0497 00000000 		.4byte	ADC_countsPer10Volt
 1842 049b 05       		.uleb128 0x5
 1843 049c 7A040000 		.4byte	0x47a
 1844 04a0 00       		.byte	0
 1845              		.section	.debug_abbrev,"",%progbits
 1846              	.Ldebug_abbrev0:
 1847 0000 01       		.uleb128 0x1
 1848 0001 11       		.uleb128 0x11
 1849 0002 01       		.byte	0x1
 1850 0003 25       		.uleb128 0x25
 1851 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 49


 1852 0005 13       		.uleb128 0x13
 1853 0006 0B       		.uleb128 0xb
 1854 0007 03       		.uleb128 0x3
 1855 0008 0E       		.uleb128 0xe
 1856 0009 1B       		.uleb128 0x1b
 1857 000a 0E       		.uleb128 0xe
 1858 000b 55       		.uleb128 0x55
 1859 000c 17       		.uleb128 0x17
 1860 000d 11       		.uleb128 0x11
 1861 000e 01       		.uleb128 0x1
 1862 000f 10       		.uleb128 0x10
 1863 0010 17       		.uleb128 0x17
 1864 0011 00       		.byte	0
 1865 0012 00       		.byte	0
 1866 0013 02       		.uleb128 0x2
 1867 0014 24       		.uleb128 0x24
 1868 0015 00       		.byte	0
 1869 0016 0B       		.uleb128 0xb
 1870 0017 0B       		.uleb128 0xb
 1871 0018 3E       		.uleb128 0x3e
 1872 0019 0B       		.uleb128 0xb
 1873 001a 03       		.uleb128 0x3
 1874 001b 0E       		.uleb128 0xe
 1875 001c 00       		.byte	0
 1876 001d 00       		.byte	0
 1877 001e 03       		.uleb128 0x3
 1878 001f 24       		.uleb128 0x24
 1879 0020 00       		.byte	0
 1880 0021 0B       		.uleb128 0xb
 1881 0022 0B       		.uleb128 0xb
 1882 0023 3E       		.uleb128 0x3e
 1883 0024 0B       		.uleb128 0xb
 1884 0025 03       		.uleb128 0x3
 1885 0026 08       		.uleb128 0x8
 1886 0027 00       		.byte	0
 1887 0028 00       		.byte	0
 1888 0029 04       		.uleb128 0x4
 1889 002a 16       		.uleb128 0x16
 1890 002b 00       		.byte	0
 1891 002c 03       		.uleb128 0x3
 1892 002d 0E       		.uleb128 0xe
 1893 002e 3A       		.uleb128 0x3a
 1894 002f 0B       		.uleb128 0xb
 1895 0030 3B       		.uleb128 0x3b
 1896 0031 05       		.uleb128 0x5
 1897 0032 49       		.uleb128 0x49
 1898 0033 13       		.uleb128 0x13
 1899 0034 00       		.byte	0
 1900 0035 00       		.byte	0
 1901 0036 05       		.uleb128 0x5
 1902 0037 35       		.uleb128 0x35
 1903 0038 00       		.byte	0
 1904 0039 49       		.uleb128 0x49
 1905 003a 13       		.uleb128 0x13
 1906 003b 00       		.byte	0
 1907 003c 00       		.byte	0
 1908 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 50


 1909 003e 2E       		.uleb128 0x2e
 1910 003f 00       		.byte	0
 1911 0040 3F       		.uleb128 0x3f
 1912 0041 19       		.uleb128 0x19
 1913 0042 03       		.uleb128 0x3
 1914 0043 0E       		.uleb128 0xe
 1915 0044 3A       		.uleb128 0x3a
 1916 0045 0B       		.uleb128 0xb
 1917 0046 3B       		.uleb128 0x3b
 1918 0047 0B       		.uleb128 0xb
 1919 0048 27       		.uleb128 0x27
 1920 0049 19       		.uleb128 0x19
 1921 004a 11       		.uleb128 0x11
 1922 004b 01       		.uleb128 0x1
 1923 004c 12       		.uleb128 0x12
 1924 004d 06       		.uleb128 0x6
 1925 004e 40       		.uleb128 0x40
 1926 004f 18       		.uleb128 0x18
 1927 0050 9642     		.uleb128 0x2116
 1928 0052 19       		.uleb128 0x19
 1929 0053 00       		.byte	0
 1930 0054 00       		.byte	0
 1931 0055 07       		.uleb128 0x7
 1932 0056 2E       		.uleb128 0x2e
 1933 0057 01       		.byte	0x1
 1934 0058 3F       		.uleb128 0x3f
 1935 0059 19       		.uleb128 0x19
 1936 005a 03       		.uleb128 0x3
 1937 005b 0E       		.uleb128 0xe
 1938 005c 3A       		.uleb128 0x3a
 1939 005d 0B       		.uleb128 0xb
 1940 005e 3B       		.uleb128 0x3b
 1941 005f 0B       		.uleb128 0xb
 1942 0060 27       		.uleb128 0x27
 1943 0061 19       		.uleb128 0x19
 1944 0062 11       		.uleb128 0x11
 1945 0063 01       		.uleb128 0x1
 1946 0064 12       		.uleb128 0x12
 1947 0065 06       		.uleb128 0x6
 1948 0066 40       		.uleb128 0x40
 1949 0067 18       		.uleb128 0x18
 1950 0068 9642     		.uleb128 0x2116
 1951 006a 19       		.uleb128 0x19
 1952 006b 01       		.uleb128 0x1
 1953 006c 13       		.uleb128 0x13
 1954 006d 00       		.byte	0
 1955 006e 00       		.byte	0
 1956 006f 08       		.uleb128 0x8
 1957 0070 34       		.uleb128 0x34
 1958 0071 00       		.byte	0
 1959 0072 03       		.uleb128 0x3
 1960 0073 0E       		.uleb128 0xe
 1961 0074 3A       		.uleb128 0x3a
 1962 0075 0B       		.uleb128 0xb
 1963 0076 3B       		.uleb128 0x3b
 1964 0077 0B       		.uleb128 0xb
 1965 0078 49       		.uleb128 0x49
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 51


 1966 0079 13       		.uleb128 0x13
 1967 007a 02       		.uleb128 0x2
 1968 007b 18       		.uleb128 0x18
 1969 007c 00       		.byte	0
 1970 007d 00       		.byte	0
 1971 007e 09       		.uleb128 0x9
 1972 007f 01       		.uleb128 0x1
 1973 0080 01       		.byte	0x1
 1974 0081 49       		.uleb128 0x49
 1975 0082 13       		.uleb128 0x13
 1976 0083 01       		.uleb128 0x1
 1977 0084 13       		.uleb128 0x13
 1978 0085 00       		.byte	0
 1979 0086 00       		.byte	0
 1980 0087 0A       		.uleb128 0xa
 1981 0088 21       		.uleb128 0x21
 1982 0089 00       		.byte	0
 1983 008a 49       		.uleb128 0x49
 1984 008b 13       		.uleb128 0x13
 1985 008c 2F       		.uleb128 0x2f
 1986 008d 0B       		.uleb128 0xb
 1987 008e 00       		.byte	0
 1988 008f 00       		.byte	0
 1989 0090 0B       		.uleb128 0xb
 1990 0091 26       		.uleb128 0x26
 1991 0092 00       		.byte	0
 1992 0093 49       		.uleb128 0x49
 1993 0094 13       		.uleb128 0x13
 1994 0095 00       		.byte	0
 1995 0096 00       		.byte	0
 1996 0097 0C       		.uleb128 0xc
 1997 0098 2E       		.uleb128 0x2e
 1998 0099 00       		.byte	0
 1999 009a 3F       		.uleb128 0x3f
 2000 009b 19       		.uleb128 0x19
 2001 009c 03       		.uleb128 0x3
 2002 009d 0E       		.uleb128 0xe
 2003 009e 3A       		.uleb128 0x3a
 2004 009f 0B       		.uleb128 0xb
 2005 00a0 3B       		.uleb128 0x3b
 2006 00a1 05       		.uleb128 0x5
 2007 00a2 27       		.uleb128 0x27
 2008 00a3 19       		.uleb128 0x19
 2009 00a4 11       		.uleb128 0x11
 2010 00a5 01       		.uleb128 0x1
 2011 00a6 12       		.uleb128 0x12
 2012 00a7 06       		.uleb128 0x6
 2013 00a8 40       		.uleb128 0x40
 2014 00a9 18       		.uleb128 0x18
 2015 00aa 9642     		.uleb128 0x2116
 2016 00ac 19       		.uleb128 0x19
 2017 00ad 00       		.byte	0
 2018 00ae 00       		.byte	0
 2019 00af 0D       		.uleb128 0xd
 2020 00b0 2E       		.uleb128 0x2e
 2021 00b1 00       		.byte	0
 2022 00b2 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 52


 2023 00b3 19       		.uleb128 0x19
 2024 00b4 03       		.uleb128 0x3
 2025 00b5 0E       		.uleb128 0xe
 2026 00b6 3A       		.uleb128 0x3a
 2027 00b7 0B       		.uleb128 0xb
 2028 00b8 3B       		.uleb128 0x3b
 2029 00b9 05       		.uleb128 0x5
 2030 00ba 27       		.uleb128 0x27
 2031 00bb 19       		.uleb128 0x19
 2032 00bc 11       		.uleb128 0x11
 2033 00bd 01       		.uleb128 0x1
 2034 00be 12       		.uleb128 0x12
 2035 00bf 06       		.uleb128 0x6
 2036 00c0 40       		.uleb128 0x40
 2037 00c1 18       		.uleb128 0x18
 2038 00c2 9742     		.uleb128 0x2117
 2039 00c4 19       		.uleb128 0x19
 2040 00c5 00       		.byte	0
 2041 00c6 00       		.byte	0
 2042 00c7 0E       		.uleb128 0xe
 2043 00c8 2E       		.uleb128 0x2e
 2044 00c9 01       		.byte	0x1
 2045 00ca 3F       		.uleb128 0x3f
 2046 00cb 19       		.uleb128 0x19
 2047 00cc 03       		.uleb128 0x3
 2048 00cd 0E       		.uleb128 0xe
 2049 00ce 3A       		.uleb128 0x3a
 2050 00cf 0B       		.uleb128 0xb
 2051 00d0 3B       		.uleb128 0x3b
 2052 00d1 05       		.uleb128 0x5
 2053 00d2 27       		.uleb128 0x27
 2054 00d3 19       		.uleb128 0x19
 2055 00d4 49       		.uleb128 0x49
 2056 00d5 13       		.uleb128 0x13
 2057 00d6 11       		.uleb128 0x11
 2058 00d7 01       		.uleb128 0x1
 2059 00d8 12       		.uleb128 0x12
 2060 00d9 06       		.uleb128 0x6
 2061 00da 40       		.uleb128 0x40
 2062 00db 18       		.uleb128 0x18
 2063 00dc 9742     		.uleb128 0x2117
 2064 00de 19       		.uleb128 0x19
 2065 00df 01       		.uleb128 0x1
 2066 00e0 13       		.uleb128 0x13
 2067 00e1 00       		.byte	0
 2068 00e2 00       		.byte	0
 2069 00e3 0F       		.uleb128 0xf
 2070 00e4 05       		.uleb128 0x5
 2071 00e5 00       		.byte	0
 2072 00e6 03       		.uleb128 0x3
 2073 00e7 0E       		.uleb128 0xe
 2074 00e8 3A       		.uleb128 0x3a
 2075 00e9 0B       		.uleb128 0xb
 2076 00ea 3B       		.uleb128 0x3b
 2077 00eb 05       		.uleb128 0x5
 2078 00ec 49       		.uleb128 0x49
 2079 00ed 13       		.uleb128 0x13
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 53


 2080 00ee 02       		.uleb128 0x2
 2081 00ef 18       		.uleb128 0x18
 2082 00f0 00       		.byte	0
 2083 00f1 00       		.byte	0
 2084 00f2 10       		.uleb128 0x10
 2085 00f3 34       		.uleb128 0x34
 2086 00f4 00       		.byte	0
 2087 00f5 03       		.uleb128 0x3
 2088 00f6 0E       		.uleb128 0xe
 2089 00f7 3A       		.uleb128 0x3a
 2090 00f8 0B       		.uleb128 0xb
 2091 00f9 3B       		.uleb128 0x3b
 2092 00fa 05       		.uleb128 0x5
 2093 00fb 49       		.uleb128 0x49
 2094 00fc 13       		.uleb128 0x13
 2095 00fd 02       		.uleb128 0x2
 2096 00fe 18       		.uleb128 0x18
 2097 00ff 00       		.byte	0
 2098 0100 00       		.byte	0
 2099 0101 11       		.uleb128 0x11
 2100 0102 2E       		.uleb128 0x2e
 2101 0103 01       		.byte	0x1
 2102 0104 3F       		.uleb128 0x3f
 2103 0105 19       		.uleb128 0x19
 2104 0106 03       		.uleb128 0x3
 2105 0107 0E       		.uleb128 0xe
 2106 0108 3A       		.uleb128 0x3a
 2107 0109 0B       		.uleb128 0xb
 2108 010a 3B       		.uleb128 0x3b
 2109 010b 05       		.uleb128 0x5
 2110 010c 27       		.uleb128 0x27
 2111 010d 19       		.uleb128 0x19
 2112 010e 49       		.uleb128 0x49
 2113 010f 13       		.uleb128 0x13
 2114 0110 11       		.uleb128 0x11
 2115 0111 01       		.uleb128 0x1
 2116 0112 12       		.uleb128 0x12
 2117 0113 06       		.uleb128 0x6
 2118 0114 40       		.uleb128 0x40
 2119 0115 18       		.uleb128 0x18
 2120 0116 9642     		.uleb128 0x2116
 2121 0118 19       		.uleb128 0x19
 2122 0119 01       		.uleb128 0x1
 2123 011a 13       		.uleb128 0x13
 2124 011b 00       		.byte	0
 2125 011c 00       		.byte	0
 2126 011d 12       		.uleb128 0x12
 2127 011e 2E       		.uleb128 0x2e
 2128 011f 01       		.byte	0x1
 2129 0120 3F       		.uleb128 0x3f
 2130 0121 19       		.uleb128 0x19
 2131 0122 03       		.uleb128 0x3
 2132 0123 0E       		.uleb128 0xe
 2133 0124 3A       		.uleb128 0x3a
 2134 0125 0B       		.uleb128 0xb
 2135 0126 3B       		.uleb128 0x3b
 2136 0127 05       		.uleb128 0x5
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 54


 2137 0128 27       		.uleb128 0x27
 2138 0129 19       		.uleb128 0x19
 2139 012a 11       		.uleb128 0x11
 2140 012b 01       		.uleb128 0x1
 2141 012c 12       		.uleb128 0x12
 2142 012d 06       		.uleb128 0x6
 2143 012e 40       		.uleb128 0x40
 2144 012f 18       		.uleb128 0x18
 2145 0130 9742     		.uleb128 0x2117
 2146 0132 19       		.uleb128 0x19
 2147 0133 01       		.uleb128 0x1
 2148 0134 13       		.uleb128 0x13
 2149 0135 00       		.byte	0
 2150 0136 00       		.byte	0
 2151 0137 13       		.uleb128 0x13
 2152 0138 2E       		.uleb128 0x2e
 2153 0139 01       		.byte	0x1
 2154 013a 3F       		.uleb128 0x3f
 2155 013b 19       		.uleb128 0x19
 2156 013c 03       		.uleb128 0x3
 2157 013d 0E       		.uleb128 0xe
 2158 013e 3A       		.uleb128 0x3a
 2159 013f 0B       		.uleb128 0xb
 2160 0140 3B       		.uleb128 0x3b
 2161 0141 05       		.uleb128 0x5
 2162 0142 27       		.uleb128 0x27
 2163 0143 19       		.uleb128 0x19
 2164 0144 11       		.uleb128 0x11
 2165 0145 01       		.uleb128 0x1
 2166 0146 12       		.uleb128 0x12
 2167 0147 06       		.uleb128 0x6
 2168 0148 40       		.uleb128 0x40
 2169 0149 18       		.uleb128 0x18
 2170 014a 9642     		.uleb128 0x2116
 2171 014c 19       		.uleb128 0x19
 2172 014d 01       		.uleb128 0x1
 2173 014e 13       		.uleb128 0x13
 2174 014f 00       		.byte	0
 2175 0150 00       		.byte	0
 2176 0151 14       		.uleb128 0x14
 2177 0152 34       		.uleb128 0x34
 2178 0153 00       		.byte	0
 2179 0154 03       		.uleb128 0x3
 2180 0155 0E       		.uleb128 0xe
 2181 0156 3A       		.uleb128 0x3a
 2182 0157 0B       		.uleb128 0xb
 2183 0158 3B       		.uleb128 0x3b
 2184 0159 0B       		.uleb128 0xb
 2185 015a 49       		.uleb128 0x49
 2186 015b 13       		.uleb128 0x13
 2187 015c 3F       		.uleb128 0x3f
 2188 015d 19       		.uleb128 0x19
 2189 015e 02       		.uleb128 0x2
 2190 015f 18       		.uleb128 0x18
 2191 0160 00       		.byte	0
 2192 0161 00       		.byte	0
 2193 0162 00       		.byte	0
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 55


 2194              		.section	.debug_aranges,"",%progbits
 2195 0000 A4000000 		.4byte	0xa4
 2196 0004 0200     		.2byte	0x2
 2197 0006 00000000 		.4byte	.Ldebug_info0
 2198 000a 04       		.byte	0x4
 2199 000b 00       		.byte	0
 2200 000c 0000     		.2byte	0
 2201 000e 0000     		.2byte	0
 2202 0010 00000000 		.4byte	.LFB2
 2203 0014 24000000 		.4byte	.LFE2-.LFB2
 2204 0018 00000000 		.4byte	.LFB3
 2205 001c 0C020000 		.4byte	.LFE3-.LFB3
 2206 0020 00000000 		.4byte	.LFB4
 2207 0024 38000000 		.4byte	.LFE4-.LFB4
 2208 0028 00000000 		.4byte	.LFB5
 2209 002c 18000000 		.4byte	.LFE5-.LFB5
 2210 0030 00000000 		.4byte	.LFB6
 2211 0034 1C000000 		.4byte	.LFE6-.LFB6
 2212 0038 00000000 		.4byte	.LFB7
 2213 003c 1C000000 		.4byte	.LFE7-.LFB7
 2214 0040 00000000 		.4byte	.LFB8
 2215 0044 48000000 		.4byte	.LFE8-.LFB8
 2216 0048 00000000 		.4byte	.LFB9
 2217 004c 44000000 		.4byte	.LFE9-.LFB9
 2218 0050 00000000 		.4byte	.LFB10
 2219 0054 1C000000 		.4byte	.LFE10-.LFB10
 2220 0058 00000000 		.4byte	.LFB11
 2221 005c 30000000 		.4byte	.LFE11-.LFB11
 2222 0060 00000000 		.4byte	.LFB12
 2223 0064 2C000000 		.4byte	.LFE12-.LFB12
 2224 0068 00000000 		.4byte	.LFB13
 2225 006c 1C000000 		.4byte	.LFE13-.LFB13
 2226 0070 00000000 		.4byte	.LFB14
 2227 0074 1C000000 		.4byte	.LFE14-.LFB14
 2228 0078 00000000 		.4byte	.LFB15
 2229 007c 30000000 		.4byte	.LFE15-.LFB15
 2230 0080 00000000 		.4byte	.LFB16
 2231 0084 2C000000 		.4byte	.LFE16-.LFB16
 2232 0088 00000000 		.4byte	.LFB17
 2233 008c A4000000 		.4byte	.LFE17-.LFB17
 2234 0090 00000000 		.4byte	.LFB18
 2235 0094 90000000 		.4byte	.LFE18-.LFB18
 2236 0098 00000000 		.4byte	.LFB19
 2237 009c 80000000 		.4byte	.LFE19-.LFB19
 2238 00a0 00000000 		.4byte	0
 2239 00a4 00000000 		.4byte	0
 2240              		.section	.debug_ranges,"",%progbits
 2241              	.Ldebug_ranges0:
 2242 0000 00000000 		.4byte	.LFB2
 2243 0004 24000000 		.4byte	.LFE2
 2244 0008 00000000 		.4byte	.LFB3
 2245 000c 0C020000 		.4byte	.LFE3
 2246 0010 00000000 		.4byte	.LFB4
 2247 0014 38000000 		.4byte	.LFE4
 2248 0018 00000000 		.4byte	.LFB5
 2249 001c 18000000 		.4byte	.LFE5
 2250 0020 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 56


 2251 0024 1C000000 		.4byte	.LFE6
 2252 0028 00000000 		.4byte	.LFB7
 2253 002c 1C000000 		.4byte	.LFE7
 2254 0030 00000000 		.4byte	.LFB8
 2255 0034 48000000 		.4byte	.LFE8
 2256 0038 00000000 		.4byte	.LFB9
 2257 003c 44000000 		.4byte	.LFE9
 2258 0040 00000000 		.4byte	.LFB10
 2259 0044 1C000000 		.4byte	.LFE10
 2260 0048 00000000 		.4byte	.LFB11
 2261 004c 30000000 		.4byte	.LFE11
 2262 0050 00000000 		.4byte	.LFB12
 2263 0054 2C000000 		.4byte	.LFE12
 2264 0058 00000000 		.4byte	.LFB13
 2265 005c 1C000000 		.4byte	.LFE13
 2266 0060 00000000 		.4byte	.LFB14
 2267 0064 1C000000 		.4byte	.LFE14
 2268 0068 00000000 		.4byte	.LFB15
 2269 006c 30000000 		.4byte	.LFE15
 2270 0070 00000000 		.4byte	.LFB16
 2271 0074 2C000000 		.4byte	.LFE16
 2272 0078 00000000 		.4byte	.LFB17
 2273 007c A4000000 		.4byte	.LFE17
 2274 0080 00000000 		.4byte	.LFB18
 2275 0084 90000000 		.4byte	.LFE18
 2276 0088 00000000 		.4byte	.LFB19
 2277 008c 80000000 		.4byte	.LFE19
 2278 0090 00000000 		.4byte	0
 2279 0094 00000000 		.4byte	0
 2280              		.section	.debug_line,"",%progbits
 2281              	.Ldebug_line0:
 2282 0000 A0020000 		.section	.debug_str,"MS",%progbits,1
 2282      02004200 
 2282      00000201 
 2282      FB0E0D00 
 2282      01010101 
 2283              	.LASF10:
 2284 0000 75696E74 		.ascii	"uint16\000"
 2284      313600
 2285              	.LASF48:
 2286 0007 61646347 		.ascii	"adcGain\000"
 2286      61696E00 
 2287              	.LASF23:
 2288 000f 636F756E 		.ascii	"counts\000"
 2288      747300
 2289              	.LASF54:
 2290 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2290      436F756E 
 2290      7473546F 
 2290      5F566F6C 
 2290      747300
 2291              	.LASF36:
 2292 0029 4144435F 		.ascii	"ADC_Init\000"
 2292      496E6974 
 2292      00
 2293              	.LASF7:
 2294 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 57


 2294      206C6F6E 
 2294      6720756E 
 2294      7369676E 
 2294      65642069 
 2295              	.LASF24:
 2296 0049 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2296      496E7075 
 2296      7473506C 
 2296      6163656D 
 2296      656E7400 
 2297              	.LASF28:
 2298 005d 4144435F 		.ascii	"ADC_StartConvert\000"
 2298      53746172 
 2298      74436F6E 
 2298      76657274 
 2298      00
 2299              	.LASF6:
 2300 006e 6C6F6E67 		.ascii	"long long int\000"
 2300      206C6F6E 
 2300      6720696E 
 2300      7400
 2301              	.LASF0:
 2302 007c 7369676E 		.ascii	"signed char\000"
 2302      65642063 
 2302      68617200 
 2303              	.LASF30:
 2304 0088 73746174 		.ascii	"status\000"
 2304      757300
 2305              	.LASF13:
 2306 008f 696E7433 		.ascii	"int32\000"
 2306      3200
 2307              	.LASF25:
 2308 0095 4144435F 		.ascii	"ADC_Start\000"
 2308      53746172 
 2308      7400
 2309              	.LASF4:
 2310 009f 6C6F6E67 		.ascii	"long int\000"
 2310      20696E74 
 2310      00
 2311              	.LASF52:
 2312 00a8 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2312      436F756E 
 2312      7473546F 
 2312      5F75566F 
 2312      6C747300 
 2313              	.LASF59:
 2314 00bc 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2314      636F756E 
 2314      74735065 
 2314      72313056 
 2314      6F6C7400 
 2315              	.LASF9:
 2316 00d0 75696E74 		.ascii	"uint8\000"
 2316      3800
 2317              	.LASF16:
 2318 00d6 646F7562 		.ascii	"double\000"
 2318      6C6500
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 58


 2319              	.LASF11:
 2320 00dd 75696E74 		.ascii	"uint32\000"
 2320      333200
 2321              	.LASF38:
 2322 00e4 6D61736B 		.ascii	"mask\000"
 2322      00
 2323              	.LASF57:
 2324 00e9 4144435F 		.ascii	"ADC_initVar\000"
 2324      696E6974 
 2324      56617200 
 2325              	.LASF62:
 2326 00f5 433A5C55 		.ascii	"C:\\Users\\Signe\\Documents\\GitHub\\ST4\\PSoC\\ny\\"
 2326      73657273 
 2326      5C536967 
 2326      6E655C44 
 2326      6F63756D 
 2327 0121 4144435F 		.ascii	"ADC_filtre_samlet_grader.cydsn\000"
 2327      66696C74 
 2327      72655F73 
 2327      616D6C65 
 2327      745F6772 
 2328              	.LASF33:
 2329 0140 7265744D 		.ascii	"retMode\000"
 2329      6F646500 
 2330              	.LASF43:
 2331 0148 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2331      5365744C 
 2331      696D6974 
 2331      4D61736B 
 2331      00
 2332              	.LASF8:
 2333 0159 756E7369 		.ascii	"unsigned int\000"
 2333      676E6564 
 2333      20696E74 
 2333      00
 2334              	.LASF53:
 2335 0166 75566F6C 		.ascii	"uVolts\000"
 2335      747300
 2336              	.LASF5:
 2337 016d 6C6F6E67 		.ascii	"long unsigned int\000"
 2337      20756E73 
 2337      69676E65 
 2337      6420696E 
 2337      7400
 2338              	.LASF44:
 2339 017f 4144435F 		.ascii	"ADC_SetSatMask\000"
 2339      53657453 
 2339      61744D61 
 2339      736B00
 2340              	.LASF55:
 2341 018e 766F6C74 		.ascii	"volts\000"
 2341      7300
 2342              	.LASF22:
 2343 0194 746D7052 		.ascii	"tmpRegVal\000"
 2343      65675661 
 2343      6C00
 2344              	.LASF3:
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 59


 2345 019e 73686F72 		.ascii	"short unsigned int\000"
 2345      7420756E 
 2345      7369676E 
 2345      65642069 
 2345      6E7400
 2346              	.LASF29:
 2347 01b1 4144435F 		.ascii	"ADC_StopConvert\000"
 2347      53746F70 
 2347      436F6E76 
 2347      65727400 
 2348              	.LASF51:
 2349 01c1 6D566F6C 		.ascii	"mVolts\000"
 2349      747300
 2350              	.LASF19:
 2351 01c8 72656733 		.ascii	"reg32\000"
 2351      3200
 2352              	.LASF14:
 2353 01ce 666C6F61 		.ascii	"float32\000"
 2353      74333200 
 2354              	.LASF20:
 2355 01d6 73697A65 		.ascii	"sizetype\000"
 2355      74797065 
 2355      00
 2356              	.LASF40:
 2357 01df 6C6F774C 		.ascii	"lowLimit\000"
 2357      696D6974 
 2357      00
 2358              	.LASF41:
 2359 01e8 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2359      53657448 
 2359      6967684C 
 2359      696D6974 
 2359      00
 2360              	.LASF31:
 2361 01f9 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2361      4973456E 
 2361      64436F6E 
 2361      76657273 
 2361      696F6E00 
 2362              	.LASF17:
 2363 020d 696E7436 		.ascii	"int64\000"
 2363      3400
 2364              	.LASF37:
 2365 0213 4144435F 		.ascii	"ADC_SetChanMask\000"
 2365      53657443 
 2365      68616E4D 
 2365      61736B00 
 2366              	.LASF47:
 2367 0223 4144435F 		.ascii	"ADC_SetGain\000"
 2367      53657447 
 2367      61696E00 
 2368              	.LASF15:
 2369 022f 666C6F61 		.ascii	"float\000"
 2369      7400
 2370              	.LASF42:
 2371 0235 68696768 		.ascii	"highLimit\000"
 2371      4C696D69 
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 60


 2371      7400
 2372              	.LASF49:
 2373 023f 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2373      436F756E 
 2373      7473546F 
 2373      5F6D566F 
 2373      6C747300 
 2374              	.LASF39:
 2375 0253 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2375      5365744C 
 2375      6F774C69 
 2375      6D697400 
 2376              	.LASF61:
 2377 0263 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2377      6E657261 
 2377      7465645F 
 2377      536F7572 
 2377      63655C50 
 2378              	.LASF1:
 2379 0282 756E7369 		.ascii	"unsigned char\000"
 2379      676E6564 
 2379      20636861 
 2379      7200
 2380              	.LASF58:
 2381 0290 4144435F 		.ascii	"ADC_offset\000"
 2381      6F666673 
 2381      657400
 2382              	.LASF2:
 2383 029b 73686F72 		.ascii	"short int\000"
 2383      7420696E 
 2383      7400
 2384              	.LASF27:
 2385 02a5 4144435F 		.ascii	"ADC_Stop\000"
 2385      53746F70 
 2385      00
 2386              	.LASF21:
 2387 02ae 63684E75 		.ascii	"chNum\000"
 2387      6D00
 2388              	.LASF34:
 2389 02b4 6368616E 		.ascii	"chan\000"
 2389      00
 2390              	.LASF18:
 2391 02b9 63686172 		.ascii	"char\000"
 2391      00
 2392              	.LASF56:
 2393 02be 4144435F 		.ascii	"ADC_channelsConfig\000"
 2393      6368616E 
 2393      6E656C73 
 2393      436F6E66 
 2393      696700
 2394              	.LASF46:
 2395 02d1 6F666673 		.ascii	"offset\000"
 2395      657400
 2396              	.LASF50:
 2397 02d8 61646343 		.ascii	"adcCounts\000"
 2397      6F756E74 
 2397      7300
ARM GAS  C:\Users\Signe\AppData\Local\Temp\cc5lfnmt.s 			page 61


 2398              	.LASF26:
 2399 02e2 4144435F 		.ascii	"ADC_Enable\000"
 2399      456E6162 
 2399      6C6500
 2400              	.LASF12:
 2401 02ed 696E7431 		.ascii	"int16\000"
 2401      3600
 2402              	.LASF45:
 2403 02f3 4144435F 		.ascii	"ADC_SetOffset\000"
 2403      5365744F 
 2403      66667365 
 2403      7400
 2404              	.LASF60:
 2405 0301 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2405      4320342E 
 2405      392E3320 
 2405      32303135 
 2405      30333033 
 2406 0334 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2406      20726576 
 2406      6973696F 
 2406      6E203232 
 2406      31323230 
 2407 0367 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2407      66756E63 
 2407      74696F6E 
 2407      2D736563 
 2407      74696F6E 
 2408              	.LASF35:
 2409 038f 72657375 		.ascii	"result\000"
 2409      6C7400
 2410              	.LASF32:
 2411 0396 4144435F 		.ascii	"ADC_GetResult16\000"
 2411      47657452 
 2411      6573756C 
 2411      74313600 
 2412              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
