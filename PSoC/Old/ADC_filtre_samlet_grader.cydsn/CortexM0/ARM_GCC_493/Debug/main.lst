ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	x_mavg
  18              		.bss
  19              		.align	3
  20              		.type	x_mavg, %object
  21              		.size	x_mavg, 80
  22              	x_mavg:
  23 0000 00000000 		.space	80
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	y_mavg
  25              		.align	3
  26              		.type	y_mavg, %object
  27              		.size	y_mavg, 8
  28              	y_mavg:
  29 0050 00000000 		.space	8
  29      00000000 
  30              		.global	b_mavg
  31              		.data
  32              		.align	3
  33              		.type	b_mavg, %object
  34              		.size	b_mavg, 80
  35              	b_mavg:
  36 0000 9A999999 		.word	-1717986918
  37 0004 9999B93F 		.word	1069128089
  38 0008 9A999999 		.word	-1717986918
  39 000c 9999B93F 		.word	1069128089
  40 0010 9A999999 		.word	-1717986918
  41 0014 9999B93F 		.word	1069128089
  42 0018 9A999999 		.word	-1717986918
  43 001c 9999B93F 		.word	1069128089
  44 0020 9A999999 		.word	-1717986918
  45 0024 9999B93F 		.word	1069128089
  46 0028 9A999999 		.word	-1717986918
  47 002c 9999B93F 		.word	1069128089
  48 0030 9A999999 		.word	-1717986918
  49 0034 9999B93F 		.word	1069128089
  50 0038 9A999999 		.word	-1717986918
  51 003c 9999B93F 		.word	1069128089
  52 0040 9A999999 		.word	-1717986918
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 2


  53 0044 9999B93F 		.word	1069128089
  54 0048 9A999999 		.word	-1717986918
  55 004c 9999B93F 		.word	1069128089
  56              		.global	x2_mavg
  57              		.bss
  58              		.align	3
  59              		.type	x2_mavg, %object
  60              		.size	x2_mavg, 80
  61              	x2_mavg:
  62 0058 00000000 		.space	80
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              		.global	y2_mavg
  64              		.align	3
  65              		.type	y2_mavg, %object
  66              		.size	y2_mavg, 8
  67              	y2_mavg:
  68 00a8 00000000 		.space	8
  68      00000000 
  69              		.global	b2_mavg
  70              		.data
  71              		.align	3
  72              		.type	b2_mavg, %object
  73              		.size	b2_mavg, 80
  74              	b2_mavg:
  75 0050 9A999999 		.word	-1717986918
  76 0054 9999B93F 		.word	1069128089
  77 0058 9A999999 		.word	-1717986918
  78 005c 9999B93F 		.word	1069128089
  79 0060 9A999999 		.word	-1717986918
  80 0064 9999B93F 		.word	1069128089
  81 0068 9A999999 		.word	-1717986918
  82 006c 9999B93F 		.word	1069128089
  83 0070 9A999999 		.word	-1717986918
  84 0074 9999B93F 		.word	1069128089
  85 0078 9A999999 		.word	-1717986918
  86 007c 9999B93F 		.word	1069128089
  87 0080 9A999999 		.word	-1717986918
  88 0084 9999B93F 		.word	1069128089
  89 0088 9A999999 		.word	-1717986918
  90 008c 9999B93F 		.word	1069128089
  91 0090 9A999999 		.word	-1717986918
  92 0094 9999B93F 		.word	1069128089
  93 0098 9A999999 		.word	-1717986918
  94 009c 9999B93F 		.word	1069128089
  95              		.global	x_low
  96              		.bss
  97              		.align	3
  98              		.type	x_low, %object
  99              		.size	x_low, 24
 100              	x_low:
 101 00b0 00000000 		.space	24
 101      00000000 
 101      00000000 
 101      00000000 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 3


 101      00000000 
 102              		.global	y_low
 103              		.align	3
 104              		.type	y_low, %object
 105              		.size	y_low, 24
 106              	y_low:
 107 00c8 00000000 		.space	24
 107      00000000 
 107      00000000 
 107      00000000 
 107      00000000 
 108              		.global	b_low
 109              		.data
 110              		.align	3
 111              		.type	b_low, %object
 112              		.size	b_low, 24
 113              	b_low:
 114 00a0 FA7E6ABC 		.word	-1133871366
 115 00a4 7493583F 		.word	1062769524
 116 00a8 E09C11A5 		.word	-1525572384
 117 00ac BDC1673F 		.word	1063764413
 118 00b0 FA7E6ABC 		.word	-1133871366
 119 00b4 7493583F 		.word	1062769524
 120              		.global	a_low
 121              		.align	3
 122              		.type	a_low, %object
 123              		.size	a_low, 24
 124              	a_low:
 125 00b8 00000000 		.word	0
 126 00bc 0000F03F 		.word	1072693248
 127 00c0 D34D6210 		.word	274877907
 128 00c4 5839FEBF 		.word	-1073858216
 129 00c8 C2172653 		.word	1395005378
 130 00cc 05A3EC3F 		.word	1072472837
 131              		.comm	value_in,2,2
 132              		.global	value_out
 133              		.bss
 134              		.align	2
 135              		.type	value_out, %object
 136              		.size	value_out, 4
 137              	value_out:
 138 00e0 00000000 		.space	4
 139              		.global	i
 140              		.align	1
 141              		.type	i, %object
 142              		.size	i, 2
 143              	i:
 144 00e4 0000     		.space	2
 145              		.global	j
 146              		.align	1
 147              		.type	j, %object
 148              		.size	j, 2
 149              	j:
 150 00e6 0000     		.space	2
 151              		.global	k
 152              		.align	1
 153              		.type	k, %object
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 4


 154              		.size	k, 2
 155              	k:
 156 00e8 0000     		.space	2
 157              		.comm	grader_groen,2,2
 158              		.comm	grader_roed,2,2
 159              		.comm	diff,2,2
 160              		.comm	old,2,2
 161              		.global	counter
 162              		.align	1
 163              		.type	counter, %object
 164              		.size	counter, 2
 165              	counter:
 166 00ea 0000     		.space	2
 167              		.global	FirstCall
 168              		.data
 169              		.type	FirstCall, %object
 170              		.size	FirstCall, 1
 171              	FirstCall:
 172 00d0 01       		.byte	1
 173              		.global	accroed
 174 00d1 00000000 		.bss
 174      000000
 175              		.align	1
 176              		.type	accroed, %object
 177              		.size	accroed, 2
 178              	accroed:
 179 00ec 0000     		.space	2
 180              		.global	accgroen
 181              		.align	1
 182              		.type	accgroen, %object
 183              		.size	accgroen, 2
 184              	accgroen:
 185 00ee 0000     		.space	2
 186              		.global	EMG
 187              		.align	1
 188              		.type	EMG, %object
 189              		.size	EMG, 2
 190              	EMG:
 191 00f0 0000     		.space	2
 192              		.global	result
 193 00f2 0000     		.align	2
 194              		.type	result, %object
 195              		.size	result, 6
 196              	result:
 197 00f4 00000000 		.space	6
 197      0000
 198              		.global	data_ready
 199              		.type	data_ready, %object
 200              		.size	data_ready, 1
 201              	data_ready:
 202 00fa 00       		.space	1
 203              		.comm	mav_data_roed,2,2
 204              		.comm	mav_data_groen,2,2
 205              		.comm	samlet_grader,2,2
 206              		.comm	low_pass_data,2,2
 207              		.comm	diff_data,2,2
 208              		.global	__aeabi_dcmpgt
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 5


 209              		.global	__aeabi_dadd
 210              		.global	__aeabi_d2iz
 211              		.global	__aeabi_dsub
 212 00fb 00000000 		.section	.text.floor_and_convert,"ax",%progbits
 212      00
 213              		.align	2
 214              		.global	floor_and_convert
 215              		.code	16
 216              		.thumb_func
 217              		.type	floor_and_convert, %function
 218              	floor_and_convert:
 219              	.LFB37:
 220              		.file 1 ".\\main.c"
   1:.\main.c      **** #include <project.h>
   2:.\main.c      **** #include <my_defines.h>
   3:.\main.c      **** #include <stdlib.h>
   4:.\main.c      **** 
   5:.\main.c      **** #define FALSE 0
   6:.\main.c      **** #define TRUE 1
   7:.\main.c      **** #define LED_ON 0u
   8:.\main.c      **** #define LED_OFF 1u
   9:.\main.c      **** 
  10:.\main.c      **** /* Moving average filter */ 
  11:.\main.c      **** #define FILTER_LENGTH_mavg 9
  12:.\main.c      **** //int y[2] = {0,0};
  13:.\main.c      **** double x_mavg[FILTER_LENGTH_mavg+1] = {0,0,0,0,0,0,0,0,0,0};
  14:.\main.c      **** double y_mavg = 0;
  15:.\main.c      **** double b_mavg[FILTER_LENGTH_mavg+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  16:.\main.c      **** 
  17:.\main.c      **** /* Moving average filter 2 */
  18:.\main.c      **** #define FILTER_LENGTH_mavg2 9
  19:.\main.c      **** //int y2[2] = {0,0};
  20:.\main.c      **** double x2_mavg[FILTER_LENGTH_mavg2+1] = {0,0,0,0,0,0,0,0,0,0};
  21:.\main.c      **** double y2_mavg = 0;
  22:.\main.c      **** double b2_mavg[FILTER_LENGTH_mavg2+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  23:.\main.c      **** 
  24:.\main.c      **** 
  25:.\main.c      **** #define FILTER_LENGTH_low 2
  26:.\main.c      **** double x_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  27:.\main.c      **** double y_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  28:.\main.c      **** double b_low[FILTER_LENGTH_low+1] = {0.0015, 0.0029, 0.0015};
  29:.\main.c      **** double a_low[FILTER_LENGTH_low+1] = {1.0000, -1.8890, 0.8949};
  30:.\main.c      **** 
  31:.\main.c      **** int16 value_in,value_out[2]={0,0},i=0,j=0,k=0, grader_groen, grader_roed, diff, old, counter=0; 
  32:.\main.c      **** char FirstCall = TRUE;
  33:.\main.c      **** 
  34:.\main.c      **** int16 accroed = {0};
  35:.\main.c      **** int16 accgroen = {0};
  36:.\main.c      **** int16 EMG = {0};
  37:.\main.c      **** int16 result[num_of_channels] = {0};
  38:.\main.c      **** uint8 data_ready = FALSE;
  39:.\main.c      **** 
  40:.\main.c      **** int16 mav_data_roed;
  41:.\main.c      **** int16 mav_data_groen;
  42:.\main.c      **** int16 samlet_grader;
  43:.\main.c      **** int16 low_pass_data;
  44:.\main.c      **** int16 diff_data;
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 6


  45:.\main.c      **** 
  46:.\main.c      **** #define StartMeasuring Control_Reg_1_Write(1);
  47:.\main.c      **** #define StopMeasuring Control_Reg_1_Write(0);
  48:.\main.c      **** 
  49:.\main.c      **** /***********************************Konvertering til heltal***********************************/
  50:.\main.c      **** signed int floor_and_convert(double y)
  51:.\main.c      **** {
 221              		.loc 1 51 0
 222              		.cfi_startproc
 223 0000 90B5     		push	{r4, r7, lr}
 224              		.cfi_def_cfa_offset 12
 225              		.cfi_offset 4, -12
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 83B0     		sub	sp, sp, #12
 229              		.cfi_def_cfa_offset 24
 230 0004 00AF     		add	r7, sp, #0
 231              		.cfi_def_cfa_register 7
 232 0006 3860     		str	r0, [r7]
 233 0008 7960     		str	r1, [r7, #4]
  52:.\main.c      ****    if (y > 0)
 234              		.loc 1 52 0
 235 000a 3868     		ldr	r0, [r7]
 236 000c 7968     		ldr	r1, [r7, #4]
 237 000e 0022     		mov	r2, #0
 238 0010 0023     		mov	r3, #0
 239 0012 FFF7FEFF 		bl	__aeabi_dcmpgt
 240 0016 031E     		sub	r3, r0, #0
 241 0018 0DD0     		beq	.L6
  53:.\main.c      ****       return (signed int) (y+0.5);
 242              		.loc 1 53 0
 243 001a 3868     		ldr	r0, [r7]
 244 001c 7968     		ldr	r1, [r7, #4]
 245 001e 0022     		mov	r2, #0
 246 0020 0D4B     		ldr	r3, .L7
 247 0022 FFF7FEFF 		bl	__aeabi_dadd
 248 0026 031C     		mov	r3, r0
 249 0028 0C1C     		mov	r4, r1
 250 002a 181C     		mov	r0, r3
 251 002c 211C     		mov	r1, r4
 252 002e FFF7FEFF 		bl	__aeabi_d2iz
 253 0032 031C     		mov	r3, r0
 254 0034 0CE0     		b	.L4
 255              	.L6:
  54:.\main.c      ****    else
  55:.\main.c      ****       return (signed int) (y-0.5);
 256              		.loc 1 55 0
 257 0036 3868     		ldr	r0, [r7]
 258 0038 7968     		ldr	r1, [r7, #4]
 259 003a 0022     		mov	r2, #0
 260 003c 064B     		ldr	r3, .L7
 261 003e FFF7FEFF 		bl	__aeabi_dsub
 262 0042 031C     		mov	r3, r0
 263 0044 0C1C     		mov	r4, r1
 264 0046 181C     		mov	r0, r3
 265 0048 211C     		mov	r1, r4
 266 004a FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 7


 267 004e 031C     		mov	r3, r0
 268              	.L4:
  56:.\main.c      **** }
 269              		.loc 1 56 0
 270 0050 181C     		mov	r0, r3
 271 0052 BD46     		mov	sp, r7
 272 0054 03B0     		add	sp, sp, #12
 273              		@ sp needed
 274 0056 90BD     		pop	{r4, r7, pc}
 275              	.L8:
 276              		.align	2
 277              	.L7:
 278 0058 0000E03F 		.word	1071644672
 279              		.cfi_endproc
 280              	.LFE37:
 281              		.size	floor_and_convert, .-floor_and_convert
 282              		.global	__aeabi_i2d
 283              		.global	__aeabi_dmul
 284              		.section	.text.mavg_filter,"ax",%progbits
 285              		.align	2
 286              		.global	mavg_filter
 287              		.code	16
 288              		.thumb_func
 289              		.type	mavg_filter, %function
 290              	mavg_filter:
 291              	.LFB38:
  57:.\main.c      **** 
  58:.\main.c      **** /***********************************Moving average filter***********************************/
  59:.\main.c      **** signed int mavg_filter(signed int data)
  60:.\main.c      **** {
 292              		.loc 1 60 0
 293              		.cfi_startproc
 294 0000 90B5     		push	{r4, r7, lr}
 295              		.cfi_def_cfa_offset 12
 296              		.cfi_offset 4, -12
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 83B0     		sub	sp, sp, #12
 300              		.cfi_def_cfa_offset 24
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
  61:.\main.c      ****    x_mavg[0] =  (double) data;      // Read received sample and perform type casts
 304              		.loc 1 61 0
 305 0008 7868     		ldr	r0, [r7, #4]
 306 000a FFF7FEFF 		bl	__aeabi_i2d
 307 000e 031C     		mov	r3, r0
 308 0010 0C1C     		mov	r4, r1
 309 0012 384A     		ldr	r2, .L15
 310 0014 1360     		str	r3, [r2]
 311 0016 5460     		str	r4, [r2, #4]
  62:.\main.c      ****    
  63:.\main.c      ****    y_mavg = 0;
 312              		.loc 1 63 0
 313 0018 374A     		ldr	r2, .L15+4
 314 001a 0023     		mov	r3, #0
 315 001c 0024     		mov	r4, #0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 8


 316 001e 1360     		str	r3, [r2]
 317 0020 5460     		str	r4, [r2, #4]
  64:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 318              		.loc 1 64 0
 319 0022 364B     		ldr	r3, .L15+8
 320 0024 0022     		mov	r2, #0
 321 0026 1A80     		strh	r2, [r3]
 322 0028 30E0     		b	.L10
 323              	.L11:
  65:.\main.c      ****    {
  66:.\main.c      ****       y_mavg += b_mavg[i]*x_mavg[i];
 324              		.loc 1 66 0 discriminator 3
 325 002a 344B     		ldr	r3, .L15+8
 326 002c 1B88     		ldrh	r3, [r3]
 327 002e 1BB2     		sxth	r3, r3
 328 0030 334A     		ldr	r2, .L15+12
 329 0032 DB00     		lsl	r3, r3, #3
 330 0034 D318     		add	r3, r2, r3
 331 0036 1968     		ldr	r1, [r3]
 332 0038 5A68     		ldr	r2, [r3, #4]
 333 003a 304B     		ldr	r3, .L15+8
 334 003c 1B88     		ldrh	r3, [r3]
 335 003e 1BB2     		sxth	r3, r3
 336 0040 2C48     		ldr	r0, .L15
 337 0042 DB00     		lsl	r3, r3, #3
 338 0044 C318     		add	r3, r0, r3
 339 0046 5C68     		ldr	r4, [r3, #4]
 340 0048 1B68     		ldr	r3, [r3]
 341 004a 081C     		mov	r0, r1
 342 004c 111C     		mov	r1, r2
 343 004e 1A1C     		mov	r2, r3
 344 0050 231C     		mov	r3, r4
 345 0052 FFF7FEFF 		bl	__aeabi_dmul
 346 0056 031C     		mov	r3, r0
 347 0058 0C1C     		mov	r4, r1
 348 005a 191C     		mov	r1, r3
 349 005c 221C     		mov	r2, r4
 350 005e 264B     		ldr	r3, .L15+4
 351 0060 5C68     		ldr	r4, [r3, #4]
 352 0062 1B68     		ldr	r3, [r3]
 353 0064 081C     		mov	r0, r1
 354 0066 111C     		mov	r1, r2
 355 0068 1A1C     		mov	r2, r3
 356 006a 231C     		mov	r3, r4
 357 006c FFF7FEFF 		bl	__aeabi_dadd
 358 0070 031C     		mov	r3, r0
 359 0072 0C1C     		mov	r4, r1
 360 0074 204A     		ldr	r2, .L15+4
 361 0076 1360     		str	r3, [r2]
 362 0078 5460     		str	r4, [r2, #4]
  64:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 363              		.loc 1 64 0 discriminator 3
 364 007a 204B     		ldr	r3, .L15+8
 365 007c 1B88     		ldrh	r3, [r3]
 366 007e 9BB2     		uxth	r3, r3
 367 0080 9BB2     		uxth	r3, r3
 368 0082 0133     		add	r3, r3, #1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 9


 369 0084 9BB2     		uxth	r3, r3
 370 0086 9AB2     		uxth	r2, r3
 371 0088 1C4B     		ldr	r3, .L15+8
 372 008a 1A80     		strh	r2, [r3]
 373              	.L10:
  64:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 374              		.loc 1 64 0 is_stmt 0 discriminator 1
 375 008c 1B4B     		ldr	r3, .L15+8
 376 008e 1B88     		ldrh	r3, [r3]
 377 0090 1BB2     		sxth	r3, r3
 378 0092 092B     		cmp	r3, #9
 379 0094 C9DD     		ble	.L11
  67:.\main.c      ****    } 
  68:.\main.c      ****    
  69:.\main.c      ****    for(i = FILTER_LENGTH_mavg-1;i >= 0;i--)         // Roll x array in order to hold old sample inp
 380              		.loc 1 69 0 is_stmt 1
 381 0096 194B     		ldr	r3, .L15+8
 382 0098 0822     		mov	r2, #8
 383 009a 1A80     		strh	r2, [r3]
 384 009c 19E0     		b	.L12
 385              	.L13:
  70:.\main.c      ****    {
  71:.\main.c      ****       x_mavg[i+1] = x_mavg[i];
 386              		.loc 1 71 0 discriminator 3
 387 009e 174B     		ldr	r3, .L15+8
 388 00a0 1B88     		ldrh	r3, [r3]
 389 00a2 1BB2     		sxth	r3, r3
 390 00a4 5A1C     		add	r2, r3, #1
 391 00a6 154B     		ldr	r3, .L15+8
 392 00a8 1B88     		ldrh	r3, [r3]
 393 00aa 1BB2     		sxth	r3, r3
 394 00ac 1149     		ldr	r1, .L15
 395 00ae DB00     		lsl	r3, r3, #3
 396 00b0 CB18     		add	r3, r1, r3
 397 00b2 5C68     		ldr	r4, [r3, #4]
 398 00b4 1B68     		ldr	r3, [r3]
 399 00b6 0F49     		ldr	r1, .L15
 400 00b8 D200     		lsl	r2, r2, #3
 401 00ba 8A18     		add	r2, r1, r2
 402 00bc 1360     		str	r3, [r2]
 403 00be 5460     		str	r4, [r2, #4]
  69:.\main.c      ****    {
 404              		.loc 1 69 0 discriminator 3
 405 00c0 0E4B     		ldr	r3, .L15+8
 406 00c2 1B88     		ldrh	r3, [r3]
 407 00c4 9BB2     		uxth	r3, r3
 408 00c6 9BB2     		uxth	r3, r3
 409 00c8 013B     		sub	r3, r3, #1
 410 00ca 9BB2     		uxth	r3, r3
 411 00cc 9AB2     		uxth	r2, r3
 412 00ce 0B4B     		ldr	r3, .L15+8
 413 00d0 1A80     		strh	r2, [r3]
 414              	.L12:
  69:.\main.c      ****    {
 415              		.loc 1 69 0 is_stmt 0 discriminator 1
 416 00d2 0A4B     		ldr	r3, .L15+8
 417 00d4 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 10


 418 00d6 1BB2     		sxth	r3, r3
 419 00d8 002B     		cmp	r3, #0
 420 00da E0DA     		bge	.L13
  72:.\main.c      ****    }
  73:.\main.c      ****   
  74:.\main.c      ****    return (signed int) y_mavg;
 421              		.loc 1 74 0 is_stmt 1
 422 00dc 064B     		ldr	r3, .L15+4
 423 00de 5C68     		ldr	r4, [r3, #4]
 424 00e0 1B68     		ldr	r3, [r3]
 425 00e2 181C     		mov	r0, r3
 426 00e4 211C     		mov	r1, r4
 427 00e6 FFF7FEFF 		bl	__aeabi_d2iz
 428 00ea 031C     		mov	r3, r0
  75:.\main.c      **** }
 429              		.loc 1 75 0
 430 00ec 181C     		mov	r0, r3
 431 00ee BD46     		mov	sp, r7
 432 00f0 03B0     		add	sp, sp, #12
 433              		@ sp needed
 434 00f2 90BD     		pop	{r4, r7, pc}
 435              	.L16:
 436              		.align	2
 437              	.L15:
 438 00f4 00000000 		.word	x_mavg
 439 00f8 00000000 		.word	y_mavg
 440 00fc 00000000 		.word	i
 441 0100 00000000 		.word	b_mavg
 442              		.cfi_endproc
 443              	.LFE38:
 444              		.size	mavg_filter, .-mavg_filter
 445              		.section	.text.mavg_filter2,"ax",%progbits
 446              		.align	2
 447              		.global	mavg_filter2
 448              		.code	16
 449              		.thumb_func
 450              		.type	mavg_filter2, %function
 451              	mavg_filter2:
 452              	.LFB39:
  76:.\main.c      **** 
  77:.\main.c      **** 
  78:.\main.c      **** /***********************************Moving average filter 2***********************************/
  79:.\main.c      **** signed int mavg_filter2(signed int data)
  80:.\main.c      **** {
 453              		.loc 1 80 0
 454              		.cfi_startproc
 455 0000 90B5     		push	{r4, r7, lr}
 456              		.cfi_def_cfa_offset 12
 457              		.cfi_offset 4, -12
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 83B0     		sub	sp, sp, #12
 461              		.cfi_def_cfa_offset 24
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
  81:.\main.c      ****    x2_mavg[0] =  (int16) data;                     // Read received sample and perform type casts
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 11


 465              		.loc 1 81 0
 466 0008 7B68     		ldr	r3, [r7, #4]
 467 000a 9BB2     		uxth	r3, r3
 468 000c 1BB2     		sxth	r3, r3
 469 000e 181C     		mov	r0, r3
 470 0010 FFF7FEFF 		bl	__aeabi_i2d
 471 0014 031C     		mov	r3, r0
 472 0016 0C1C     		mov	r4, r1
 473 0018 384A     		ldr	r2, .L23
 474 001a 1360     		str	r3, [r2]
 475 001c 5460     		str	r4, [r2, #4]
  82:.\main.c      ****     
  83:.\main.c      ****    y2_mavg = 0;                                     // 
 476              		.loc 1 83 0
 477 001e 384A     		ldr	r2, .L23+4
 478 0020 0023     		mov	r3, #0
 479 0022 0024     		mov	r4, #0
 480 0024 1360     		str	r3, [r2]
 481 0026 5460     		str	r4, [r2, #4]
  84:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 482              		.loc 1 84 0
 483 0028 364B     		ldr	r3, .L23+8
 484 002a 0022     		mov	r2, #0
 485 002c 1A80     		strh	r2, [r3]
 486 002e 30E0     		b	.L18
 487              	.L19:
  85:.\main.c      ****    {
  86:.\main.c      ****       y2_mavg += b2_mavg[i]*x2_mavg[i];             // 
 488              		.loc 1 86 0 discriminator 3
 489 0030 344B     		ldr	r3, .L23+8
 490 0032 1B88     		ldrh	r3, [r3]
 491 0034 1BB2     		sxth	r3, r3
 492 0036 344A     		ldr	r2, .L23+12
 493 0038 DB00     		lsl	r3, r3, #3
 494 003a D318     		add	r3, r2, r3
 495 003c 1968     		ldr	r1, [r3]
 496 003e 5A68     		ldr	r2, [r3, #4]
 497 0040 304B     		ldr	r3, .L23+8
 498 0042 1B88     		ldrh	r3, [r3]
 499 0044 1BB2     		sxth	r3, r3
 500 0046 2D48     		ldr	r0, .L23
 501 0048 DB00     		lsl	r3, r3, #3
 502 004a C318     		add	r3, r0, r3
 503 004c 5C68     		ldr	r4, [r3, #4]
 504 004e 1B68     		ldr	r3, [r3]
 505 0050 081C     		mov	r0, r1
 506 0052 111C     		mov	r1, r2
 507 0054 1A1C     		mov	r2, r3
 508 0056 231C     		mov	r3, r4
 509 0058 FFF7FEFF 		bl	__aeabi_dmul
 510 005c 031C     		mov	r3, r0
 511 005e 0C1C     		mov	r4, r1
 512 0060 191C     		mov	r1, r3
 513 0062 221C     		mov	r2, r4
 514 0064 264B     		ldr	r3, .L23+4
 515 0066 5C68     		ldr	r4, [r3, #4]
 516 0068 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 12


 517 006a 081C     		mov	r0, r1
 518 006c 111C     		mov	r1, r2
 519 006e 1A1C     		mov	r2, r3
 520 0070 231C     		mov	r3, r4
 521 0072 FFF7FEFF 		bl	__aeabi_dadd
 522 0076 031C     		mov	r3, r0
 523 0078 0C1C     		mov	r4, r1
 524 007a 214A     		ldr	r2, .L23+4
 525 007c 1360     		str	r3, [r2]
 526 007e 5460     		str	r4, [r2, #4]
  84:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 527              		.loc 1 84 0 discriminator 3
 528 0080 204B     		ldr	r3, .L23+8
 529 0082 1B88     		ldrh	r3, [r3]
 530 0084 9BB2     		uxth	r3, r3
 531 0086 9BB2     		uxth	r3, r3
 532 0088 0133     		add	r3, r3, #1
 533 008a 9BB2     		uxth	r3, r3
 534 008c 9AB2     		uxth	r2, r3
 535 008e 1D4B     		ldr	r3, .L23+8
 536 0090 1A80     		strh	r2, [r3]
 537              	.L18:
  84:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 538              		.loc 1 84 0 is_stmt 0 discriminator 1
 539 0092 1C4B     		ldr	r3, .L23+8
 540 0094 1B88     		ldrh	r3, [r3]
 541 0096 1BB2     		sxth	r3, r3
 542 0098 092B     		cmp	r3, #9
 543 009a C9DD     		ble	.L19
  87:.\main.c      ****    } 
  88:.\main.c      ****    
  89:.\main.c      ****    for(i = FILTER_LENGTH_mavg2-1;i >= 0;i--)        // Roll x array in order to hold old sample inp
 544              		.loc 1 89 0 is_stmt 1
 545 009c 194B     		ldr	r3, .L23+8
 546 009e 0822     		mov	r2, #8
 547 00a0 1A80     		strh	r2, [r3]
 548 00a2 19E0     		b	.L20
 549              	.L21:
  90:.\main.c      ****    {
  91:.\main.c      ****       x2_mavg[i+1] = x2_mavg[i];                    // 
 550              		.loc 1 91 0 discriminator 3
 551 00a4 174B     		ldr	r3, .L23+8
 552 00a6 1B88     		ldrh	r3, [r3]
 553 00a8 1BB2     		sxth	r3, r3
 554 00aa 5A1C     		add	r2, r3, #1
 555 00ac 154B     		ldr	r3, .L23+8
 556 00ae 1B88     		ldrh	r3, [r3]
 557 00b0 1BB2     		sxth	r3, r3
 558 00b2 1249     		ldr	r1, .L23
 559 00b4 DB00     		lsl	r3, r3, #3
 560 00b6 CB18     		add	r3, r1, r3
 561 00b8 5C68     		ldr	r4, [r3, #4]
 562 00ba 1B68     		ldr	r3, [r3]
 563 00bc 0F49     		ldr	r1, .L23
 564 00be D200     		lsl	r2, r2, #3
 565 00c0 8A18     		add	r2, r1, r2
 566 00c2 1360     		str	r3, [r2]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 13


 567 00c4 5460     		str	r4, [r2, #4]
  89:.\main.c      ****    {
 568              		.loc 1 89 0 discriminator 3
 569 00c6 0F4B     		ldr	r3, .L23+8
 570 00c8 1B88     		ldrh	r3, [r3]
 571 00ca 9BB2     		uxth	r3, r3
 572 00cc 9BB2     		uxth	r3, r3
 573 00ce 013B     		sub	r3, r3, #1
 574 00d0 9BB2     		uxth	r3, r3
 575 00d2 9AB2     		uxth	r2, r3
 576 00d4 0B4B     		ldr	r3, .L23+8
 577 00d6 1A80     		strh	r2, [r3]
 578              	.L20:
  89:.\main.c      ****    {
 579              		.loc 1 89 0 is_stmt 0 discriminator 1
 580 00d8 0A4B     		ldr	r3, .L23+8
 581 00da 1B88     		ldrh	r3, [r3]
 582 00dc 1BB2     		sxth	r3, r3
 583 00de 002B     		cmp	r3, #0
 584 00e0 E0DA     		bge	.L21
  92:.\main.c      ****    }
  93:.\main.c      ****       
  94:.\main.c      ****    return (signed int) y2_mavg;               // 
 585              		.loc 1 94 0 is_stmt 1
 586 00e2 074B     		ldr	r3, .L23+4
 587 00e4 5C68     		ldr	r4, [r3, #4]
 588 00e6 1B68     		ldr	r3, [r3]
 589 00e8 181C     		mov	r0, r3
 590 00ea 211C     		mov	r1, r4
 591 00ec FFF7FEFF 		bl	__aeabi_d2iz
 592 00f0 031C     		mov	r3, r0
  95:.\main.c      **** }
 593              		.loc 1 95 0
 594 00f2 181C     		mov	r0, r3
 595 00f4 BD46     		mov	sp, r7
 596 00f6 03B0     		add	sp, sp, #12
 597              		@ sp needed
 598 00f8 90BD     		pop	{r4, r7, pc}
 599              	.L24:
 600 00fa C046     		.align	2
 601              	.L23:
 602 00fc 00000000 		.word	x2_mavg
 603 0100 00000000 		.word	y2_mavg
 604 0104 00000000 		.word	i
 605 0108 00000000 		.word	b2_mavg
 606              		.cfi_endproc
 607              	.LFE39:
 608              		.size	mavg_filter2, .-mavg_filter2
 609              		.section	.text.low_pass_filter,"ax",%progbits
 610              		.align	2
 611              		.global	low_pass_filter
 612              		.code	16
 613              		.thumb_func
 614              		.type	low_pass_filter, %function
 615              	low_pass_filter:
 616              	.LFB40:
  96:.\main.c      **** 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 14


  97:.\main.c      **** /***********************************Lavpas filter***********************************/
  98:.\main.c      **** 
  99:.\main.c      **** int low_pass_filter(int data)
 100:.\main.c      **** {
 617              		.loc 1 100 0
 618              		.cfi_startproc
 619 0000 B0B5     		push	{r4, r5, r7, lr}
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 4, -16
 622              		.cfi_offset 5, -12
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 84B0     		sub	sp, sp, #16
 626              		.cfi_def_cfa_offset 32
 627 0004 00AF     		add	r7, sp, #0
 628              		.cfi_def_cfa_register 7
 629 0006 7860     		str	r0, [r7, #4]
 101:.\main.c      ****    int i;
 102:.\main.c      ****    x_low[0] =  (double) data;
 630              		.loc 1 102 0
 631 0008 7868     		ldr	r0, [r7, #4]
 632 000a FFF7FEFF 		bl	__aeabi_i2d
 633 000e 031C     		mov	r3, r0
 634 0010 0C1C     		mov	r4, r1
 635 0012 404A     		ldr	r2, .L33
 636 0014 1360     		str	r3, [r2]
 637 0016 5460     		str	r4, [r2, #4]
 103:.\main.c      ****    
 104:.\main.c      ****    y_low[0] = 0;
 638              		.loc 1 104 0
 639 0018 3F4A     		ldr	r2, .L33+4
 640 001a 0023     		mov	r3, #0
 641 001c 0024     		mov	r4, #0
 642 001e 1360     		str	r3, [r2]
 643 0020 5460     		str	r4, [r2, #4]
 105:.\main.c      ****   
 106:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_low;i++)                 // Run IIR filter for each received sample
 644              		.loc 1 106 0
 645 0022 0023     		mov	r3, #0
 646 0024 FB60     		str	r3, [r7, #12]
 647 0026 1EE0     		b	.L26
 648              	.L27:
 107:.\main.c      ****    {
 108:.\main.c      ****       y_low[0] += b_low[i]*x_low[i];
 649              		.loc 1 108 0 discriminator 3
 650 0028 3B4B     		ldr	r3, .L33+4
 651 002a 1C68     		ldr	r4, [r3]
 652 002c 5D68     		ldr	r5, [r3, #4]
 653 002e 3B4A     		ldr	r2, .L33+8
 654 0030 FB68     		ldr	r3, [r7, #12]
 655 0032 DB00     		lsl	r3, r3, #3
 656 0034 D318     		add	r3, r2, r3
 657 0036 1868     		ldr	r0, [r3]
 658 0038 5968     		ldr	r1, [r3, #4]
 659 003a 364A     		ldr	r2, .L33
 660 003c FB68     		ldr	r3, [r7, #12]
 661 003e DB00     		lsl	r3, r3, #3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 15


 662 0040 D318     		add	r3, r2, r3
 663 0042 1A68     		ldr	r2, [r3]
 664 0044 5B68     		ldr	r3, [r3, #4]
 665 0046 FFF7FEFF 		bl	__aeabi_dmul
 666 004a 021C     		mov	r2, r0
 667 004c 0B1C     		mov	r3, r1
 668 004e 201C     		mov	r0, r4
 669 0050 291C     		mov	r1, r5
 670 0052 FFF7FEFF 		bl	__aeabi_dadd
 671 0056 031C     		mov	r3, r0
 672 0058 0C1C     		mov	r4, r1
 673 005a 2F4A     		ldr	r2, .L33+4
 674 005c 1360     		str	r3, [r2]
 675 005e 5460     		str	r4, [r2, #4]
 106:.\main.c      ****    {
 676              		.loc 1 106 0 discriminator 3
 677 0060 FB68     		ldr	r3, [r7, #12]
 678 0062 0133     		add	r3, r3, #1
 679 0064 FB60     		str	r3, [r7, #12]
 680              	.L26:
 106:.\main.c      ****    {
 681              		.loc 1 106 0 is_stmt 0 discriminator 1
 682 0066 FB68     		ldr	r3, [r7, #12]
 683 0068 022B     		cmp	r3, #2
 684 006a DDDD     		ble	.L27
 109:.\main.c      ****    } 
 110:.\main.c      ****    
 111:.\main.c      ****    for(i =1;i <= FILTER_LENGTH_low;i++)               // Roll x array in order to hold old sample i
 685              		.loc 1 111 0 is_stmt 1
 686 006c 0123     		mov	r3, #1
 687 006e FB60     		str	r3, [r7, #12]
 688 0070 1EE0     		b	.L28
 689              	.L29:
 112:.\main.c      ****    {
 113:.\main.c      ****       y_low[0] -= a_low[i]*y_low[i];
 690              		.loc 1 113 0 discriminator 3
 691 0072 294B     		ldr	r3, .L33+4
 692 0074 1C68     		ldr	r4, [r3]
 693 0076 5D68     		ldr	r5, [r3, #4]
 694 0078 294A     		ldr	r2, .L33+12
 695 007a FB68     		ldr	r3, [r7, #12]
 696 007c DB00     		lsl	r3, r3, #3
 697 007e D318     		add	r3, r2, r3
 698 0080 1868     		ldr	r0, [r3]
 699 0082 5968     		ldr	r1, [r3, #4]
 700 0084 244A     		ldr	r2, .L33+4
 701 0086 FB68     		ldr	r3, [r7, #12]
 702 0088 DB00     		lsl	r3, r3, #3
 703 008a D318     		add	r3, r2, r3
 704 008c 1A68     		ldr	r2, [r3]
 705 008e 5B68     		ldr	r3, [r3, #4]
 706 0090 FFF7FEFF 		bl	__aeabi_dmul
 707 0094 021C     		mov	r2, r0
 708 0096 0B1C     		mov	r3, r1
 709 0098 201C     		mov	r0, r4
 710 009a 291C     		mov	r1, r5
 711 009c FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 16


 712 00a0 031C     		mov	r3, r0
 713 00a2 0C1C     		mov	r4, r1
 714 00a4 1C4A     		ldr	r2, .L33+4
 715 00a6 1360     		str	r3, [r2]
 716 00a8 5460     		str	r4, [r2, #4]
 111:.\main.c      ****    {
 717              		.loc 1 111 0 discriminator 3
 718 00aa FB68     		ldr	r3, [r7, #12]
 719 00ac 0133     		add	r3, r3, #1
 720 00ae FB60     		str	r3, [r7, #12]
 721              	.L28:
 111:.\main.c      ****    {
 722              		.loc 1 111 0 is_stmt 0 discriminator 1
 723 00b0 FB68     		ldr	r3, [r7, #12]
 724 00b2 022B     		cmp	r3, #2
 725 00b4 DDDD     		ble	.L29
 114:.\main.c      ****    }
 115:.\main.c      **** 
 116:.\main.c      ****    for(i = FILTER_LENGTH_low-1;i >= 0;i--)
 726              		.loc 1 116 0 is_stmt 1
 727 00b6 0123     		mov	r3, #1
 728 00b8 FB60     		str	r3, [r7, #12]
 729 00ba 1CE0     		b	.L30
 730              	.L31:
 117:.\main.c      ****     {
 118:.\main.c      ****        x_low[i+1]=x_low[i];
 731              		.loc 1 118 0 discriminator 3
 732 00bc FB68     		ldr	r3, [r7, #12]
 733 00be 5A1C     		add	r2, r3, #1
 734 00c0 1449     		ldr	r1, .L33
 735 00c2 FB68     		ldr	r3, [r7, #12]
 736 00c4 DB00     		lsl	r3, r3, #3
 737 00c6 CB18     		add	r3, r1, r3
 738 00c8 5C68     		ldr	r4, [r3, #4]
 739 00ca 1B68     		ldr	r3, [r3]
 740 00cc 1149     		ldr	r1, .L33
 741 00ce D200     		lsl	r2, r2, #3
 742 00d0 8A18     		add	r2, r1, r2
 743 00d2 1360     		str	r3, [r2]
 744 00d4 5460     		str	r4, [r2, #4]
 119:.\main.c      ****        y_low[i+1]=y_low[i];
 745              		.loc 1 119 0 discriminator 3
 746 00d6 FB68     		ldr	r3, [r7, #12]
 747 00d8 5A1C     		add	r2, r3, #1
 748 00da 0F49     		ldr	r1, .L33+4
 749 00dc FB68     		ldr	r3, [r7, #12]
 750 00de DB00     		lsl	r3, r3, #3
 751 00e0 CB18     		add	r3, r1, r3
 752 00e2 5C68     		ldr	r4, [r3, #4]
 753 00e4 1B68     		ldr	r3, [r3]
 754 00e6 0C49     		ldr	r1, .L33+4
 755 00e8 D200     		lsl	r2, r2, #3
 756 00ea 8A18     		add	r2, r1, r2
 757 00ec 1360     		str	r3, [r2]
 758 00ee 5460     		str	r4, [r2, #4]
 116:.\main.c      ****     {
 759              		.loc 1 116 0 discriminator 3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 17


 760 00f0 FB68     		ldr	r3, [r7, #12]
 761 00f2 013B     		sub	r3, r3, #1
 762 00f4 FB60     		str	r3, [r7, #12]
 763              	.L30:
 116:.\main.c      ****     {
 764              		.loc 1 116 0 is_stmt 0 discriminator 1
 765 00f6 FB68     		ldr	r3, [r7, #12]
 766 00f8 002B     		cmp	r3, #0
 767 00fa DFDA     		bge	.L31
 120:.\main.c      ****     }
 121:.\main.c      **** 
 122:.\main.c      ****     return floor_and_convert(y_low[0]);
 768              		.loc 1 122 0 is_stmt 1
 769 00fc 064B     		ldr	r3, .L33+4
 770 00fe 5C68     		ldr	r4, [r3, #4]
 771 0100 1B68     		ldr	r3, [r3]
 772 0102 181C     		mov	r0, r3
 773 0104 211C     		mov	r1, r4
 774 0106 FFF7FEFF 		bl	floor_and_convert
 775 010a 031C     		mov	r3, r0
 123:.\main.c      **** }
 776              		.loc 1 123 0
 777 010c 181C     		mov	r0, r3
 778 010e BD46     		mov	sp, r7
 779 0110 04B0     		add	sp, sp, #16
 780              		@ sp needed
 781 0112 B0BD     		pop	{r4, r5, r7, pc}
 782              	.L34:
 783              		.align	2
 784              	.L33:
 785 0114 00000000 		.word	x_low
 786 0118 00000000 		.word	y_low
 787 011c 00000000 		.word	b_low
 788 0120 00000000 		.word	a_low
 789              		.cfi_endproc
 790              	.LFE40:
 791              		.size	low_pass_filter, .-low_pass_filter
 792              		.global	__aeabi_idiv
 793              		.section	.text.roed_grader,"ax",%progbits
 794              		.align	2
 795              		.global	roed_grader
 796              		.code	16
 797              		.thumb_func
 798              		.type	roed_grader, %function
 799              	roed_grader:
 800              	.LFB41:
 124:.\main.c      **** 
 125:.\main.c      **** 
 126:.\main.c      **** /***********************************Omregning til grader for rød**********************************
 127:.\main.c      **** int roed_grader(int data)
 128:.\main.c      **** {
 801              		.loc 1 128 0
 802              		.cfi_startproc
 803 0000 80B5     		push	{r7, lr}
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 7, -8
 806              		.cfi_offset 14, -4
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 18


 807 0002 82B0     		sub	sp, sp, #8
 808              		.cfi_def_cfa_offset 16
 809 0004 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
 129:.\main.c      ****     if ((data >= -204) && (data <= -202))
 812              		.loc 1 129 0
 813 0008 7B68     		ldr	r3, [r7, #4]
 814 000a CC33     		add	r3, r3, #204
 815 000c 10DB     		blt	.L36
 816              		.loc 1 129 0 is_stmt 0 discriminator 1
 817 000e 7B68     		ldr	r3, [r7, #4]
 818 0010 C933     		add	r3, r3, #201
 819 0012 0DDA     		bge	.L36
 130:.\main.c      ****     {
 131:.\main.c      ****         data=(0+(10-0)*(data-(-202))/(-204-(-202)));
 820              		.loc 1 131 0 is_stmt 1
 821 0014 7B68     		ldr	r3, [r7, #4]
 822 0016 CA33     		add	r3, r3, #202
 823 0018 1A1C     		mov	r2, r3
 824 001a 131C     		mov	r3, r2
 825 001c 9B00     		lsl	r3, r3, #2
 826 001e 9B18     		add	r3, r3, r2
 827 0020 5B00     		lsl	r3, r3, #1
 828 0022 00D5     		bpl	.L37
 829 0024 0133     		add	r3, r3, #1
 830              	.L37:
 831 0026 5B10     		asr	r3, r3, #1
 832 0028 5B42     		neg	r3, r3
 833 002a 7B60     		str	r3, [r7, #4]
 132:.\main.c      ****         return data; 
 834              		.loc 1 132 0
 835 002c 7B68     		ldr	r3, [r7, #4]
 836 002e 71E0     		b	.L38
 837              	.L36:
 133:.\main.c      ****     }
 134:.\main.c      ****     else if ((data >= -202) && (data <= -185))
 838              		.loc 1 134 0
 839 0030 7B68     		ldr	r3, [r7, #4]
 840 0032 CA33     		add	r3, r3, #202
 841 0034 12DB     		blt	.L39
 842              		.loc 1 134 0 is_stmt 0 discriminator 1
 843 0036 7B68     		ldr	r3, [r7, #4]
 844 0038 B833     		add	r3, r3, #184
 845 003a 0FDA     		bge	.L39
 135:.\main.c      ****     {
 136:.\main.c      ****         data=(10+(30-10)*(data-(-202))/(-185-(-202)));
 846              		.loc 1 136 0 is_stmt 1
 847 003c 7B68     		ldr	r3, [r7, #4]
 848 003e CA33     		add	r3, r3, #202
 849 0040 1A1C     		mov	r2, r3
 850 0042 131C     		mov	r3, r2
 851 0044 9B00     		lsl	r3, r3, #2
 852 0046 9B18     		add	r3, r3, r2
 853 0048 9B00     		lsl	r3, r3, #2
 854 004a 181C     		mov	r0, r3
 855 004c 1121     		mov	r1, #17
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 19


 856 004e FFF7FEFF 		bl	__aeabi_idiv
 857 0052 031C     		mov	r3, r0
 858 0054 0A33     		add	r3, r3, #10
 859 0056 7B60     		str	r3, [r7, #4]
 137:.\main.c      ****         return data;
 860              		.loc 1 137 0
 861 0058 7B68     		ldr	r3, [r7, #4]
 862 005a 5BE0     		b	.L38
 863              	.L39:
 138:.\main.c      ****     }
 139:.\main.c      ****     else if ((data >= -185) && (data <= -143))
 864              		.loc 1 139 0
 865 005c 7B68     		ldr	r3, [r7, #4]
 866 005e B933     		add	r3, r3, #185
 867 0060 12DB     		blt	.L40
 868              		.loc 1 139 0 is_stmt 0 discriminator 1
 869 0062 7B68     		ldr	r3, [r7, #4]
 870 0064 8E33     		add	r3, r3, #142
 871 0066 0FDA     		bge	.L40
 140:.\main.c      ****     {
 141:.\main.c      ****         data=(30+(50-30)*(data-(-185))/(-143-(-185)));
 872              		.loc 1 141 0 is_stmt 1
 873 0068 7B68     		ldr	r3, [r7, #4]
 874 006a B933     		add	r3, r3, #185
 875 006c 1A1C     		mov	r2, r3
 876 006e 131C     		mov	r3, r2
 877 0070 9B00     		lsl	r3, r3, #2
 878 0072 9B18     		add	r3, r3, r2
 879 0074 9B00     		lsl	r3, r3, #2
 880 0076 181C     		mov	r0, r3
 881 0078 2A21     		mov	r1, #42
 882 007a FFF7FEFF 		bl	__aeabi_idiv
 883 007e 031C     		mov	r3, r0
 884 0080 1E33     		add	r3, r3, #30
 885 0082 7B60     		str	r3, [r7, #4]
 142:.\main.c      ****         return data;
 886              		.loc 1 142 0
 887 0084 7B68     		ldr	r3, [r7, #4]
 888 0086 45E0     		b	.L38
 889              	.L40:
 143:.\main.c      ****     }
 144:.\main.c      ****     else if ((data >= -143) && (data <= -84))
 890              		.loc 1 144 0
 891 0088 7B68     		ldr	r3, [r7, #4]
 892 008a 8F33     		add	r3, r3, #143
 893 008c 12DB     		blt	.L41
 894              		.loc 1 144 0 is_stmt 0 discriminator 1
 895 008e 7B68     		ldr	r3, [r7, #4]
 896 0090 5333     		add	r3, r3, #83
 897 0092 0FDA     		bge	.L41
 145:.\main.c      ****     {
 146:.\main.c      ****         data=(50+(70-50)*(data-(-143))/(-84-(-143)));
 898              		.loc 1 146 0 is_stmt 1
 899 0094 7B68     		ldr	r3, [r7, #4]
 900 0096 8F33     		add	r3, r3, #143
 901 0098 1A1C     		mov	r2, r3
 902 009a 131C     		mov	r3, r2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 20


 903 009c 9B00     		lsl	r3, r3, #2
 904 009e 9B18     		add	r3, r3, r2
 905 00a0 9B00     		lsl	r3, r3, #2
 906 00a2 181C     		mov	r0, r3
 907 00a4 3B21     		mov	r1, #59
 908 00a6 FFF7FEFF 		bl	__aeabi_idiv
 909 00aa 031C     		mov	r3, r0
 910 00ac 3233     		add	r3, r3, #50
 911 00ae 7B60     		str	r3, [r7, #4]
 147:.\main.c      ****         return data;
 912              		.loc 1 147 0
 913 00b0 7B68     		ldr	r3, [r7, #4]
 914 00b2 2FE0     		b	.L38
 915              	.L41:
 148:.\main.c      ****     }
 149:.\main.c      ****     else if ((data >= -84) && (data <= -48))
 916              		.loc 1 149 0
 917 00b4 7B68     		ldr	r3, [r7, #4]
 918 00b6 5433     		add	r3, r3, #84
 919 00b8 12DB     		blt	.L42
 920              		.loc 1 149 0 is_stmt 0 discriminator 1
 921 00ba 7B68     		ldr	r3, [r7, #4]
 922 00bc 2F33     		add	r3, r3, #47
 923 00be 0FDA     		bge	.L42
 150:.\main.c      ****     {
 151:.\main.c      ****         data=(70+(80-70)*(data-(-84))/(-48-(-84)));
 924              		.loc 1 151 0 is_stmt 1
 925 00c0 7B68     		ldr	r3, [r7, #4]
 926 00c2 5433     		add	r3, r3, #84
 927 00c4 1A1C     		mov	r2, r3
 928 00c6 131C     		mov	r3, r2
 929 00c8 9B00     		lsl	r3, r3, #2
 930 00ca 9B18     		add	r3, r3, r2
 931 00cc 5B00     		lsl	r3, r3, #1
 932 00ce 181C     		mov	r0, r3
 933 00d0 2421     		mov	r1, #36
 934 00d2 FFF7FEFF 		bl	__aeabi_idiv
 935 00d6 031C     		mov	r3, r0
 936 00d8 4633     		add	r3, r3, #70
 937 00da 7B60     		str	r3, [r7, #4]
 152:.\main.c      ****         return data;
 938              		.loc 1 152 0
 939 00dc 7B68     		ldr	r3, [r7, #4]
 940 00de 19E0     		b	.L38
 941              	.L42:
 153:.\main.c      ****     }
 154:.\main.c      ****     else if ((data >= -48) && (data <= -7))
 942              		.loc 1 154 0
 943 00e0 7B68     		ldr	r3, [r7, #4]
 944 00e2 3033     		add	r3, r3, #48
 945 00e4 12DB     		blt	.L43
 946              		.loc 1 154 0 is_stmt 0 discriminator 1
 947 00e6 7B68     		ldr	r3, [r7, #4]
 948 00e8 0633     		add	r3, r3, #6
 949 00ea 0FDA     		bge	.L43
 155:.\main.c      ****     {
 156:.\main.c      ****         data=(80+(90-80)*(data-(-48))/(-7-(-48)));
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 21


 950              		.loc 1 156 0 is_stmt 1
 951 00ec 7B68     		ldr	r3, [r7, #4]
 952 00ee 3033     		add	r3, r3, #48
 953 00f0 1A1C     		mov	r2, r3
 954 00f2 131C     		mov	r3, r2
 955 00f4 9B00     		lsl	r3, r3, #2
 956 00f6 9B18     		add	r3, r3, r2
 957 00f8 5B00     		lsl	r3, r3, #1
 958 00fa 181C     		mov	r0, r3
 959 00fc 2921     		mov	r1, #41
 960 00fe FFF7FEFF 		bl	__aeabi_idiv
 961 0102 031C     		mov	r3, r0
 962 0104 5033     		add	r3, r3, #80
 963 0106 7B60     		str	r3, [r7, #4]
 157:.\main.c      ****         return data;
 964              		.loc 1 157 0
 965 0108 7B68     		ldr	r3, [r7, #4]
 966 010a 03E0     		b	.L38
 967              	.L43:
 158:.\main.c      ****     }
 159:.\main.c      ****     
 160:.\main.c      ****     else
 161:.\main.c      ****     {
 162:.\main.c      ****         data = -200;
 968              		.loc 1 162 0
 969 010c C823     		mov	r3, #200
 970 010e 5B42     		neg	r3, r3
 971 0110 7B60     		str	r3, [r7, #4]
 163:.\main.c      ****         return data;
 972              		.loc 1 163 0
 973 0112 7B68     		ldr	r3, [r7, #4]
 974              	.L38:
 164:.\main.c      ****     }
 165:.\main.c      **** }
 975              		.loc 1 165 0
 976 0114 181C     		mov	r0, r3
 977 0116 BD46     		mov	sp, r7
 978 0118 02B0     		add	sp, sp, #8
 979              		@ sp needed
 980 011a 80BD     		pop	{r7, pc}
 981              		.cfi_endproc
 982              	.LFE41:
 983              		.size	roed_grader, .-roed_grader
 984              		.section	.text.groen_grader,"ax",%progbits
 985              		.align	2
 986              		.global	groen_grader
 987              		.code	16
 988              		.thumb_func
 989              		.type	groen_grader, %function
 990              	groen_grader:
 991              	.LFB42:
 166:.\main.c      **** 
 167:.\main.c      **** /***********************************Omregning til grader for grøn*********************************
 168:.\main.c      **** int groen_grader(int data)
 169:.\main.c      **** {
 992              		.loc 1 169 0
 993              		.cfi_startproc
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 22


 994 0000 80B5     		push	{r7, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 82B0     		sub	sp, sp, #8
 999              		.cfi_def_cfa_offset 16
 1000 0004 00AF     		add	r7, sp, #0
 1001              		.cfi_def_cfa_register 7
 1002 0006 7860     		str	r0, [r7, #4]
 170:.\main.c      ****     if ((data >= -190) && (data <= -186))
 1003              		.loc 1 170 0
 1004 0008 7B68     		ldr	r3, [r7, #4]
 1005 000a BE33     		add	r3, r3, #190
 1006 000c 0FDB     		blt	.L45
 1007              		.loc 1 170 0 is_stmt 0 discriminator 1
 1008 000e 7B68     		ldr	r3, [r7, #4]
 1009 0010 B933     		add	r3, r3, #185
 1010 0012 0CDA     		bge	.L45
 171:.\main.c      ****     {
 172:.\main.c      ****         data=(0+(10-0)*(data-(-190))/(-186-(-190)));
 1011              		.loc 1 172 0 is_stmt 1
 1012 0014 7B68     		ldr	r3, [r7, #4]
 1013 0016 BE33     		add	r3, r3, #190
 1014 0018 1A1C     		mov	r2, r3
 1015 001a 131C     		mov	r3, r2
 1016 001c 9B00     		lsl	r3, r3, #2
 1017 001e 9B18     		add	r3, r3, r2
 1018 0020 5B00     		lsl	r3, r3, #1
 1019 0022 00D5     		bpl	.L46
 1020 0024 0333     		add	r3, r3, #3
 1021              	.L46:
 1022 0026 9B10     		asr	r3, r3, #2
 1023 0028 7B60     		str	r3, [r7, #4]
 173:.\main.c      ****         return data; 
 1024              		.loc 1 173 0
 1025 002a 7B68     		ldr	r3, [r7, #4]
 1026 002c 71E0     		b	.L47
 1027              	.L45:
 174:.\main.c      ****     }
 175:.\main.c      ****     else if ((data >= -186) && (data <= -163))
 1028              		.loc 1 175 0
 1029 002e 7B68     		ldr	r3, [r7, #4]
 1030 0030 BA33     		add	r3, r3, #186
 1031 0032 12DB     		blt	.L48
 1032              		.loc 1 175 0 is_stmt 0 discriminator 1
 1033 0034 7B68     		ldr	r3, [r7, #4]
 1034 0036 A233     		add	r3, r3, #162
 1035 0038 0FDA     		bge	.L48
 176:.\main.c      ****     {
 177:.\main.c      ****         data=(10+(30-10)*(data-(-186))/(-163-(-186)));
 1036              		.loc 1 177 0 is_stmt 1
 1037 003a 7B68     		ldr	r3, [r7, #4]
 1038 003c BA33     		add	r3, r3, #186
 1039 003e 1A1C     		mov	r2, r3
 1040 0040 131C     		mov	r3, r2
 1041 0042 9B00     		lsl	r3, r3, #2
 1042 0044 9B18     		add	r3, r3, r2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 23


 1043 0046 9B00     		lsl	r3, r3, #2
 1044 0048 181C     		mov	r0, r3
 1045 004a 1721     		mov	r1, #23
 1046 004c FFF7FEFF 		bl	__aeabi_idiv
 1047 0050 031C     		mov	r3, r0
 1048 0052 0A33     		add	r3, r3, #10
 1049 0054 7B60     		str	r3, [r7, #4]
 178:.\main.c      ****         return data;
 1050              		.loc 1 178 0
 1051 0056 7B68     		ldr	r3, [r7, #4]
 1052 0058 5BE0     		b	.L47
 1053              	.L48:
 179:.\main.c      ****     }
 180:.\main.c      ****     else if ((data >= -163) && (data <= -121))
 1054              		.loc 1 180 0
 1055 005a 7B68     		ldr	r3, [r7, #4]
 1056 005c A333     		add	r3, r3, #163
 1057 005e 12DB     		blt	.L49
 1058              		.loc 1 180 0 is_stmt 0 discriminator 1
 1059 0060 7B68     		ldr	r3, [r7, #4]
 1060 0062 7833     		add	r3, r3, #120
 1061 0064 0FDA     		bge	.L49
 181:.\main.c      ****     {
 182:.\main.c      ****         data=(30+(50-30)*(data-(-163))/(-121-(-163)));
 1062              		.loc 1 182 0 is_stmt 1
 1063 0066 7B68     		ldr	r3, [r7, #4]
 1064 0068 A333     		add	r3, r3, #163
 1065 006a 1A1C     		mov	r2, r3
 1066 006c 131C     		mov	r3, r2
 1067 006e 9B00     		lsl	r3, r3, #2
 1068 0070 9B18     		add	r3, r3, r2
 1069 0072 9B00     		lsl	r3, r3, #2
 1070 0074 181C     		mov	r0, r3
 1071 0076 2A21     		mov	r1, #42
 1072 0078 FFF7FEFF 		bl	__aeabi_idiv
 1073 007c 031C     		mov	r3, r0
 1074 007e 1E33     		add	r3, r3, #30
 1075 0080 7B60     		str	r3, [r7, #4]
 183:.\main.c      ****         return data;
 1076              		.loc 1 183 0
 1077 0082 7B68     		ldr	r3, [r7, #4]
 1078 0084 45E0     		b	.L47
 1079              	.L49:
 184:.\main.c      ****     }
 185:.\main.c      ****     else if ((data >= -121) && (data <= -62))
 1080              		.loc 1 185 0
 1081 0086 7B68     		ldr	r3, [r7, #4]
 1082 0088 7933     		add	r3, r3, #121
 1083 008a 12DB     		blt	.L50
 1084              		.loc 1 185 0 is_stmt 0 discriminator 1
 1085 008c 7B68     		ldr	r3, [r7, #4]
 1086 008e 3D33     		add	r3, r3, #61
 1087 0090 0FDA     		bge	.L50
 186:.\main.c      ****     {
 187:.\main.c      ****         data=(50+(70-50)*(data-(-121))/(-62-(-121)));
 1088              		.loc 1 187 0 is_stmt 1
 1089 0092 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 24


 1090 0094 7933     		add	r3, r3, #121
 1091 0096 1A1C     		mov	r2, r3
 1092 0098 131C     		mov	r3, r2
 1093 009a 9B00     		lsl	r3, r3, #2
 1094 009c 9B18     		add	r3, r3, r2
 1095 009e 9B00     		lsl	r3, r3, #2
 1096 00a0 181C     		mov	r0, r3
 1097 00a2 3B21     		mov	r1, #59
 1098 00a4 FFF7FEFF 		bl	__aeabi_idiv
 1099 00a8 031C     		mov	r3, r0
 1100 00aa 3233     		add	r3, r3, #50
 1101 00ac 7B60     		str	r3, [r7, #4]
 188:.\main.c      ****         return data;
 1102              		.loc 1 188 0
 1103 00ae 7B68     		ldr	r3, [r7, #4]
 1104 00b0 2FE0     		b	.L47
 1105              	.L50:
 189:.\main.c      ****     }
 190:.\main.c      ****     else if ((data >= -62) && (data <= -26))
 1106              		.loc 1 190 0
 1107 00b2 7B68     		ldr	r3, [r7, #4]
 1108 00b4 3E33     		add	r3, r3, #62
 1109 00b6 12DB     		blt	.L51
 1110              		.loc 1 190 0 is_stmt 0 discriminator 1
 1111 00b8 7B68     		ldr	r3, [r7, #4]
 1112 00ba 1933     		add	r3, r3, #25
 1113 00bc 0FDA     		bge	.L51
 191:.\main.c      ****     {
 192:.\main.c      ****         data=(70+(80-70)*(data-(-62))/(-26-(-62)));
 1114              		.loc 1 192 0 is_stmt 1
 1115 00be 7B68     		ldr	r3, [r7, #4]
 1116 00c0 3E33     		add	r3, r3, #62
 1117 00c2 1A1C     		mov	r2, r3
 1118 00c4 131C     		mov	r3, r2
 1119 00c6 9B00     		lsl	r3, r3, #2
 1120 00c8 9B18     		add	r3, r3, r2
 1121 00ca 5B00     		lsl	r3, r3, #1
 1122 00cc 181C     		mov	r0, r3
 1123 00ce 2421     		mov	r1, #36
 1124 00d0 FFF7FEFF 		bl	__aeabi_idiv
 1125 00d4 031C     		mov	r3, r0
 1126 00d6 4633     		add	r3, r3, #70
 1127 00d8 7B60     		str	r3, [r7, #4]
 193:.\main.c      ****         return data;
 1128              		.loc 1 193 0
 1129 00da 7B68     		ldr	r3, [r7, #4]
 1130 00dc 19E0     		b	.L47
 1131              	.L51:
 194:.\main.c      ****     }
 195:.\main.c      ****     else if ((data >= -26) && (data <=11))
 1132              		.loc 1 195 0
 1133 00de 7B68     		ldr	r3, [r7, #4]
 1134 00e0 1A33     		add	r3, r3, #26
 1135 00e2 12DB     		blt	.L52
 1136              		.loc 1 195 0 is_stmt 0 discriminator 1
 1137 00e4 7B68     		ldr	r3, [r7, #4]
 1138 00e6 0B2B     		cmp	r3, #11
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 25


 1139 00e8 0FDC     		bgt	.L52
 196:.\main.c      ****     {
 197:.\main.c      ****         data=(80+(90-80)*(data-(-26))/(11-(-26)));
 1140              		.loc 1 197 0 is_stmt 1
 1141 00ea 7B68     		ldr	r3, [r7, #4]
 1142 00ec 1A33     		add	r3, r3, #26
 1143 00ee 1A1C     		mov	r2, r3
 1144 00f0 131C     		mov	r3, r2
 1145 00f2 9B00     		lsl	r3, r3, #2
 1146 00f4 9B18     		add	r3, r3, r2
 1147 00f6 5B00     		lsl	r3, r3, #1
 1148 00f8 181C     		mov	r0, r3
 1149 00fa 2521     		mov	r1, #37
 1150 00fc FFF7FEFF 		bl	__aeabi_idiv
 1151 0100 031C     		mov	r3, r0
 1152 0102 5033     		add	r3, r3, #80
 1153 0104 7B60     		str	r3, [r7, #4]
 198:.\main.c      ****         return data;
 1154              		.loc 1 198 0
 1155 0106 7B68     		ldr	r3, [r7, #4]
 1156 0108 03E0     		b	.L47
 1157              	.L52:
 199:.\main.c      ****     }
 200:.\main.c      ****     
 201:.\main.c      ****     else
 202:.\main.c      ****     {
 203:.\main.c      ****         data = -200;
 1158              		.loc 1 203 0
 1159 010a C823     		mov	r3, #200
 1160 010c 5B42     		neg	r3, r3
 1161 010e 7B60     		str	r3, [r7, #4]
 204:.\main.c      ****         
 205:.\main.c      ****         return data;
 1162              		.loc 1 205 0
 1163 0110 7B68     		ldr	r3, [r7, #4]
 1164              	.L47:
 206:.\main.c      ****     }
 207:.\main.c      **** }
 1165              		.loc 1 207 0
 1166 0112 181C     		mov	r0, r3
 1167 0114 BD46     		mov	sp, r7
 1168 0116 02B0     		add	sp, sp, #8
 1169              		@ sp needed
 1170 0118 80BD     		pop	{r7, pc}
 1171              		.cfi_endproc
 1172              	.LFE42:
 1173              		.size	groen_grader, .-groen_grader
 1174              		.global	__aeabi_ddiv
 1175 011a C046     		.section	.text.differentiator,"ax",%progbits
 1176              		.align	2
 1177              		.global	differentiator
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	differentiator, %function
 1181              	differentiator:
 1182              	.LFB43:
 208:.\main.c      **** 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 26


 209:.\main.c      **** /***********************************Differentiator***********************************/
 210:.\main.c      **** 
 211:.\main.c      **** signed int differentiator(signed int new)
 212:.\main.c      **** {
 1183              		.loc 1 212 0
 1184              		.cfi_startproc
 1185 0000 90B5     		push	{r4, r7, lr}
 1186              		.cfi_def_cfa_offset 12
 1187              		.cfi_offset 4, -12
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 83B0     		sub	sp, sp, #12
 1191              		.cfi_def_cfa_offset 24
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 1194 0006 7860     		str	r0, [r7, #4]
 213:.\main.c      ****    diff = (new - old)/0.01;
 1195              		.loc 1 213 0
 1196 0008 204B     		ldr	r3, .L57
 1197 000a 1B88     		ldrh	r3, [r3]
 1198 000c 1BB2     		sxth	r3, r3
 1199 000e 7A68     		ldr	r2, [r7, #4]
 1200 0010 D31A     		sub	r3, r2, r3
 1201 0012 181C     		mov	r0, r3
 1202 0014 FFF7FEFF 		bl	__aeabi_i2d
 1203 0018 031C     		mov	r3, r0
 1204 001a 0C1C     		mov	r4, r1
 1205 001c 181C     		mov	r0, r3
 1206 001e 211C     		mov	r1, r4
 1207 0020 1B4A     		ldr	r2, .L57+4
 1208 0022 1C4B     		ldr	r3, .L57+8
 1209 0024 FFF7FEFF 		bl	__aeabi_ddiv
 1210 0028 031C     		mov	r3, r0
 1211 002a 0C1C     		mov	r4, r1
 1212 002c 181C     		mov	r0, r3
 1213 002e 211C     		mov	r1, r4
 1214 0030 FFF7FEFF 		bl	__aeabi_d2iz
 1215 0034 031C     		mov	r3, r0
 1216 0036 9AB2     		uxth	r2, r3
 1217 0038 174B     		ldr	r3, .L57+12
 1218 003a 1A80     		strh	r2, [r3]
 214:.\main.c      ****    old = new;
 1219              		.loc 1 214 0
 1220 003c 7B68     		ldr	r3, [r7, #4]
 1221 003e 9AB2     		uxth	r2, r3
 1222 0040 124B     		ldr	r3, .L57
 1223 0042 1A80     		strh	r2, [r3]
 215:.\main.c      ****    //return diff;
 216:.\main.c      ****     if(diff > 1)        //Stigende 
 1224              		.loc 1 216 0
 1225 0044 144B     		ldr	r3, .L57+12
 1226 0046 1B88     		ldrh	r3, [r3]
 1227 0048 1BB2     		sxth	r3, r3
 1228 004a 012B     		cmp	r3, #1
 1229 004c 06DD     		ble	.L54
 217:.\main.c      ****     {
 218:.\main.c      ****         diff = 10;
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 27


 1230              		.loc 1 218 0
 1231 004e 124B     		ldr	r3, .L57+12
 1232 0050 0A22     		mov	r2, #10
 1233 0052 1A80     		strh	r2, [r3]
 219:.\main.c      ****         return diff;
 1234              		.loc 1 219 0
 1235 0054 104B     		ldr	r3, .L57+12
 1236 0056 1B88     		ldrh	r3, [r3]
 1237 0058 1BB2     		sxth	r3, r3
 1238 005a 13E0     		b	.L55
 1239              	.L54:
 220:.\main.c      ****     }
 221:.\main.c      ****     
 222:.\main.c      ****     else if (diff < 1)  //faldene 
 1240              		.loc 1 222 0
 1241 005c 0E4B     		ldr	r3, .L57+12
 1242 005e 1B88     		ldrh	r3, [r3]
 1243 0060 1BB2     		sxth	r3, r3
 1244 0062 002B     		cmp	r3, #0
 1245 0064 07DC     		bgt	.L56
 223:.\main.c      ****     {
 224:.\main.c      ****         diff = -10;
 1246              		.loc 1 224 0
 1247 0066 0C4B     		ldr	r3, .L57+12
 1248 0068 0A22     		mov	r2, #10
 1249 006a 5242     		neg	r2, r2
 1250 006c 1A80     		strh	r2, [r3]
 225:.\main.c      ****         return diff;
 1251              		.loc 1 225 0
 1252 006e 0A4B     		ldr	r3, .L57+12
 1253 0070 1B88     		ldrh	r3, [r3]
 1254 0072 1BB2     		sxth	r3, r3
 1255 0074 06E0     		b	.L55
 1256              	.L56:
 226:.\main.c      ****     }
 227:.\main.c      ****     
 228:.\main.c      ****     else
 229:.\main.c      ****     {
 230:.\main.c      ****         diff=-200;
 1257              		.loc 1 230 0
 1258 0076 084B     		ldr	r3, .L57+12
 1259 0078 C822     		mov	r2, #200
 1260 007a 5242     		neg	r2, r2
 1261 007c 1A80     		strh	r2, [r3]
 231:.\main.c      ****         return diff;
 1262              		.loc 1 231 0
 1263 007e 064B     		ldr	r3, .L57+12
 1264 0080 1B88     		ldrh	r3, [r3]
 1265 0082 1BB2     		sxth	r3, r3
 1266              	.L55:
 232:.\main.c      ****     }
 233:.\main.c      **** }
 1267              		.loc 1 233 0
 1268 0084 181C     		mov	r0, r3
 1269 0086 BD46     		mov	sp, r7
 1270 0088 03B0     		add	sp, sp, #12
 1271              		@ sp needed
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 28


 1272 008a 90BD     		pop	{r4, r7, pc}
 1273              	.L58:
 1274              		.align	2
 1275              	.L57:
 1276 008c 00000000 		.word	old
 1277 0090 7B14AE47 		.word	1202590843
 1278 0094 E17A843F 		.word	1065646817
 1279 0098 00000000 		.word	diff
 1280              		.cfi_endproc
 1281              	.LFE43:
 1282              		.size	differentiator, .-differentiator
 1283              		.section	.text.ADC_interrupt,"ax",%progbits
 1284              		.align	2
 1285              		.global	ADC_interrupt
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	ADC_interrupt, %function
 1289              	ADC_interrupt:
 1290              	.LFB44:
 234:.\main.c      **** 
 235:.\main.c      **** /***********************************ISR***********************************/
 236:.\main.c      **** 
 237:.\main.c      **** CY_ISR(ADC_interrupt)
 238:.\main.c      **** {  
 1291              		.loc 1 238 0
 1292              		.cfi_startproc
 1293 0000 80B5     		push	{r7, lr}
 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 7, -8
 1296              		.cfi_offset 14, -4
 1297 0002 00AF     		add	r7, sp, #0
 1298              		.cfi_def_cfa_register 7
 239:.\main.c      ****     accroed = ADC_GetResult16(0)-1010+7;
 1299              		.loc 1 239 0
 1300 0004 0020     		mov	r0, #0
 1301 0006 FFF7FEFF 		bl	ADC_GetResult16
 1302 000a 031C     		mov	r3, r0
 1303 000c 9BB2     		uxth	r3, r3
 1304 000e 524A     		ldr	r2, .L64
 1305 0010 9446     		mov	ip, r2
 1306 0012 6344     		add	r3, r3, ip
 1307 0014 9BB2     		uxth	r3, r3
 1308 0016 9AB2     		uxth	r2, r3
 1309 0018 504B     		ldr	r3, .L64+4
 1310 001a 1A80     		strh	r2, [r3]
 240:.\main.c      ****     accgroen = ADC_GetResult16(1)-1024+52;
 1311              		.loc 1 240 0
 1312 001c 0120     		mov	r0, #1
 1313 001e FFF7FEFF 		bl	ADC_GetResult16
 1314 0022 031C     		mov	r3, r0
 1315 0024 9BB2     		uxth	r3, r3
 1316 0026 4E4A     		ldr	r2, .L64+8
 1317 0028 9446     		mov	ip, r2
 1318 002a 6344     		add	r3, r3, ip
 1319 002c 9BB2     		uxth	r3, r3
 1320 002e 9AB2     		uxth	r2, r3
 1321 0030 4C4B     		ldr	r3, .L64+12
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 29


 1322 0032 1A80     		strh	r2, [r3]
 241:.\main.c      ****     EMG = ADC_GetResult16(2);
 1323              		.loc 1 241 0
 1324 0034 0220     		mov	r0, #2
 1325 0036 FFF7FEFF 		bl	ADC_GetResult16
 1326 003a 031C     		mov	r3, r0
 1327 003c 1A1C     		mov	r2, r3
 1328 003e 4A4B     		ldr	r3, .L64+16
 1329 0040 1A80     		strh	r2, [r3]
 242:.\main.c      ****     
 243:.\main.c      ****     data_ready = TRUE;
 1330              		.loc 1 243 0
 1331 0042 4A4B     		ldr	r3, .L64+20
 1332 0044 0122     		mov	r2, #1
 1333 0046 1A70     		strb	r2, [r3]
 244:.\main.c      ****     
 245:.\main.c      ****     /* Databehandling */
 246:.\main.c      ****          
 247:.\main.c      ****     if(data_ready)
 1334              		.loc 1 247 0
 1335 0048 484B     		ldr	r3, .L64+20
 1336 004a 1B78     		ldrb	r3, [r3]
 1337 004c 002B     		cmp	r3, #0
 1338 004e 00D1     		bne	.LCB1018
 1339 0050 7FE0     		b	.L59	@long jump
 1340              	.LCB1018:
 248:.\main.c      ****     {   
 249:.\main.c      ****         /* Accelerometerne*/
 250:.\main.c      ****         StartMeasuring
 1341              		.loc 1 250 0
 1342 0052 0120     		mov	r0, #1
 1343 0054 FFF7FEFF 		bl	Control_Reg_1_Write
 251:.\main.c      ****         mav_data_roed = mavg_filter(accroed);           //Moving average filter til kanal 1
 1344              		.loc 1 251 0
 1345 0058 404B     		ldr	r3, .L64+4
 1346 005a 1B88     		ldrh	r3, [r3]
 1347 005c 1BB2     		sxth	r3, r3
 1348 005e 181C     		mov	r0, r3
 1349 0060 FFF7FEFF 		bl	mavg_filter
 1350 0064 031C     		mov	r3, r0
 1351 0066 9AB2     		uxth	r2, r3
 1352 0068 414B     		ldr	r3, .L64+24
 1353 006a 1A80     		strh	r2, [r3]
 252:.\main.c      ****         grader_roed = roed_grader(mav_data_roed);       //Grader tages til det filtrede signal
 1354              		.loc 1 252 0
 1355 006c 404B     		ldr	r3, .L64+24
 1356 006e 1B88     		ldrh	r3, [r3]
 1357 0070 1BB2     		sxth	r3, r3
 1358 0072 181C     		mov	r0, r3
 1359 0074 FFF7FEFF 		bl	roed_grader
 1360 0078 031C     		mov	r3, r0
 1361 007a 9AB2     		uxth	r2, r3
 1362 007c 3D4B     		ldr	r3, .L64+28
 1363 007e 1A80     		strh	r2, [r3]
 253:.\main.c      ****         
 254:.\main.c      ****         mav_data_groen = mavg_filter2(accgroen);        //Moving average filter til kanal 2
 1364              		.loc 1 254 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 30


 1365 0080 384B     		ldr	r3, .L64+12
 1366 0082 1B88     		ldrh	r3, [r3]
 1367 0084 1BB2     		sxth	r3, r3
 1368 0086 181C     		mov	r0, r3
 1369 0088 FFF7FEFF 		bl	mavg_filter2
 1370 008c 031C     		mov	r3, r0
 1371 008e 9AB2     		uxth	r2, r3
 1372 0090 394B     		ldr	r3, .L64+32
 1373 0092 1A80     		strh	r2, [r3]
 255:.\main.c      ****         grader_groen = groen_grader(mav_data_groen);    //Grader tages til det filtrede signal
 1374              		.loc 1 255 0
 1375 0094 384B     		ldr	r3, .L64+32
 1376 0096 1B88     		ldrh	r3, [r3]
 1377 0098 1BB2     		sxth	r3, r3
 1378 009a 181C     		mov	r0, r3
 1379 009c FFF7FEFF 		bl	groen_grader
 1380 00a0 031C     		mov	r3, r0
 1381 00a2 9AB2     		uxth	r2, r3
 1382 00a4 354B     		ldr	r3, .L64+36
 1383 00a6 1A80     		strh	r2, [r3]
 256:.\main.c      **** 
 257:.\main.c      ****         samlet_grader=grader_roed+grader_groen;         //Graderne lægges sammen, således vinklen
 1384              		.loc 1 257 0
 1385 00a8 324B     		ldr	r3, .L64+28
 1386 00aa 1B88     		ldrh	r3, [r3]
 1387 00ac 9AB2     		uxth	r2, r3
 1388 00ae 334B     		ldr	r3, .L64+36
 1389 00b0 1B88     		ldrh	r3, [r3]
 1390 00b2 9BB2     		uxth	r3, r3
 1391 00b4 D318     		add	r3, r2, r3
 1392 00b6 9BB2     		uxth	r3, r3
 1393 00b8 9AB2     		uxth	r2, r3
 1394 00ba 314B     		ldr	r3, .L64+40
 1395 00bc 1A80     		strh	r2, [r3]
 258:.\main.c      ****               
 259:.\main.c      ****         StopMeasuring
 1396              		.loc 1 259 0
 1397 00be 0020     		mov	r0, #0
 1398 00c0 FFF7FEFF 		bl	Control_Reg_1_Write
 260:.\main.c      ****         
 261:.\main.c      ****          if (samlet_grader<90)
 1399              		.loc 1 261 0
 1400 00c4 2E4B     		ldr	r3, .L64+40
 1401 00c6 1B88     		ldrh	r3, [r3]
 1402 00c8 1BB2     		sxth	r3, r3
 1403 00ca 592B     		cmp	r3, #89
 1404 00cc 05DC     		bgt	.L61
 262:.\main.c      ****         {
 263:.\main.c      ****             Pin_Green_Write(LED_OFF); 
 1405              		.loc 1 263 0
 1406 00ce 0120     		mov	r0, #1
 1407 00d0 FFF7FEFF 		bl	Pin_Green_Write
 264:.\main.c      ****             Pin_Red_Write(LED_ON);
 1408              		.loc 1 264 0
 1409 00d4 0020     		mov	r0, #0
 1410 00d6 FFF7FEFF 		bl	Pin_Red_Write
 1411              	.L61:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 31


 265:.\main.c      ****         }
 266:.\main.c      ****         if (samlet_grader>90)
 1412              		.loc 1 266 0
 1413 00da 294B     		ldr	r3, .L64+40
 1414 00dc 1B88     		ldrh	r3, [r3]
 1415 00de 1BB2     		sxth	r3, r3
 1416 00e0 5A2B     		cmp	r3, #90
 1417 00e2 05DD     		ble	.L62
 267:.\main.c      ****         {
 268:.\main.c      ****             Pin_Red_Write(LED_OFF);
 1418              		.loc 1 268 0
 1419 00e4 0120     		mov	r0, #1
 1420 00e6 FFF7FEFF 		bl	Pin_Red_Write
 269:.\main.c      ****             Pin_Green_Write(LED_ON);
 1421              		.loc 1 269 0
 1422 00ea 0020     		mov	r0, #0
 1423 00ec FFF7FEFF 		bl	Pin_Green_Write
 1424              	.L62:
 270:.\main.c      ****         }
 271:.\main.c      ****         if (k==1)
 1425              		.loc 1 271 0
 1426 00f0 244B     		ldr	r3, .L64+44
 1427 00f2 1B88     		ldrh	r3, [r3]
 1428 00f4 1BB2     		sxth	r3, r3
 1429 00f6 012B     		cmp	r3, #1
 1430 00f8 05D1     		bne	.L63
 272:.\main.c      ****         {
 273:.\main.c      ****            Pin_Red_Write(LED_OFF);
 1431              		.loc 1 273 0
 1432 00fa 0120     		mov	r0, #1
 1433 00fc FFF7FEFF 		bl	Pin_Red_Write
 274:.\main.c      ****            Pin_Green_Write(LED_OFF);
 1434              		.loc 1 274 0
 1435 0100 0120     		mov	r0, #1
 1436 0102 FFF7FEFF 		bl	Pin_Green_Write
 1437              	.L63:
 275:.\main.c      ****         }
 276:.\main.c      ****         
 277:.\main.c      ****         /* EMG */
 278:.\main.c      ****         low_pass_data = low_pass_filter(EMG);        
 1438              		.loc 1 278 0
 1439 0106 184B     		ldr	r3, .L64+16
 1440 0108 1B88     		ldrh	r3, [r3]
 1441 010a 1BB2     		sxth	r3, r3
 1442 010c 181C     		mov	r0, r3
 1443 010e FFF7FEFF 		bl	low_pass_filter
 1444 0112 031C     		mov	r3, r0
 1445 0114 9AB2     		uxth	r2, r3
 1446 0116 1C4B     		ldr	r3, .L64+48
 1447 0118 1A80     		strh	r2, [r3]
 279:.\main.c      ****         diff_data = differentiator(low_pass_data);
 1448              		.loc 1 279 0
 1449 011a 1B4B     		ldr	r3, .L64+48
 1450 011c 1B88     		ldrh	r3, [r3]
 1451 011e 1BB2     		sxth	r3, r3
 1452 0120 181C     		mov	r0, r3
 1453 0122 FFF7FEFF 		bl	differentiator
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 32


 1454 0126 031C     		mov	r3, r0
 1455 0128 9AB2     		uxth	r2, r3
 1456 012a 184B     		ldr	r3, .L64+52
 1457 012c 1A80     		strh	r2, [r3]
 280:.\main.c      ****             
 281:.\main.c      ****         
 282:.\main.c      ****         UART_UartPutChar(samlet_grader);                //plottes tilbage i MATLAB
 1458              		.loc 1 282 0
 1459 012e 144B     		ldr	r3, .L64+40
 1460 0130 1B88     		ldrh	r3, [r3]
 1461 0132 1BB2     		sxth	r3, r3
 1462 0134 181C     		mov	r0, r3
 1463 0136 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 283:.\main.c      ****         UART_UartPutChar(samlet_grader>>8);
 1464              		.loc 1 283 0
 1465 013a 114B     		ldr	r3, .L64+40
 1466 013c 1B88     		ldrh	r3, [r3]
 1467 013e 1BB2     		sxth	r3, r3
 1468 0140 1B12     		asr	r3, r3, #8
 1469 0142 9BB2     		uxth	r3, r3
 1470 0144 1BB2     		sxth	r3, r3
 1471 0146 181C     		mov	r0, r3
 1472 0148 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 284:.\main.c      ****       
 285:.\main.c      ****        
 286:.\main.c      ****         //UART_UartPutChar(counter);             
 287:.\main.c      ****         //UART_UartPutChar(counter>>8);
 288:.\main.c      ****         
 289:.\main.c      ****         //UART_UartPutChar(diff_data);
 290:.\main.c      ****         //UART_UartPutChar(diff_data>>8);
 291:.\main.c      ****         
 292:.\main.c      ****         data_ready = FALSE;
 1473              		.loc 1 292 0
 1474 014c 074B     		ldr	r3, .L64+20
 1475 014e 0022     		mov	r2, #0
 1476 0150 1A70     		strb	r2, [r3]
 1477              	.L59:
 293:.\main.c      ****     }
 294:.\main.c      **** }
 1478              		.loc 1 294 0
 1479 0152 BD46     		mov	sp, r7
 1480              		@ sp needed
 1481 0154 80BD     		pop	{r7, pc}
 1482              	.L65:
 1483 0156 C046     		.align	2
 1484              	.L64:
 1485 0158 15FCFFFF 		.word	-1003
 1486 015c 00000000 		.word	accroed
 1487 0160 34FCFFFF 		.word	-972
 1488 0164 00000000 		.word	accgroen
 1489 0168 00000000 		.word	EMG
 1490 016c 00000000 		.word	data_ready
 1491 0170 00000000 		.word	mav_data_roed
 1492 0174 00000000 		.word	grader_roed
 1493 0178 00000000 		.word	mav_data_groen
 1494 017c 00000000 		.word	grader_groen
 1495 0180 00000000 		.word	samlet_grader
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 33


 1496 0184 00000000 		.word	k
 1497 0188 00000000 		.word	low_pass_data
 1498 018c 00000000 		.word	diff_data
 1499              		.cfi_endproc
 1500              	.LFE44:
 1501              		.size	ADC_interrupt, .-ADC_interrupt
 1502              		.section	.text.Pin_SW2_handler,"ax",%progbits
 1503              		.align	2
 1504              		.global	Pin_SW2_handler
 1505              		.code	16
 1506              		.thumb_func
 1507              		.type	Pin_SW2_handler, %function
 1508              	Pin_SW2_handler:
 1509              	.LFB45:
 295:.\main.c      **** 
 296:.\main.c      **** CY_ISR(Pin_SW2_handler)
 297:.\main.c      **** {
 1510              		.loc 1 297 0
 1511              		.cfi_startproc
 1512 0000 80B5     		push	{r7, lr}
 1513              		.cfi_def_cfa_offset 8
 1514              		.cfi_offset 7, -8
 1515              		.cfi_offset 14, -4
 1516 0002 00AF     		add	r7, sp, #0
 1517              		.cfi_def_cfa_register 7
 298:.\main.c      ****     
 299:.\main.c      ****     if (j==0)
 1518              		.loc 1 299 0
 1519 0004 154B     		ldr	r3, .L69
 1520 0006 1B88     		ldrh	r3, [r3]
 1521 0008 002B     		cmp	r3, #0
 1522 000a 14D1     		bne	.L67
 300:.\main.c      ****     {
 301:.\main.c      ****         k=0;
 1523              		.loc 1 301 0
 1524 000c 144B     		ldr	r3, .L69+4
 1525 000e 0022     		mov	r2, #0
 1526 0010 1A80     		strh	r2, [r3]
 302:.\main.c      ****         Pin_Green_Write(LED_ON);
 1527              		.loc 1 302 0
 1528 0012 0020     		mov	r0, #0
 1529 0014 FFF7FEFF 		bl	Pin_Green_Write
 303:.\main.c      ****         Pin_Red_Write(LED_OFF);
 1530              		.loc 1 303 0
 1531 0018 0120     		mov	r0, #1
 1532 001a FFF7FEFF 		bl	Pin_Red_Write
 304:.\main.c      ****         ADC_StartConvert();
 1533              		.loc 1 304 0
 1534 001e FFF7FEFF 		bl	ADC_StartConvert
 305:.\main.c      ****         j++; 
 1535              		.loc 1 305 0
 1536 0022 0E4B     		ldr	r3, .L69
 1537 0024 1B88     		ldrh	r3, [r3]
 1538 0026 9BB2     		uxth	r3, r3
 1539 0028 9BB2     		uxth	r3, r3
 1540 002a 0133     		add	r3, r3, #1
 1541 002c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 34


 1542 002e 9AB2     		uxth	r2, r3
 1543 0030 0A4B     		ldr	r3, .L69
 1544 0032 1A80     		strh	r2, [r3]
 1545 0034 0DE0     		b	.L68
 1546              	.L67:
 306:.\main.c      ****     }
 307:.\main.c      ****     
 308:.\main.c      ****     else 
 309:.\main.c      ****     {
 310:.\main.c      ****         ADC_StopConvert();
 1547              		.loc 1 310 0
 1548 0036 FFF7FEFF 		bl	ADC_StopConvert
 311:.\main.c      ****         Pin_Red_Write(LED_OFF);
 1549              		.loc 1 311 0
 1550 003a 0120     		mov	r0, #1
 1551 003c FFF7FEFF 		bl	Pin_Red_Write
 312:.\main.c      ****         Pin_Green_Write(LED_OFF);
 1552              		.loc 1 312 0
 1553 0040 0120     		mov	r0, #1
 1554 0042 FFF7FEFF 		bl	Pin_Green_Write
 313:.\main.c      ****         j=0;
 1555              		.loc 1 313 0
 1556 0046 054B     		ldr	r3, .L69
 1557 0048 0022     		mov	r2, #0
 1558 004a 1A80     		strh	r2, [r3]
 314:.\main.c      ****         k=1;
 1559              		.loc 1 314 0
 1560 004c 044B     		ldr	r3, .L69+4
 1561 004e 0122     		mov	r2, #1
 1562 0050 1A80     		strh	r2, [r3]
 1563              	.L68:
 315:.\main.c      ****     }
 316:.\main.c      ****     
 317:.\main.c      ****     Pin_SW2_ClearInterrupt(); 
 1564              		.loc 1 317 0
 1565 0052 FFF7FEFF 		bl	Pin_SW2_ClearInterrupt
 318:.\main.c      **** }
 1566              		.loc 1 318 0
 1567 0056 BD46     		mov	sp, r7
 1568              		@ sp needed
 1569 0058 80BD     		pop	{r7, pc}
 1570              	.L70:
 1571 005a C046     		.align	2
 1572              	.L69:
 1573 005c 00000000 		.word	j
 1574 0060 00000000 		.word	k
 1575              		.cfi_endproc
 1576              	.LFE45:
 1577              		.size	Pin_SW2_handler, .-Pin_SW2_handler
 1578              		.section	.text.Timer_interrupt,"ax",%progbits
 1579              		.align	2
 1580              		.global	Timer_interrupt
 1581              		.code	16
 1582              		.thumb_func
 1583              		.type	Timer_interrupt, %function
 1584              	Timer_interrupt:
 1585              	.LFB46:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 35


 319:.\main.c      **** 
 320:.\main.c      **** CY_ISR(Timer_interrupt)
 321:.\main.c      **** {
 1586              		.loc 1 321 0
 1587              		.cfi_startproc
 1588 0000 80B5     		push	{r7, lr}
 1589              		.cfi_def_cfa_offset 8
 1590              		.cfi_offset 7, -8
 1591              		.cfi_offset 14, -4
 1592 0002 00AF     		add	r7, sp, #0
 1593              		.cfi_def_cfa_register 7
 322:.\main.c      ****     counter=Timer_1_ReadCapture();
 1594              		.loc 1 322 0
 1595 0004 FFF7FEFF 		bl	Timer_1_ReadCapture
 1596 0008 031C     		mov	r3, r0
 1597 000a 9AB2     		uxth	r2, r3
 1598 000c 014B     		ldr	r3, .L72
 1599 000e 1A80     		strh	r2, [r3]
 323:.\main.c      **** }
 1600              		.loc 1 323 0
 1601 0010 BD46     		mov	sp, r7
 1602              		@ sp needed
 1603 0012 80BD     		pop	{r7, pc}
 1604              	.L73:
 1605              		.align	2
 1606              	.L72:
 1607 0014 00000000 		.word	counter
 1608              		.cfi_endproc
 1609              	.LFE46:
 1610              		.size	Timer_interrupt, .-Timer_interrupt
 1611              		.section	.text.main,"ax",%progbits
 1612              		.align	2
 1613              		.global	main
 1614              		.code	16
 1615              		.thumb_func
 1616              		.type	main, %function
 1617              	main:
 1618              	.LFB47:
 324:.\main.c      **** 
 325:.\main.c      **** /***********************************Main***********************************/
 326:.\main.c      **** int main()
 327:.\main.c      **** {   
 1619              		.loc 1 327 0
 1620              		.cfi_startproc
 1621 0000 80B5     		push	{r7, lr}
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 00AF     		add	r7, sp, #0
 1626              		.cfi_def_cfa_register 7
 328:.\main.c      ****     pin_SW2_int_StartEx(Pin_SW2_handler);
 1627              		.loc 1 328 0
 1628 0004 0E4B     		ldr	r3, .L76
 1629 0006 181C     		mov	r0, r3
 1630 0008 FFF7FEFF 		bl	pin_SW2_int_StartEx
 329:.\main.c      ****     ADC_ISR_StartEx(ADC_interrupt);
 1631              		.loc 1 329 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 36


 1632 000c 0D4B     		ldr	r3, .L76+4
 1633 000e 181C     		mov	r0, r3
 1634 0010 FFF7FEFF 		bl	ADC_ISR_StartEx
 330:.\main.c      ****     Timer_ISR_StartEx(Timer_interrupt);
 1635              		.loc 1 330 0
 1636 0014 0C4B     		ldr	r3, .L76+8
 1637 0016 181C     		mov	r0, r3
 1638 0018 FFF7FEFF 		bl	Timer_ISR_StartEx
 331:.\main.c      ****     CyGlobalIntEnable;
 1639              		.loc 1 331 0
 1640              	@ 331 ".\main.c" 1
 1641 001c 62B6     		CPSIE   i
 1642              	@ 0 "" 2
 332:.\main.c      ****     UART_Start();                       /* Initialize ADC */    
 1643              		.loc 1 332 0
 1644              		.code	16
 1645 001e FFF7FEFF 		bl	UART_Start
 333:.\main.c      ****     ADC_Start();                        /* Initialize ADC */
 1646              		.loc 1 333 0
 1647 0022 FFF7FEFF 		bl	ADC_Start
 334:.\main.c      ****     Timer_1_Start();
 1648              		.loc 1 334 0
 1649 0026 FFF7FEFF 		bl	Timer_1_Start
 335:.\main.c      ****     Timer_ISR_Enable();
 1650              		.loc 1 335 0
 1651 002a FFF7FEFF 		bl	Timer_ISR_Enable
 336:.\main.c      ****     ADC_IRQ_Enable();                   /* Enable ADC interrupts */   
 1652              		.loc 1 336 0
 1653 002e FFF7FEFF 		bl	ADC_IRQ_Enable
 337:.\main.c      ****     CySysPmSleep();
 1654              		.loc 1 337 0
 1655 0032 FFF7FEFF 		bl	CySysPmSleep
 338:.\main.c      ****     return 0;  
 1656              		.loc 1 338 0
 1657 0036 0023     		mov	r3, #0
 339:.\main.c      **** }...
 1658              		.loc 1 339 0
 1659 0038 181C     		mov	r0, r3
 1660 003a BD46     		mov	sp, r7
 1661              		@ sp needed
 1662 003c 80BD     		pop	{r7, pc}
 1663              	.L77:
 1664 003e C046     		.align	2
 1665              	.L76:
 1666 0040 00000000 		.word	Pin_SW2_handler
 1667 0044 00000000 		.word	ADC_interrupt
 1668 0048 00000000 		.word	Timer_interrupt
 1669              		.cfi_endproc
 1670              	.LFE47:
 1671              		.size	main, .-main
 1672              		.text
 1673              	.Letext0:
 1674              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1675              		.section	.debug_info,"",%progbits
 1676              	.Ldebug_info0:
 1677 0000 5E040000 		.4byte	0x45e
 1678 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 37


 1679 0006 00000000 		.4byte	.Ldebug_abbrev0
 1680 000a 04       		.byte	0x4
 1681 000b 01       		.uleb128 0x1
 1682 000c 6E020000 		.4byte	.LASF54
 1683 0010 01       		.byte	0x1
 1684 0011 66000000 		.4byte	.LASF55
 1685 0015 F4000000 		.4byte	.LASF56
 1686 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1687 001d 00000000 		.4byte	0
 1688 0021 00000000 		.4byte	.Ldebug_line0
 1689 0025 02       		.uleb128 0x2
 1690 0026 01       		.byte	0x1
 1691 0027 06       		.byte	0x6
 1692 0028 5A000000 		.4byte	.LASF0
 1693 002c 02       		.uleb128 0x2
 1694 002d 01       		.byte	0x1
 1695 002e 08       		.byte	0x8
 1696 002f 99010000 		.4byte	.LASF1
 1697 0033 02       		.uleb128 0x2
 1698 0034 02       		.byte	0x2
 1699 0035 05       		.byte	0x5
 1700 0036 BD010000 		.4byte	.LASF2
 1701 003a 02       		.uleb128 0x2
 1702 003b 02       		.byte	0x2
 1703 003c 07       		.byte	0x7
 1704 003d E1000000 		.4byte	.LASF3
 1705 0041 02       		.uleb128 0x2
 1706 0042 04       		.byte	0x4
 1707 0043 05       		.byte	0x5
 1708 0044 6F000000 		.4byte	.LASF4
 1709 0048 02       		.uleb128 0x2
 1710 0049 04       		.byte	0x4
 1711 004a 07       		.byte	0x7
 1712 004b BD000000 		.4byte	.LASF5
 1713 004f 02       		.uleb128 0x2
 1714 0050 08       		.byte	0x8
 1715 0051 05       		.byte	0x5
 1716 0052 4C000000 		.4byte	.LASF6
 1717 0056 02       		.uleb128 0x2
 1718 0057 08       		.byte	0x8
 1719 0058 07       		.byte	0x7
 1720 0059 29000000 		.4byte	.LASF7
 1721 005d 03       		.uleb128 0x3
 1722 005e 04       		.byte	0x4
 1723 005f 05       		.byte	0x5
 1724 0060 696E7400 		.ascii	"int\000"
 1725 0064 02       		.uleb128 0x2
 1726 0065 04       		.byte	0x4
 1727 0066 07       		.byte	0x7
 1728 0067 B0000000 		.4byte	.LASF8
 1729 006b 04       		.uleb128 0x4
 1730 006c 78000000 		.4byte	.LASF9
 1731 0070 02       		.byte	0x2
 1732 0071 3801     		.2byte	0x138
 1733 0073 2C000000 		.4byte	0x2c
 1734 0077 04       		.uleb128 0x4
 1735 0078 96000000 		.4byte	.LASF10
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 38


 1736 007c 02       		.byte	0x2
 1737 007d 3A01     		.2byte	0x13a
 1738 007f 48000000 		.4byte	0x48
 1739 0083 04       		.uleb128 0x4
 1740 0084 5A020000 		.4byte	.LASF11
 1741 0088 02       		.byte	0x2
 1742 0089 3C01     		.2byte	0x13c
 1743 008b 33000000 		.4byte	0x33
 1744 008f 02       		.uleb128 0x2
 1745 0090 04       		.byte	0x4
 1746 0091 04       		.byte	0x4
 1747 0092 89010000 		.4byte	.LASF12
 1748 0096 02       		.uleb128 0x2
 1749 0097 08       		.byte	0x8
 1750 0098 04       		.byte	0x4
 1751 0099 8F000000 		.4byte	.LASF13
 1752 009d 02       		.uleb128 0x2
 1753 009e 01       		.byte	0x1
 1754 009f 08       		.byte	0x8
 1755 00a0 FC010000 		.4byte	.LASF14
 1756 00a4 02       		.uleb128 0x2
 1757 00a5 04       		.byte	0x4
 1758 00a6 07       		.byte	0x7
 1759 00a7 45010000 		.4byte	.LASF15
 1760 00ab 05       		.uleb128 0x5
 1761 00ac 01020000 		.4byte	.LASF16
 1762 00b0 01       		.byte	0x1
 1763 00b1 32       		.byte	0x32
 1764 00b2 5D000000 		.4byte	0x5d
 1765 00b6 00000000 		.4byte	.LFB37
 1766 00ba 5C000000 		.4byte	.LFE37-.LFB37
 1767 00be 01       		.uleb128 0x1
 1768 00bf 9C       		.byte	0x9c
 1769 00c0 D1000000 		.4byte	0xd1
 1770 00c4 06       		.uleb128 0x6
 1771 00c5 7900     		.ascii	"y\000"
 1772 00c7 01       		.byte	0x1
 1773 00c8 32       		.byte	0x32
 1774 00c9 96000000 		.4byte	0x96
 1775 00cd 02       		.uleb128 0x2
 1776 00ce 91       		.byte	0x91
 1777 00cf 68       		.sleb128 -24
 1778 00d0 00       		.byte	0
 1779 00d1 05       		.uleb128 0x5
 1780 00d2 2B020000 		.4byte	.LASF17
 1781 00d6 01       		.byte	0x1
 1782 00d7 3B       		.byte	0x3b
 1783 00d8 5D000000 		.4byte	0x5d
 1784 00dc 00000000 		.4byte	.LFB38
 1785 00e0 04010000 		.4byte	.LFE38-.LFB38
 1786 00e4 01       		.uleb128 0x1
 1787 00e5 9C       		.byte	0x9c
 1788 00e6 F9000000 		.4byte	0xf9
 1789 00ea 07       		.uleb128 0x7
 1790 00eb CF000000 		.4byte	.LASF18
 1791 00ef 01       		.byte	0x1
 1792 00f0 3B       		.byte	0x3b
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 39


 1793 00f1 5D000000 		.4byte	0x5d
 1794 00f5 02       		.uleb128 0x2
 1795 00f6 91       		.byte	0x91
 1796 00f7 6C       		.sleb128 -20
 1797 00f8 00       		.byte	0
 1798 00f9 05       		.uleb128 0x5
 1799 00fa D4000000 		.4byte	.LASF19
 1800 00fe 01       		.byte	0x1
 1801 00ff 4F       		.byte	0x4f
 1802 0100 5D000000 		.4byte	0x5d
 1803 0104 00000000 		.4byte	.LFB39
 1804 0108 0C010000 		.4byte	.LFE39-.LFB39
 1805 010c 01       		.uleb128 0x1
 1806 010d 9C       		.byte	0x9c
 1807 010e 21010000 		.4byte	0x121
 1808 0112 07       		.uleb128 0x7
 1809 0113 CF000000 		.4byte	.LASF18
 1810 0117 01       		.byte	0x1
 1811 0118 4F       		.byte	0x4f
 1812 0119 5D000000 		.4byte	0x5d
 1813 011d 02       		.uleb128 0x2
 1814 011e 91       		.byte	0x91
 1815 011f 6C       		.sleb128 -20
 1816 0120 00       		.byte	0
 1817 0121 05       		.uleb128 0x5
 1818 0122 DC010000 		.4byte	.LASF20
 1819 0126 01       		.byte	0x1
 1820 0127 63       		.byte	0x63
 1821 0128 5D000000 		.4byte	0x5d
 1822 012c 00000000 		.4byte	.LFB40
 1823 0130 24010000 		.4byte	.LFE40-.LFB40
 1824 0134 01       		.uleb128 0x1
 1825 0135 9C       		.byte	0x9c
 1826 0136 55010000 		.4byte	0x155
 1827 013a 07       		.uleb128 0x7
 1828 013b CF000000 		.4byte	.LASF18
 1829 013f 01       		.byte	0x1
 1830 0140 63       		.byte	0x63
 1831 0141 5D000000 		.4byte	0x5d
 1832 0145 02       		.uleb128 0x2
 1833 0146 91       		.byte	0x91
 1834 0147 64       		.sleb128 -28
 1835 0148 08       		.uleb128 0x8
 1836 0149 6900     		.ascii	"i\000"
 1837 014b 01       		.byte	0x1
 1838 014c 65       		.byte	0x65
 1839 014d 5D000000 		.4byte	0x5d
 1840 0151 02       		.uleb128 0x2
 1841 0152 91       		.byte	0x91
 1842 0153 6C       		.sleb128 -20
 1843 0154 00       		.byte	0
 1844 0155 05       		.uleb128 0x5
 1845 0156 39010000 		.4byte	.LASF21
 1846 015a 01       		.byte	0x1
 1847 015b 7F       		.byte	0x7f
 1848 015c 5D000000 		.4byte	0x5d
 1849 0160 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 40


 1850 0164 1C010000 		.4byte	.LFE41-.LFB41
 1851 0168 01       		.uleb128 0x1
 1852 0169 9C       		.byte	0x9c
 1853 016a 7D010000 		.4byte	0x17d
 1854 016e 07       		.uleb128 0x7
 1855 016f CF000000 		.4byte	.LASF18
 1856 0173 01       		.byte	0x1
 1857 0174 7F       		.byte	0x7f
 1858 0175 5D000000 		.4byte	0x5d
 1859 0179 02       		.uleb128 0x2
 1860 017a 91       		.byte	0x91
 1861 017b 74       		.sleb128 -12
 1862 017c 00       		.byte	0
 1863 017d 05       		.uleb128 0x5
 1864 017e CF010000 		.4byte	.LASF22
 1865 0182 01       		.byte	0x1
 1866 0183 A8       		.byte	0xa8
 1867 0184 5D000000 		.4byte	0x5d
 1868 0188 00000000 		.4byte	.LFB42
 1869 018c 1A010000 		.4byte	.LFE42-.LFB42
 1870 0190 01       		.uleb128 0x1
 1871 0191 9C       		.byte	0x9c
 1872 0192 A5010000 		.4byte	0x1a5
 1873 0196 07       		.uleb128 0x7
 1874 0197 CF000000 		.4byte	.LASF18
 1875 019b 01       		.byte	0x1
 1876 019c A8       		.byte	0xa8
 1877 019d 5D000000 		.4byte	0x5d
 1878 01a1 02       		.uleb128 0x2
 1879 01a2 91       		.byte	0x91
 1880 01a3 74       		.sleb128 -12
 1881 01a4 00       		.byte	0
 1882 01a5 05       		.uleb128 0x5
 1883 01a6 FC020000 		.4byte	.LASF23
 1884 01aa 01       		.byte	0x1
 1885 01ab D3       		.byte	0xd3
 1886 01ac 5D000000 		.4byte	0x5d
 1887 01b0 00000000 		.4byte	.LFB43
 1888 01b4 9C000000 		.4byte	.LFE43-.LFB43
 1889 01b8 01       		.uleb128 0x1
 1890 01b9 9C       		.byte	0x9c
 1891 01ba CD010000 		.4byte	0x1cd
 1892 01be 06       		.uleb128 0x6
 1893 01bf 6E657700 		.ascii	"new\000"
 1894 01c3 01       		.byte	0x1
 1895 01c4 D3       		.byte	0xd3
 1896 01c5 5D000000 		.4byte	0x5d
 1897 01c9 02       		.uleb128 0x2
 1898 01ca 91       		.byte	0x91
 1899 01cb 6C       		.sleb128 -20
 1900 01cc 00       		.byte	0
 1901 01cd 09       		.uleb128 0x9
 1902 01ce 37020000 		.4byte	.LASF24
 1903 01d2 01       		.byte	0x1
 1904 01d3 ED       		.byte	0xed
 1905 01d4 00000000 		.4byte	.LFB44
 1906 01d8 90010000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 41


 1907 01dc 01       		.uleb128 0x1
 1908 01dd 9C       		.byte	0x9c
 1909 01de 0A       		.uleb128 0xa
 1910 01df EC010000 		.4byte	.LASF25
 1911 01e3 01       		.byte	0x1
 1912 01e4 2801     		.2byte	0x128
 1913 01e6 00000000 		.4byte	.LFB45
 1914 01ea 64000000 		.4byte	.LFE45-.LFB45
 1915 01ee 01       		.uleb128 0x1
 1916 01ef 9C       		.byte	0x9c
 1917 01f0 0A       		.uleb128 0xa
 1918 01f1 A7010000 		.4byte	.LASF26
 1919 01f5 01       		.byte	0x1
 1920 01f6 4001     		.2byte	0x140
 1921 01f8 00000000 		.4byte	.LFB46
 1922 01fc 18000000 		.4byte	.LFE46-.LFB46
 1923 0200 01       		.uleb128 0x1
 1924 0201 9C       		.byte	0x9c
 1925 0202 0B       		.uleb128 0xb
 1926 0203 0B030000 		.4byte	.LASF27
 1927 0207 01       		.byte	0x1
 1928 0208 4601     		.2byte	0x146
 1929 020a 5D000000 		.4byte	0x5d
 1930 020e 00000000 		.4byte	.LFB47
 1931 0212 4C000000 		.4byte	.LFE47-.LFB47
 1932 0216 01       		.uleb128 0x1
 1933 0217 9C       		.byte	0x9c
 1934 0218 0C       		.uleb128 0xc
 1935 0219 96000000 		.4byte	0x96
 1936 021d 28020000 		.4byte	0x228
 1937 0221 0D       		.uleb128 0xd
 1938 0222 A4000000 		.4byte	0xa4
 1939 0226 09       		.byte	0x9
 1940 0227 00       		.byte	0
 1941 0228 0E       		.uleb128 0xe
 1942 0229 45000000 		.4byte	.LASF28
 1943 022d 01       		.byte	0x1
 1944 022e 0D       		.byte	0xd
 1945 022f 18020000 		.4byte	0x218
 1946 0233 05       		.uleb128 0x5
 1947 0234 03       		.byte	0x3
 1948 0235 00000000 		.4byte	x_mavg
 1949 0239 0E       		.uleb128 0xe
 1950 023a 88000000 		.4byte	.LASF29
 1951 023e 01       		.byte	0x1
 1952 023f 0E       		.byte	0xe
 1953 0240 96000000 		.4byte	0x96
 1954 0244 05       		.uleb128 0x5
 1955 0245 03       		.byte	0x3
 1956 0246 00000000 		.4byte	y_mavg
 1957 024a 0E       		.uleb128 0xe
 1958 024b A9000000 		.4byte	.LASF30
 1959 024f 01       		.byte	0x1
 1960 0250 0F       		.byte	0xf
 1961 0251 18020000 		.4byte	0x218
 1962 0255 05       		.uleb128 0x5
 1963 0256 03       		.byte	0x3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 42


 1964 0257 00000000 		.4byte	b_mavg
 1965 025b 0E       		.uleb128 0xe
 1966 025c 68010000 		.4byte	.LASF31
 1967 0260 01       		.byte	0x1
 1968 0261 14       		.byte	0x14
 1969 0262 18020000 		.4byte	0x218
 1970 0266 05       		.uleb128 0x5
 1971 0267 03       		.byte	0x3
 1972 0268 00000000 		.4byte	x2_mavg
 1973 026c 0E       		.uleb128 0xe
 1974 026d 10000000 		.4byte	.LASF32
 1975 0271 01       		.byte	0x1
 1976 0272 15       		.byte	0x15
 1977 0273 96000000 		.4byte	0x96
 1978 0277 05       		.uleb128 0x5
 1979 0278 03       		.byte	0x3
 1980 0279 00000000 		.4byte	y2_mavg
 1981 027d 0E       		.uleb128 0xe
 1982 027e 45020000 		.4byte	.LASF33
 1983 0282 01       		.byte	0x1
 1984 0283 16       		.byte	0x16
 1985 0284 18020000 		.4byte	0x218
 1986 0288 05       		.uleb128 0x5
 1987 0289 03       		.byte	0x3
 1988 028a 00000000 		.4byte	b2_mavg
 1989 028e 0C       		.uleb128 0xc
 1990 028f 96000000 		.4byte	0x96
 1991 0293 9E020000 		.4byte	0x29e
 1992 0297 0D       		.uleb128 0xd
 1993 0298 A4000000 		.4byte	0xa4
 1994 029c 02       		.byte	0x2
 1995 029d 00       		.byte	0
 1996 029e 0E       		.uleb128 0xe
 1997 029f 0A000000 		.4byte	.LASF34
 1998 02a3 01       		.byte	0x1
 1999 02a4 1A       		.byte	0x1a
 2000 02a5 8E020000 		.4byte	0x28e
 2001 02a9 05       		.uleb128 0x5
 2002 02aa 03       		.byte	0x3
 2003 02ab 00000000 		.4byte	x_low
 2004 02af 0E       		.uleb128 0xe
 2005 02b0 B7010000 		.4byte	.LASF35
 2006 02b4 01       		.byte	0x1
 2007 02b5 1B       		.byte	0x1b
 2008 02b6 8E020000 		.4byte	0x28e
 2009 02ba 05       		.uleb128 0x5
 2010 02bb 03       		.byte	0x3
 2011 02bc 00000000 		.4byte	y_low
 2012 02c0 0E       		.uleb128 0xe
 2013 02c1 A3000000 		.4byte	.LASF36
 2014 02c5 01       		.byte	0x1
 2015 02c6 1C       		.byte	0x1c
 2016 02c7 8E020000 		.4byte	0x28e
 2017 02cb 05       		.uleb128 0x5
 2018 02cc 03       		.byte	0x3
 2019 02cd 00000000 		.4byte	b_low
 2020 02d1 0E       		.uleb128 0xe
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 43


 2021 02d2 9D000000 		.4byte	.LASF37
 2022 02d6 01       		.byte	0x1
 2023 02d7 1D       		.byte	0x1d
 2024 02d8 8E020000 		.4byte	0x28e
 2025 02dc 05       		.uleb128 0x5
 2026 02dd 03       		.byte	0x3
 2027 02de 00000000 		.4byte	a_low
 2028 02e2 0E       		.uleb128 0xe
 2029 02e3 18000000 		.4byte	.LASF38
 2030 02e7 01       		.byte	0x1
 2031 02e8 1F       		.byte	0x1f
 2032 02e9 83000000 		.4byte	0x83
 2033 02ed 05       		.uleb128 0x5
 2034 02ee 03       		.byte	0x3
 2035 02ef 00000000 		.4byte	value_in
 2036 02f3 0C       		.uleb128 0xc
 2037 02f4 83000000 		.4byte	0x83
 2038 02f8 03030000 		.4byte	0x303
 2039 02fc 0D       		.uleb128 0xd
 2040 02fd A4000000 		.4byte	0xa4
 2041 0301 01       		.byte	0x1
 2042 0302 00       		.byte	0
 2043 0303 0E       		.uleb128 0xe
 2044 0304 7E000000 		.4byte	.LASF39
 2045 0308 01       		.byte	0x1
 2046 0309 1F       		.byte	0x1f
 2047 030a F3020000 		.4byte	0x2f3
 2048 030e 05       		.uleb128 0x5
 2049 030f 03       		.byte	0x3
 2050 0310 00000000 		.4byte	value_out
 2051 0314 0F       		.uleb128 0xf
 2052 0315 6900     		.ascii	"i\000"
 2053 0317 01       		.byte	0x1
 2054 0318 1F       		.byte	0x1f
 2055 0319 83000000 		.4byte	0x83
 2056 031d 05       		.uleb128 0x5
 2057 031e 03       		.byte	0x3
 2058 031f 00000000 		.4byte	i
 2059 0323 0F       		.uleb128 0xf
 2060 0324 6A00     		.ascii	"j\000"
 2061 0326 01       		.byte	0x1
 2062 0327 1F       		.byte	0x1f
 2063 0328 83000000 		.4byte	0x83
 2064 032c 05       		.uleb128 0x5
 2065 032d 03       		.byte	0x3
 2066 032e 00000000 		.4byte	j
 2067 0332 0F       		.uleb128 0xf
 2068 0333 6B00     		.ascii	"k\000"
 2069 0335 01       		.byte	0x1
 2070 0336 1F       		.byte	0x1f
 2071 0337 83000000 		.4byte	0x83
 2072 033b 05       		.uleb128 0x5
 2073 033c 03       		.byte	0x3
 2074 033d 00000000 		.4byte	k
 2075 0341 0E       		.uleb128 0xe
 2076 0342 4D020000 		.4byte	.LASF40
 2077 0346 01       		.byte	0x1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 44


 2078 0347 1F       		.byte	0x1f
 2079 0348 83000000 		.4byte	0x83
 2080 034c 05       		.uleb128 0x5
 2081 034d 03       		.byte	0x3
 2082 034e 00000000 		.4byte	grader_groen
 2083 0352 0E       		.uleb128 0xe
 2084 0353 5C010000 		.4byte	.LASF41
 2085 0357 01       		.byte	0x1
 2086 0358 1F       		.byte	0x1f
 2087 0359 83000000 		.4byte	0x83
 2088 035d 05       		.uleb128 0x5
 2089 035e 03       		.byte	0x3
 2090 035f 00000000 		.4byte	grader_roed
 2091 0363 0E       		.uleb128 0xe
 2092 0364 40000000 		.4byte	.LASF42
 2093 0368 01       		.byte	0x1
 2094 0369 1F       		.byte	0x1f
 2095 036a 83000000 		.4byte	0x83
 2096 036e 05       		.uleb128 0x5
 2097 036f 03       		.byte	0x3
 2098 0370 00000000 		.4byte	diff
 2099 0374 0F       		.uleb128 0xf
 2100 0375 6F6C6400 		.ascii	"old\000"
 2101 0379 01       		.byte	0x1
 2102 037a 1F       		.byte	0x1f
 2103 037b 83000000 		.4byte	0x83
 2104 037f 05       		.uleb128 0x5
 2105 0380 03       		.byte	0x3
 2106 0381 00000000 		.4byte	old
 2107 0385 0E       		.uleb128 0xe
 2108 0386 C7010000 		.4byte	.LASF43
 2109 038a 01       		.byte	0x1
 2110 038b 1F       		.byte	0x1f
 2111 038c 83000000 		.4byte	0x83
 2112 0390 05       		.uleb128 0x5
 2113 0391 03       		.byte	0x3
 2114 0392 00000000 		.4byte	counter
 2115 0396 0E       		.uleb128 0xe
 2116 0397 8F010000 		.4byte	.LASF44
 2117 039b 01       		.byte	0x1
 2118 039c 20       		.byte	0x20
 2119 039d 9D000000 		.4byte	0x9d
 2120 03a1 05       		.uleb128 0x5
 2121 03a2 03       		.byte	0x3
 2122 03a3 00000000 		.4byte	FirstCall
 2123 03a7 0E       		.uleb128 0xe
 2124 03a8 21000000 		.4byte	.LASF45
 2125 03ac 01       		.byte	0x1
 2126 03ad 22       		.byte	0x22
 2127 03ae 83000000 		.4byte	0x83
 2128 03b2 05       		.uleb128 0x5
 2129 03b3 03       		.byte	0x3
 2130 03b4 00000000 		.4byte	accroed
 2131 03b8 0E       		.uleb128 0xe
 2132 03b9 22020000 		.4byte	.LASF46
 2133 03bd 01       		.byte	0x1
 2134 03be 23       		.byte	0x23
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 45


 2135 03bf 83000000 		.4byte	0x83
 2136 03c3 05       		.uleb128 0x5
 2137 03c4 03       		.byte	0x3
 2138 03c5 00000000 		.4byte	accgroen
 2139 03c9 0F       		.uleb128 0xf
 2140 03ca 454D4700 		.ascii	"EMG\000"
 2141 03ce 01       		.byte	0x1
 2142 03cf 24       		.byte	0x24
 2143 03d0 83000000 		.4byte	0x83
 2144 03d4 05       		.uleb128 0x5
 2145 03d5 03       		.byte	0x3
 2146 03d6 00000000 		.4byte	EMG
 2147 03da 0C       		.uleb128 0xc
 2148 03db 83000000 		.4byte	0x83
 2149 03df EA030000 		.4byte	0x3ea
 2150 03e3 0D       		.uleb128 0xd
 2151 03e4 A4000000 		.4byte	0xa4
 2152 03e8 02       		.byte	0x2
 2153 03e9 00       		.byte	0
 2154 03ea 0E       		.uleb128 0xe
 2155 03eb 10030000 		.4byte	.LASF47
 2156 03ef 01       		.byte	0x1
 2157 03f0 25       		.byte	0x25
 2158 03f1 DA030000 		.4byte	0x3da
 2159 03f5 05       		.uleb128 0x5
 2160 03f6 03       		.byte	0x3
 2161 03f7 00000000 		.4byte	result
 2162 03fb 0E       		.uleb128 0xe
 2163 03fc 7E010000 		.4byte	.LASF48
 2164 0400 01       		.byte	0x1
 2165 0401 26       		.byte	0x26
 2166 0402 6B000000 		.4byte	0x6b
 2167 0406 05       		.uleb128 0x5
 2168 0407 03       		.byte	0x3
 2169 0408 00000000 		.4byte	data_ready
 2170 040c 0E       		.uleb128 0xe
 2171 040d 70010000 		.4byte	.LASF49
 2172 0411 01       		.byte	0x1
 2173 0412 28       		.byte	0x28
 2174 0413 83000000 		.4byte	0x83
 2175 0417 05       		.uleb128 0x5
 2176 0418 03       		.byte	0x3
 2177 0419 00000000 		.4byte	mav_data_roed
 2178 041d 0E       		.uleb128 0xe
 2179 041e 13020000 		.4byte	.LASF50
 2180 0422 01       		.byte	0x1
 2181 0423 29       		.byte	0x29
 2182 0424 83000000 		.4byte	0x83
 2183 0428 05       		.uleb128 0x5
 2184 0429 03       		.byte	0x3
 2185 042a 00000000 		.4byte	mav_data_groen
 2186 042e 0E       		.uleb128 0xe
 2187 042f 4E010000 		.4byte	.LASF51
 2188 0433 01       		.byte	0x1
 2189 0434 2A       		.byte	0x2a
 2190 0435 83000000 		.4byte	0x83
 2191 0439 05       		.uleb128 0x5
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 46


 2192 043a 03       		.byte	0x3
 2193 043b 00000000 		.4byte	samlet_grader
 2194 043f 0E       		.uleb128 0xe
 2195 0440 60020000 		.4byte	.LASF52
 2196 0444 01       		.byte	0x1
 2197 0445 2B       		.byte	0x2b
 2198 0446 83000000 		.4byte	0x83
 2199 044a 05       		.uleb128 0x5
 2200 044b 03       		.byte	0x3
 2201 044c 00000000 		.4byte	low_pass_data
 2202 0450 0E       		.uleb128 0xe
 2203 0451 00000000 		.4byte	.LASF53
 2204 0455 01       		.byte	0x1
 2205 0456 2C       		.byte	0x2c
 2206 0457 83000000 		.4byte	0x83
 2207 045b 05       		.uleb128 0x5
 2208 045c 03       		.byte	0x3
 2209 045d 00000000 		.4byte	diff_data
 2210 0461 00       		.byte	0
 2211              		.section	.debug_abbrev,"",%progbits
 2212              	.Ldebug_abbrev0:
 2213 0000 01       		.uleb128 0x1
 2214 0001 11       		.uleb128 0x11
 2215 0002 01       		.byte	0x1
 2216 0003 25       		.uleb128 0x25
 2217 0004 0E       		.uleb128 0xe
 2218 0005 13       		.uleb128 0x13
 2219 0006 0B       		.uleb128 0xb
 2220 0007 03       		.uleb128 0x3
 2221 0008 0E       		.uleb128 0xe
 2222 0009 1B       		.uleb128 0x1b
 2223 000a 0E       		.uleb128 0xe
 2224 000b 55       		.uleb128 0x55
 2225 000c 17       		.uleb128 0x17
 2226 000d 11       		.uleb128 0x11
 2227 000e 01       		.uleb128 0x1
 2228 000f 10       		.uleb128 0x10
 2229 0010 17       		.uleb128 0x17
 2230 0011 00       		.byte	0
 2231 0012 00       		.byte	0
 2232 0013 02       		.uleb128 0x2
 2233 0014 24       		.uleb128 0x24
 2234 0015 00       		.byte	0
 2235 0016 0B       		.uleb128 0xb
 2236 0017 0B       		.uleb128 0xb
 2237 0018 3E       		.uleb128 0x3e
 2238 0019 0B       		.uleb128 0xb
 2239 001a 03       		.uleb128 0x3
 2240 001b 0E       		.uleb128 0xe
 2241 001c 00       		.byte	0
 2242 001d 00       		.byte	0
 2243 001e 03       		.uleb128 0x3
 2244 001f 24       		.uleb128 0x24
 2245 0020 00       		.byte	0
 2246 0021 0B       		.uleb128 0xb
 2247 0022 0B       		.uleb128 0xb
 2248 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 47


 2249 0024 0B       		.uleb128 0xb
 2250 0025 03       		.uleb128 0x3
 2251 0026 08       		.uleb128 0x8
 2252 0027 00       		.byte	0
 2253 0028 00       		.byte	0
 2254 0029 04       		.uleb128 0x4
 2255 002a 16       		.uleb128 0x16
 2256 002b 00       		.byte	0
 2257 002c 03       		.uleb128 0x3
 2258 002d 0E       		.uleb128 0xe
 2259 002e 3A       		.uleb128 0x3a
 2260 002f 0B       		.uleb128 0xb
 2261 0030 3B       		.uleb128 0x3b
 2262 0031 05       		.uleb128 0x5
 2263 0032 49       		.uleb128 0x49
 2264 0033 13       		.uleb128 0x13
 2265 0034 00       		.byte	0
 2266 0035 00       		.byte	0
 2267 0036 05       		.uleb128 0x5
 2268 0037 2E       		.uleb128 0x2e
 2269 0038 01       		.byte	0x1
 2270 0039 3F       		.uleb128 0x3f
 2271 003a 19       		.uleb128 0x19
 2272 003b 03       		.uleb128 0x3
 2273 003c 0E       		.uleb128 0xe
 2274 003d 3A       		.uleb128 0x3a
 2275 003e 0B       		.uleb128 0xb
 2276 003f 3B       		.uleb128 0x3b
 2277 0040 0B       		.uleb128 0xb
 2278 0041 27       		.uleb128 0x27
 2279 0042 19       		.uleb128 0x19
 2280 0043 49       		.uleb128 0x49
 2281 0044 13       		.uleb128 0x13
 2282 0045 11       		.uleb128 0x11
 2283 0046 01       		.uleb128 0x1
 2284 0047 12       		.uleb128 0x12
 2285 0048 06       		.uleb128 0x6
 2286 0049 40       		.uleb128 0x40
 2287 004a 18       		.uleb128 0x18
 2288 004b 9642     		.uleb128 0x2116
 2289 004d 19       		.uleb128 0x19
 2290 004e 01       		.uleb128 0x1
 2291 004f 13       		.uleb128 0x13
 2292 0050 00       		.byte	0
 2293 0051 00       		.byte	0
 2294 0052 06       		.uleb128 0x6
 2295 0053 05       		.uleb128 0x5
 2296 0054 00       		.byte	0
 2297 0055 03       		.uleb128 0x3
 2298 0056 08       		.uleb128 0x8
 2299 0057 3A       		.uleb128 0x3a
 2300 0058 0B       		.uleb128 0xb
 2301 0059 3B       		.uleb128 0x3b
 2302 005a 0B       		.uleb128 0xb
 2303 005b 49       		.uleb128 0x49
 2304 005c 13       		.uleb128 0x13
 2305 005d 02       		.uleb128 0x2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 48


 2306 005e 18       		.uleb128 0x18
 2307 005f 00       		.byte	0
 2308 0060 00       		.byte	0
 2309 0061 07       		.uleb128 0x7
 2310 0062 05       		.uleb128 0x5
 2311 0063 00       		.byte	0
 2312 0064 03       		.uleb128 0x3
 2313 0065 0E       		.uleb128 0xe
 2314 0066 3A       		.uleb128 0x3a
 2315 0067 0B       		.uleb128 0xb
 2316 0068 3B       		.uleb128 0x3b
 2317 0069 0B       		.uleb128 0xb
 2318 006a 49       		.uleb128 0x49
 2319 006b 13       		.uleb128 0x13
 2320 006c 02       		.uleb128 0x2
 2321 006d 18       		.uleb128 0x18
 2322 006e 00       		.byte	0
 2323 006f 00       		.byte	0
 2324 0070 08       		.uleb128 0x8
 2325 0071 34       		.uleb128 0x34
 2326 0072 00       		.byte	0
 2327 0073 03       		.uleb128 0x3
 2328 0074 08       		.uleb128 0x8
 2329 0075 3A       		.uleb128 0x3a
 2330 0076 0B       		.uleb128 0xb
 2331 0077 3B       		.uleb128 0x3b
 2332 0078 0B       		.uleb128 0xb
 2333 0079 49       		.uleb128 0x49
 2334 007a 13       		.uleb128 0x13
 2335 007b 02       		.uleb128 0x2
 2336 007c 18       		.uleb128 0x18
 2337 007d 00       		.byte	0
 2338 007e 00       		.byte	0
 2339 007f 09       		.uleb128 0x9
 2340 0080 2E       		.uleb128 0x2e
 2341 0081 00       		.byte	0
 2342 0082 3F       		.uleb128 0x3f
 2343 0083 19       		.uleb128 0x19
 2344 0084 03       		.uleb128 0x3
 2345 0085 0E       		.uleb128 0xe
 2346 0086 3A       		.uleb128 0x3a
 2347 0087 0B       		.uleb128 0xb
 2348 0088 3B       		.uleb128 0x3b
 2349 0089 0B       		.uleb128 0xb
 2350 008a 27       		.uleb128 0x27
 2351 008b 19       		.uleb128 0x19
 2352 008c 11       		.uleb128 0x11
 2353 008d 01       		.uleb128 0x1
 2354 008e 12       		.uleb128 0x12
 2355 008f 06       		.uleb128 0x6
 2356 0090 40       		.uleb128 0x40
 2357 0091 18       		.uleb128 0x18
 2358 0092 9642     		.uleb128 0x2116
 2359 0094 19       		.uleb128 0x19
 2360 0095 00       		.byte	0
 2361 0096 00       		.byte	0
 2362 0097 0A       		.uleb128 0xa
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 49


 2363 0098 2E       		.uleb128 0x2e
 2364 0099 00       		.byte	0
 2365 009a 3F       		.uleb128 0x3f
 2366 009b 19       		.uleb128 0x19
 2367 009c 03       		.uleb128 0x3
 2368 009d 0E       		.uleb128 0xe
 2369 009e 3A       		.uleb128 0x3a
 2370 009f 0B       		.uleb128 0xb
 2371 00a0 3B       		.uleb128 0x3b
 2372 00a1 05       		.uleb128 0x5
 2373 00a2 27       		.uleb128 0x27
 2374 00a3 19       		.uleb128 0x19
 2375 00a4 11       		.uleb128 0x11
 2376 00a5 01       		.uleb128 0x1
 2377 00a6 12       		.uleb128 0x12
 2378 00a7 06       		.uleb128 0x6
 2379 00a8 40       		.uleb128 0x40
 2380 00a9 18       		.uleb128 0x18
 2381 00aa 9642     		.uleb128 0x2116
 2382 00ac 19       		.uleb128 0x19
 2383 00ad 00       		.byte	0
 2384 00ae 00       		.byte	0
 2385 00af 0B       		.uleb128 0xb
 2386 00b0 2E       		.uleb128 0x2e
 2387 00b1 00       		.byte	0
 2388 00b2 3F       		.uleb128 0x3f
 2389 00b3 19       		.uleb128 0x19
 2390 00b4 03       		.uleb128 0x3
 2391 00b5 0E       		.uleb128 0xe
 2392 00b6 3A       		.uleb128 0x3a
 2393 00b7 0B       		.uleb128 0xb
 2394 00b8 3B       		.uleb128 0x3b
 2395 00b9 05       		.uleb128 0x5
 2396 00ba 49       		.uleb128 0x49
 2397 00bb 13       		.uleb128 0x13
 2398 00bc 11       		.uleb128 0x11
 2399 00bd 01       		.uleb128 0x1
 2400 00be 12       		.uleb128 0x12
 2401 00bf 06       		.uleb128 0x6
 2402 00c0 40       		.uleb128 0x40
 2403 00c1 18       		.uleb128 0x18
 2404 00c2 9642     		.uleb128 0x2116
 2405 00c4 19       		.uleb128 0x19
 2406 00c5 00       		.byte	0
 2407 00c6 00       		.byte	0
 2408 00c7 0C       		.uleb128 0xc
 2409 00c8 01       		.uleb128 0x1
 2410 00c9 01       		.byte	0x1
 2411 00ca 49       		.uleb128 0x49
 2412 00cb 13       		.uleb128 0x13
 2413 00cc 01       		.uleb128 0x1
 2414 00cd 13       		.uleb128 0x13
 2415 00ce 00       		.byte	0
 2416 00cf 00       		.byte	0
 2417 00d0 0D       		.uleb128 0xd
 2418 00d1 21       		.uleb128 0x21
 2419 00d2 00       		.byte	0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 50


 2420 00d3 49       		.uleb128 0x49
 2421 00d4 13       		.uleb128 0x13
 2422 00d5 2F       		.uleb128 0x2f
 2423 00d6 0B       		.uleb128 0xb
 2424 00d7 00       		.byte	0
 2425 00d8 00       		.byte	0
 2426 00d9 0E       		.uleb128 0xe
 2427 00da 34       		.uleb128 0x34
 2428 00db 00       		.byte	0
 2429 00dc 03       		.uleb128 0x3
 2430 00dd 0E       		.uleb128 0xe
 2431 00de 3A       		.uleb128 0x3a
 2432 00df 0B       		.uleb128 0xb
 2433 00e0 3B       		.uleb128 0x3b
 2434 00e1 0B       		.uleb128 0xb
 2435 00e2 49       		.uleb128 0x49
 2436 00e3 13       		.uleb128 0x13
 2437 00e4 3F       		.uleb128 0x3f
 2438 00e5 19       		.uleb128 0x19
 2439 00e6 02       		.uleb128 0x2
 2440 00e7 18       		.uleb128 0x18
 2441 00e8 00       		.byte	0
 2442 00e9 00       		.byte	0
 2443 00ea 0F       		.uleb128 0xf
 2444 00eb 34       		.uleb128 0x34
 2445 00ec 00       		.byte	0
 2446 00ed 03       		.uleb128 0x3
 2447 00ee 08       		.uleb128 0x8
 2448 00ef 3A       		.uleb128 0x3a
 2449 00f0 0B       		.uleb128 0xb
 2450 00f1 3B       		.uleb128 0x3b
 2451 00f2 0B       		.uleb128 0xb
 2452 00f3 49       		.uleb128 0x49
 2453 00f4 13       		.uleb128 0x13
 2454 00f5 3F       		.uleb128 0x3f
 2455 00f6 19       		.uleb128 0x19
 2456 00f7 02       		.uleb128 0x2
 2457 00f8 18       		.uleb128 0x18
 2458 00f9 00       		.byte	0
 2459 00fa 00       		.byte	0
 2460 00fb 00       		.byte	0
 2461              		.section	.debug_aranges,"",%progbits
 2462 0000 6C000000 		.4byte	0x6c
 2463 0004 0200     		.2byte	0x2
 2464 0006 00000000 		.4byte	.Ldebug_info0
 2465 000a 04       		.byte	0x4
 2466 000b 00       		.byte	0
 2467 000c 0000     		.2byte	0
 2468 000e 0000     		.2byte	0
 2469 0010 00000000 		.4byte	.LFB37
 2470 0014 5C000000 		.4byte	.LFE37-.LFB37
 2471 0018 00000000 		.4byte	.LFB38
 2472 001c 04010000 		.4byte	.LFE38-.LFB38
 2473 0020 00000000 		.4byte	.LFB39
 2474 0024 0C010000 		.4byte	.LFE39-.LFB39
 2475 0028 00000000 		.4byte	.LFB40
 2476 002c 24010000 		.4byte	.LFE40-.LFB40
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 51


 2477 0030 00000000 		.4byte	.LFB41
 2478 0034 1C010000 		.4byte	.LFE41-.LFB41
 2479 0038 00000000 		.4byte	.LFB42
 2480 003c 1A010000 		.4byte	.LFE42-.LFB42
 2481 0040 00000000 		.4byte	.LFB43
 2482 0044 9C000000 		.4byte	.LFE43-.LFB43
 2483 0048 00000000 		.4byte	.LFB44
 2484 004c 90010000 		.4byte	.LFE44-.LFB44
 2485 0050 00000000 		.4byte	.LFB45
 2486 0054 64000000 		.4byte	.LFE45-.LFB45
 2487 0058 00000000 		.4byte	.LFB46
 2488 005c 18000000 		.4byte	.LFE46-.LFB46
 2489 0060 00000000 		.4byte	.LFB47
 2490 0064 4C000000 		.4byte	.LFE47-.LFB47
 2491 0068 00000000 		.4byte	0
 2492 006c 00000000 		.4byte	0
 2493              		.section	.debug_ranges,"",%progbits
 2494              	.Ldebug_ranges0:
 2495 0000 00000000 		.4byte	.LFB37
 2496 0004 5C000000 		.4byte	.LFE37
 2497 0008 00000000 		.4byte	.LFB38
 2498 000c 04010000 		.4byte	.LFE38
 2499 0010 00000000 		.4byte	.LFB39
 2500 0014 0C010000 		.4byte	.LFE39
 2501 0018 00000000 		.4byte	.LFB40
 2502 001c 24010000 		.4byte	.LFE40
 2503 0020 00000000 		.4byte	.LFB41
 2504 0024 1C010000 		.4byte	.LFE41
 2505 0028 00000000 		.4byte	.LFB42
 2506 002c 1A010000 		.4byte	.LFE42
 2507 0030 00000000 		.4byte	.LFB43
 2508 0034 9C000000 		.4byte	.LFE43
 2509 0038 00000000 		.4byte	.LFB44
 2510 003c 90010000 		.4byte	.LFE44
 2511 0040 00000000 		.4byte	.LFB45
 2512 0044 64000000 		.4byte	.LFE45
 2513 0048 00000000 		.4byte	.LFB46
 2514 004c 18000000 		.4byte	.LFE46
 2515 0050 00000000 		.4byte	.LFB47
 2516 0054 4C000000 		.4byte	.LFE47
 2517 0058 00000000 		.4byte	0
 2518 005c 00000000 		.4byte	0
 2519              		.section	.debug_line,"",%progbits
 2520              	.Ldebug_line0:
 2521 0000 52020000 		.section	.debug_str,"MS",%progbits,1
 2521      02004300 
 2521      00000201 
 2521      FB0E0D00 
 2521      01010101 
 2522              	.LASF53:
 2523 0000 64696666 		.ascii	"diff_data\000"
 2523      5F646174 
 2523      6100
 2524              	.LASF34:
 2525 000a 785F6C6F 		.ascii	"x_low\000"
 2525      7700
 2526              	.LASF32:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 52


 2527 0010 79325F6D 		.ascii	"y2_mavg\000"
 2527      61766700 
 2528              	.LASF38:
 2529 0018 76616C75 		.ascii	"value_in\000"
 2529      655F696E 
 2529      00
 2530              	.LASF45:
 2531 0021 61636372 		.ascii	"accroed\000"
 2531      6F656400 
 2532              	.LASF7:
 2533 0029 6C6F6E67 		.ascii	"long long unsigned int\000"
 2533      206C6F6E 
 2533      6720756E 
 2533      7369676E 
 2533      65642069 
 2534              	.LASF42:
 2535 0040 64696666 		.ascii	"diff\000"
 2535      00
 2536              	.LASF28:
 2537 0045 785F6D61 		.ascii	"x_mavg\000"
 2537      766700
 2538              	.LASF6:
 2539 004c 6C6F6E67 		.ascii	"long long int\000"
 2539      206C6F6E 
 2539      6720696E 
 2539      7400
 2540              	.LASF0:
 2541 005a 7369676E 		.ascii	"signed char\000"
 2541      65642063 
 2541      68617200 
 2542              	.LASF55:
 2543 0066 2E5C6D61 		.ascii	".\\main.c\000"
 2543      696E2E63 
 2543      00
 2544              	.LASF4:
 2545 006f 6C6F6E67 		.ascii	"long int\000"
 2545      20696E74 
 2545      00
 2546              	.LASF9:
 2547 0078 75696E74 		.ascii	"uint8\000"
 2547      3800
 2548              	.LASF39:
 2549 007e 76616C75 		.ascii	"value_out\000"
 2549      655F6F75 
 2549      7400
 2550              	.LASF29:
 2551 0088 795F6D61 		.ascii	"y_mavg\000"
 2551      766700
 2552              	.LASF13:
 2553 008f 646F7562 		.ascii	"double\000"
 2553      6C6500
 2554              	.LASF10:
 2555 0096 75696E74 		.ascii	"uint32\000"
 2555      333200
 2556              	.LASF37:
 2557 009d 615F6C6F 		.ascii	"a_low\000"
 2557      7700
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 53


 2558              	.LASF36:
 2559 00a3 625F6C6F 		.ascii	"b_low\000"
 2559      7700
 2560              	.LASF30:
 2561 00a9 625F6D61 		.ascii	"b_mavg\000"
 2561      766700
 2562              	.LASF8:
 2563 00b0 756E7369 		.ascii	"unsigned int\000"
 2563      676E6564 
 2563      20696E74 
 2563      00
 2564              	.LASF5:
 2565 00bd 6C6F6E67 		.ascii	"long unsigned int\000"
 2565      20756E73 
 2565      69676E65 
 2565      6420696E 
 2565      7400
 2566              	.LASF18:
 2567 00cf 64617461 		.ascii	"data\000"
 2567      00
 2568              	.LASF19:
 2569 00d4 6D617667 		.ascii	"mavg_filter2\000"
 2569      5F66696C 
 2569      74657232 
 2569      00
 2570              	.LASF3:
 2571 00e1 73686F72 		.ascii	"short unsigned int\000"
 2571      7420756E 
 2571      7369676E 
 2571      65642069 
 2571      6E7400
 2572              	.LASF56:
 2573 00f4 433A5C55 		.ascii	"C:\\Users\\Linette Helena\\Desktop\\hgjki\\ADC_filt"
 2573      73657273 
 2573      5C4C696E 
 2573      65747465 
 2573      2048656C 
 2574 0122 72655F73 		.ascii	"re_samlet_grader.cydsn\000"
 2574      616D6C65 
 2574      745F6772 
 2574      61646572 
 2574      2E637964 
 2575              	.LASF21:
 2576 0139 726F6564 		.ascii	"roed_grader\000"
 2576      5F677261 
 2576      64657200 
 2577              	.LASF15:
 2578 0145 73697A65 		.ascii	"sizetype\000"
 2578      74797065 
 2578      00
 2579              	.LASF51:
 2580 014e 73616D6C 		.ascii	"samlet_grader\000"
 2580      65745F67 
 2580      72616465 
 2580      7200
 2581              	.LASF41:
 2582 015c 67726164 		.ascii	"grader_roed\000"
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 54


 2582      65725F72 
 2582      6F656400 
 2583              	.LASF31:
 2584 0168 78325F6D 		.ascii	"x2_mavg\000"
 2584      61766700 
 2585              	.LASF49:
 2586 0170 6D61765F 		.ascii	"mav_data_roed\000"
 2586      64617461 
 2586      5F726F65 
 2586      6400
 2587              	.LASF48:
 2588 017e 64617461 		.ascii	"data_ready\000"
 2588      5F726561 
 2588      647900
 2589              	.LASF12:
 2590 0189 666C6F61 		.ascii	"float\000"
 2590      7400
 2591              	.LASF44:
 2592 018f 46697273 		.ascii	"FirstCall\000"
 2592      7443616C 
 2592      6C00
 2593              	.LASF1:
 2594 0199 756E7369 		.ascii	"unsigned char\000"
 2594      676E6564 
 2594      20636861 
 2594      7200
 2595              	.LASF26:
 2596 01a7 54696D65 		.ascii	"Timer_interrupt\000"
 2596      725F696E 
 2596      74657272 
 2596      75707400 
 2597              	.LASF35:
 2598 01b7 795F6C6F 		.ascii	"y_low\000"
 2598      7700
 2599              	.LASF2:
 2600 01bd 73686F72 		.ascii	"short int\000"
 2600      7420696E 
 2600      7400
 2601              	.LASF43:
 2602 01c7 636F756E 		.ascii	"counter\000"
 2602      74657200 
 2603              	.LASF22:
 2604 01cf 67726F65 		.ascii	"groen_grader\000"
 2604      6E5F6772 
 2604      61646572 
 2604      00
 2605              	.LASF20:
 2606 01dc 6C6F775F 		.ascii	"low_pass_filter\000"
 2606      70617373 
 2606      5F66696C 
 2606      74657200 
 2607              	.LASF25:
 2608 01ec 50696E5F 		.ascii	"Pin_SW2_handler\000"
 2608      5357325F 
 2608      68616E64 
 2608      6C657200 
 2609              	.LASF14:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 55


 2610 01fc 63686172 		.ascii	"char\000"
 2610      00
 2611              	.LASF16:
 2612 0201 666C6F6F 		.ascii	"floor_and_convert\000"
 2612      725F616E 
 2612      645F636F 
 2612      6E766572 
 2612      7400
 2613              	.LASF50:
 2614 0213 6D61765F 		.ascii	"mav_data_groen\000"
 2614      64617461 
 2614      5F67726F 
 2614      656E00
 2615              	.LASF46:
 2616 0222 61636367 		.ascii	"accgroen\000"
 2616      726F656E 
 2616      00
 2617              	.LASF17:
 2618 022b 6D617667 		.ascii	"mavg_filter\000"
 2618      5F66696C 
 2618      74657200 
 2619              	.LASF24:
 2620 0237 4144435F 		.ascii	"ADC_interrupt\000"
 2620      696E7465 
 2620      72727570 
 2620      7400
 2621              	.LASF33:
 2622 0245 62325F6D 		.ascii	"b2_mavg\000"
 2622      61766700 
 2623              	.LASF40:
 2624 024d 67726164 		.ascii	"grader_groen\000"
 2624      65725F67 
 2624      726F656E 
 2624      00
 2625              	.LASF11:
 2626 025a 696E7431 		.ascii	"int16\000"
 2626      3600
 2627              	.LASF52:
 2628 0260 6C6F775F 		.ascii	"low_pass_data\000"
 2628      70617373 
 2628      5F646174 
 2628      6100
 2629              	.LASF54:
 2630 026e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2630      4320342E 
 2630      392E3320 
 2630      32303135 
 2630      30333033 
 2631 02a1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2631      20726576 
 2631      6973696F 
 2631      6E203232 
 2631      31323230 
 2632 02d4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2632      66756E63 
 2632      74696F6E 
 2632      2D736563 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccdxobfk.s 			page 56


 2632      74696F6E 
 2633              	.LASF23:
 2634 02fc 64696666 		.ascii	"differentiator\000"
 2634      6572656E 
 2634      74696174 
 2634      6F7200
 2635              	.LASF27:
 2636 030b 6D61696E 		.ascii	"main\000"
 2636      00
 2637              	.LASF47:
 2638 0310 72657375 		.ascii	"result\000"
 2638      6C7400
 2639              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
