ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	x_mavg
  18              		.bss
  19              		.align	3
  20              		.type	x_mavg, %object
  21              		.size	x_mavg, 80
  22              	x_mavg:
  23 0000 00000000 		.space	80
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	y_mavg
  25              		.align	3
  26              		.type	y_mavg, %object
  27              		.size	y_mavg, 8
  28              	y_mavg:
  29 0050 00000000 		.space	8
  29      00000000 
  30              		.global	b_mavg
  31              		.data
  32              		.align	3
  33              		.type	b_mavg, %object
  34              		.size	b_mavg, 80
  35              	b_mavg:
  36 0000 9A999999 		.word	-1717986918
  37 0004 9999B93F 		.word	1069128089
  38 0008 9A999999 		.word	-1717986918
  39 000c 9999B93F 		.word	1069128089
  40 0010 9A999999 		.word	-1717986918
  41 0014 9999B93F 		.word	1069128089
  42 0018 9A999999 		.word	-1717986918
  43 001c 9999B93F 		.word	1069128089
  44 0020 9A999999 		.word	-1717986918
  45 0024 9999B93F 		.word	1069128089
  46 0028 9A999999 		.word	-1717986918
  47 002c 9999B93F 		.word	1069128089
  48 0030 9A999999 		.word	-1717986918
  49 0034 9999B93F 		.word	1069128089
  50 0038 9A999999 		.word	-1717986918
  51 003c 9999B93F 		.word	1069128089
  52 0040 9A999999 		.word	-1717986918
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 2


  53 0044 9999B93F 		.word	1069128089
  54 0048 9A999999 		.word	-1717986918
  55 004c 9999B93F 		.word	1069128089
  56              		.global	x2_mavg
  57              		.bss
  58              		.align	3
  59              		.type	x2_mavg, %object
  60              		.size	x2_mavg, 80
  61              	x2_mavg:
  62 0058 00000000 		.space	80
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              		.global	y2_mavg
  64              		.align	3
  65              		.type	y2_mavg, %object
  66              		.size	y2_mavg, 8
  67              	y2_mavg:
  68 00a8 00000000 		.space	8
  68      00000000 
  69              		.global	b2_mavg
  70              		.data
  71              		.align	3
  72              		.type	b2_mavg, %object
  73              		.size	b2_mavg, 80
  74              	b2_mavg:
  75 0050 9A999999 		.word	-1717986918
  76 0054 9999B93F 		.word	1069128089
  77 0058 9A999999 		.word	-1717986918
  78 005c 9999B93F 		.word	1069128089
  79 0060 9A999999 		.word	-1717986918
  80 0064 9999B93F 		.word	1069128089
  81 0068 9A999999 		.word	-1717986918
  82 006c 9999B93F 		.word	1069128089
  83 0070 9A999999 		.word	-1717986918
  84 0074 9999B93F 		.word	1069128089
  85 0078 9A999999 		.word	-1717986918
  86 007c 9999B93F 		.word	1069128089
  87 0080 9A999999 		.word	-1717986918
  88 0084 9999B93F 		.word	1069128089
  89 0088 9A999999 		.word	-1717986918
  90 008c 9999B93F 		.word	1069128089
  91 0090 9A999999 		.word	-1717986918
  92 0094 9999B93F 		.word	1069128089
  93 0098 9A999999 		.word	-1717986918
  94 009c 9999B93F 		.word	1069128089
  95              		.global	x_low
  96              		.bss
  97              		.align	3
  98              		.type	x_low, %object
  99              		.size	x_low, 24
 100              	x_low:
 101 00b0 00000000 		.space	24
 101      00000000 
 101      00000000 
 101      00000000 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 3


 101      00000000 
 102              		.global	y_low
 103              		.align	3
 104              		.type	y_low, %object
 105              		.size	y_low, 24
 106              	y_low:
 107 00c8 00000000 		.space	24
 107      00000000 
 107      00000000 
 107      00000000 
 107      00000000 
 108              		.global	b_low
 109              		.data
 110              		.align	3
 111              		.type	b_low, %object
 112              		.size	b_low, 24
 113              	b_low:
 114 00a0 BE30992A 		.word	714682558
 115 00a4 1895943F 		.word	1066702104
 116 00a8 BE30992A 		.word	714682558
 117 00ac 1895A43F 		.word	1067750680
 118 00b0 BE30992A 		.word	714682558
 119 00b4 1895943F 		.word	1066702104
 120              		.global	a_low
 121              		.align	3
 122              		.type	a_low, %object
 123              		.size	a_low, 24
 124              	a_low:
 125 00b8 00000000 		.word	0
 126 00bc 0000F03F 		.word	1072693248
 127 00c0 60E5D022 		.word	584115552
 128 00c4 DBF9F8BF 		.word	-1074202149
 129 00c8 D8F0F44A 		.word	1257566424
 130 00cc 5986E43F 		.word	1071941209
 131              		.global	current_byte
 132              		.bss
 133              		.type	current_byte, %object
 134              		.size	current_byte, 1
 135              	current_byte:
 136 00e0 00       		.space	1
 137              		.comm	value_in,2,2
 138              		.global	value_out
 139 00e1 000000   		.align	2
 140              		.type	value_out, %object
 141              		.size	value_out, 4
 142              	value_out:
 143 00e4 00000000 		.space	4
 144              		.global	i
 145              		.align	1
 146              		.type	i, %object
 147              		.size	i, 2
 148              	i:
 149 00e8 0000     		.space	2
 150              		.global	j
 151              		.align	1
 152              		.type	j, %object
 153              		.size	j, 2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 4


 154              	j:
 155 00ea 0000     		.space	2
 156              		.comm	avg_new,2,2
 157              		.comm	gradergroen,2,2
 158              		.global	FirstCall
 159              		.data
 160              		.type	FirstCall, %object
 161              		.size	FirstCall, 1
 162              	FirstCall:
 163 00d0 01       		.byte	1
 164              		.global	accroed
 165 00d1 00000000 		.bss
 165      000000
 166              		.align	1
 167              		.type	accroed, %object
 168              		.size	accroed, 2
 169              	accroed:
 170 00ec 0000     		.space	2
 171              		.global	accgroen
 172              		.align	1
 173              		.type	accgroen, %object
 174              		.size	accgroen, 2
 175              	accgroen:
 176 00ee 0000     		.space	2
 177              		.global	result
 178              		.align	2
 179              		.type	result, %object
 180              		.size	result, 2
 181              	result:
 182 00f0 0000     		.space	2
 183              		.global	data_ready
 184              		.type	data_ready, %object
 185              		.size	data_ready, 1
 186              	data_ready:
 187 00f2 00       		.space	1
 188              		.global	__aeabi_dcmpgt
 189              		.global	__aeabi_dadd
 190              		.global	__aeabi_d2iz
 191              		.global	__aeabi_dsub
 192 00f3 00000000 		.section	.text.floor_and_convert,"ax",%progbits
 192      00
 193              		.align	2
 194              		.global	floor_and_convert
 195              		.code	16
 196              		.thumb_func
 197              		.type	floor_and_convert, %function
 198              	floor_and_convert:
 199              	.LFB37:
 200              		.file 1 ".\\main.c"
   1:.\main.c      **** #include <project.h>
   2:.\main.c      **** #include <my_defines.h>
   3:.\main.c      **** #include <stdlib.h>
   4:.\main.c      **** 
   5:.\main.c      **** #define LOWBYTE 0                                   // Used to toggle between HIGH byte and LOW byt
   6:.\main.c      **** #define HIGHBYTE 1                                  // Used to toggle between HIGH byte and LOW byt
   7:.\main.c      **** #define FALSE 0
   8:.\main.c      **** #define TRUE 1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 5


   9:.\main.c      **** 
  10:.\main.c      **** /* Moving average filter */ 
  11:.\main.c      **** #define FILTER_LENGTH_mavg 9
  12:.\main.c      **** //int y[2] = {0,0};
  13:.\main.c      **** double x_mavg[FILTER_LENGTH_mavg+1] = {0,0,0,0,0,0,0,0,0,0};
  14:.\main.c      **** double y_mavg = 0;
  15:.\main.c      **** double b_mavg[FILTER_LENGTH_mavg+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  16:.\main.c      **** 
  17:.\main.c      **** /* Moving average filter 2 */
  18:.\main.c      **** #define FILTER_LENGTH_mavg2 9
  19:.\main.c      **** //int y2[2] = {0,0};
  20:.\main.c      **** double x2_mavg[FILTER_LENGTH_mavg2+1] = {0,0,0,0,0,0,0,0,0,0};
  21:.\main.c      **** double y2_mavg = 0;
  22:.\main.c      **** double b2_mavg[FILTER_LENGTH_mavg2+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  23:.\main.c      **** 
  24:.\main.c      **** /* Lavpas filter*/
  25:.\main.c      **** #define FILTER_LENGTH_low 2
  26:.\main.c      **** double x_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  27:.\main.c      **** double y_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  28:.\main.c      **** double b_low[FILTER_LENGTH_low+1] = {0.0201, 0.0402, 0.0201};
  29:.\main.c      **** double a_low[FILTER_LENGTH_low+1] = {1.0000, -1.5610, 0.6414};
  30:.\main.c      **** 
  31:.\main.c      **** char current_byte = LOWBYTE;                        // Receive LOW byte first as default
  32:.\main.c      **** int16 value_in,value_out[2]={0,0},i=0,j=0, avg_new, gradergroen; 
  33:.\main.c      **** char FirstCall = TRUE;
  34:.\main.c      **** 
  35:.\main.c      **** int16 accroed = {0};
  36:.\main.c      **** int16 accgroen = {0};
  37:.\main.c      **** int16 result[num_of_channels] = {0};
  38:.\main.c      **** uint8 data_ready = FALSE;
  39:.\main.c      **** /***********************************Konvertering til heltal***********************************/
  40:.\main.c      **** signed int floor_and_convert(double y)
  41:.\main.c      **** {
 201              		.loc 1 41 0
 202              		.cfi_startproc
 203 0000 90B5     		push	{r4, r7, lr}
 204              		.cfi_def_cfa_offset 12
 205              		.cfi_offset 4, -12
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 83B0     		sub	sp, sp, #12
 209              		.cfi_def_cfa_offset 24
 210 0004 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
 212 0006 3860     		str	r0, [r7]
 213 0008 7960     		str	r1, [r7, #4]
  42:.\main.c      ****    if (y > 0)
 214              		.loc 1 42 0
 215 000a 3868     		ldr	r0, [r7]
 216 000c 7968     		ldr	r1, [r7, #4]
 217 000e 0022     		mov	r2, #0
 218 0010 0023     		mov	r3, #0
 219 0012 FFF7FEFF 		bl	__aeabi_dcmpgt
 220 0016 031E     		sub	r3, r0, #0
 221 0018 0DD0     		beq	.L6
  43:.\main.c      ****       return (signed int) (y+0.5);
 222              		.loc 1 43 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 6


 223 001a 3868     		ldr	r0, [r7]
 224 001c 7968     		ldr	r1, [r7, #4]
 225 001e 0022     		mov	r2, #0
 226 0020 0D4B     		ldr	r3, .L7
 227 0022 FFF7FEFF 		bl	__aeabi_dadd
 228 0026 031C     		mov	r3, r0
 229 0028 0C1C     		mov	r4, r1
 230 002a 181C     		mov	r0, r3
 231 002c 211C     		mov	r1, r4
 232 002e FFF7FEFF 		bl	__aeabi_d2iz
 233 0032 031C     		mov	r3, r0
 234 0034 0CE0     		b	.L4
 235              	.L6:
  44:.\main.c      ****    else
  45:.\main.c      ****       return (signed int) (y-0.5);
 236              		.loc 1 45 0
 237 0036 3868     		ldr	r0, [r7]
 238 0038 7968     		ldr	r1, [r7, #4]
 239 003a 0022     		mov	r2, #0
 240 003c 064B     		ldr	r3, .L7
 241 003e FFF7FEFF 		bl	__aeabi_dsub
 242 0042 031C     		mov	r3, r0
 243 0044 0C1C     		mov	r4, r1
 244 0046 181C     		mov	r0, r3
 245 0048 211C     		mov	r1, r4
 246 004a FFF7FEFF 		bl	__aeabi_d2iz
 247 004e 031C     		mov	r3, r0
 248              	.L4:
  46:.\main.c      **** }
 249              		.loc 1 46 0
 250 0050 181C     		mov	r0, r3
 251 0052 BD46     		mov	sp, r7
 252 0054 03B0     		add	sp, sp, #12
 253              		@ sp needed
 254 0056 90BD     		pop	{r4, r7, pc}
 255              	.L8:
 256              		.align	2
 257              	.L7:
 258 0058 0000E03F 		.word	1071644672
 259              		.cfi_endproc
 260              	.LFE37:
 261              		.size	floor_and_convert, .-floor_and_convert
 262              		.global	__aeabi_i2d
 263              		.global	__aeabi_dmul
 264              		.section	.text.mavg_filter,"ax",%progbits
 265              		.align	2
 266              		.global	mavg_filter
 267              		.code	16
 268              		.thumb_func
 269              		.type	mavg_filter, %function
 270              	mavg_filter:
 271              	.LFB38:
  47:.\main.c      **** 
  48:.\main.c      **** /***********************************Moving average filter***********************************/
  49:.\main.c      **** signed int mavg_filter(signed int data)
  50:.\main.c      **** {
 272              		.loc 1 50 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 7


 273              		.cfi_startproc
 274 0000 90B5     		push	{r4, r7, lr}
 275              		.cfi_def_cfa_offset 12
 276              		.cfi_offset 4, -12
 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 83B0     		sub	sp, sp, #12
 280              		.cfi_def_cfa_offset 24
 281 0004 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 283 0006 7860     		str	r0, [r7, #4]
  51:.\main.c      ****    x_mavg[0] =  (double) data;      // Read received sample and perform type casts
 284              		.loc 1 51 0
 285 0008 7868     		ldr	r0, [r7, #4]
 286 000a FFF7FEFF 		bl	__aeabi_i2d
 287 000e 031C     		mov	r3, r0
 288 0010 0C1C     		mov	r4, r1
 289 0012 384A     		ldr	r2, .L15
 290 0014 1360     		str	r3, [r2]
 291 0016 5460     		str	r4, [r2, #4]
  52:.\main.c      ****    
  53:.\main.c      ****    y_mavg = 0;
 292              		.loc 1 53 0
 293 0018 374A     		ldr	r2, .L15+4
 294 001a 0023     		mov	r3, #0
 295 001c 0024     		mov	r4, #0
 296 001e 1360     		str	r3, [r2]
 297 0020 5460     		str	r4, [r2, #4]
  54:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 298              		.loc 1 54 0
 299 0022 364B     		ldr	r3, .L15+8
 300 0024 0022     		mov	r2, #0
 301 0026 1A80     		strh	r2, [r3]
 302 0028 30E0     		b	.L10
 303              	.L11:
  55:.\main.c      ****    {
  56:.\main.c      ****       y_mavg += b_mavg[i]*x_mavg[i];
 304              		.loc 1 56 0 discriminator 3
 305 002a 344B     		ldr	r3, .L15+8
 306 002c 1B88     		ldrh	r3, [r3]
 307 002e 1BB2     		sxth	r3, r3
 308 0030 334A     		ldr	r2, .L15+12
 309 0032 DB00     		lsl	r3, r3, #3
 310 0034 D318     		add	r3, r2, r3
 311 0036 1968     		ldr	r1, [r3]
 312 0038 5A68     		ldr	r2, [r3, #4]
 313 003a 304B     		ldr	r3, .L15+8
 314 003c 1B88     		ldrh	r3, [r3]
 315 003e 1BB2     		sxth	r3, r3
 316 0040 2C48     		ldr	r0, .L15
 317 0042 DB00     		lsl	r3, r3, #3
 318 0044 C318     		add	r3, r0, r3
 319 0046 5C68     		ldr	r4, [r3, #4]
 320 0048 1B68     		ldr	r3, [r3]
 321 004a 081C     		mov	r0, r1
 322 004c 111C     		mov	r1, r2
 323 004e 1A1C     		mov	r2, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 8


 324 0050 231C     		mov	r3, r4
 325 0052 FFF7FEFF 		bl	__aeabi_dmul
 326 0056 031C     		mov	r3, r0
 327 0058 0C1C     		mov	r4, r1
 328 005a 191C     		mov	r1, r3
 329 005c 221C     		mov	r2, r4
 330 005e 264B     		ldr	r3, .L15+4
 331 0060 5C68     		ldr	r4, [r3, #4]
 332 0062 1B68     		ldr	r3, [r3]
 333 0064 081C     		mov	r0, r1
 334 0066 111C     		mov	r1, r2
 335 0068 1A1C     		mov	r2, r3
 336 006a 231C     		mov	r3, r4
 337 006c FFF7FEFF 		bl	__aeabi_dadd
 338 0070 031C     		mov	r3, r0
 339 0072 0C1C     		mov	r4, r1
 340 0074 204A     		ldr	r2, .L15+4
 341 0076 1360     		str	r3, [r2]
 342 0078 5460     		str	r4, [r2, #4]
  54:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 343              		.loc 1 54 0 discriminator 3
 344 007a 204B     		ldr	r3, .L15+8
 345 007c 1B88     		ldrh	r3, [r3]
 346 007e 9BB2     		uxth	r3, r3
 347 0080 9BB2     		uxth	r3, r3
 348 0082 0133     		add	r3, r3, #1
 349 0084 9BB2     		uxth	r3, r3
 350 0086 9AB2     		uxth	r2, r3
 351 0088 1C4B     		ldr	r3, .L15+8
 352 008a 1A80     		strh	r2, [r3]
 353              	.L10:
  54:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 354              		.loc 1 54 0 is_stmt 0 discriminator 1
 355 008c 1B4B     		ldr	r3, .L15+8
 356 008e 1B88     		ldrh	r3, [r3]
 357 0090 1BB2     		sxth	r3, r3
 358 0092 092B     		cmp	r3, #9
 359 0094 C9DD     		ble	.L11
  57:.\main.c      ****    } 
  58:.\main.c      ****    
  59:.\main.c      ****    for(i = FILTER_LENGTH_mavg-1;i >= 0;i--)         // Roll x array in order to hold old sample inp
 360              		.loc 1 59 0 is_stmt 1
 361 0096 194B     		ldr	r3, .L15+8
 362 0098 0822     		mov	r2, #8
 363 009a 1A80     		strh	r2, [r3]
 364 009c 19E0     		b	.L12
 365              	.L13:
  60:.\main.c      ****    {
  61:.\main.c      ****       x_mavg[i+1] = x_mavg[i];
 366              		.loc 1 61 0 discriminator 3
 367 009e 174B     		ldr	r3, .L15+8
 368 00a0 1B88     		ldrh	r3, [r3]
 369 00a2 1BB2     		sxth	r3, r3
 370 00a4 5A1C     		add	r2, r3, #1
 371 00a6 154B     		ldr	r3, .L15+8
 372 00a8 1B88     		ldrh	r3, [r3]
 373 00aa 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 9


 374 00ac 1149     		ldr	r1, .L15
 375 00ae DB00     		lsl	r3, r3, #3
 376 00b0 CB18     		add	r3, r1, r3
 377 00b2 5C68     		ldr	r4, [r3, #4]
 378 00b4 1B68     		ldr	r3, [r3]
 379 00b6 0F49     		ldr	r1, .L15
 380 00b8 D200     		lsl	r2, r2, #3
 381 00ba 8A18     		add	r2, r1, r2
 382 00bc 1360     		str	r3, [r2]
 383 00be 5460     		str	r4, [r2, #4]
  59:.\main.c      ****    {
 384              		.loc 1 59 0 discriminator 3
 385 00c0 0E4B     		ldr	r3, .L15+8
 386 00c2 1B88     		ldrh	r3, [r3]
 387 00c4 9BB2     		uxth	r3, r3
 388 00c6 9BB2     		uxth	r3, r3
 389 00c8 013B     		sub	r3, r3, #1
 390 00ca 9BB2     		uxth	r3, r3
 391 00cc 9AB2     		uxth	r2, r3
 392 00ce 0B4B     		ldr	r3, .L15+8
 393 00d0 1A80     		strh	r2, [r3]
 394              	.L12:
  59:.\main.c      ****    {
 395              		.loc 1 59 0 is_stmt 0 discriminator 1
 396 00d2 0A4B     		ldr	r3, .L15+8
 397 00d4 1B88     		ldrh	r3, [r3]
 398 00d6 1BB2     		sxth	r3, r3
 399 00d8 002B     		cmp	r3, #0
 400 00da E0DA     		bge	.L13
  62:.\main.c      ****    }
  63:.\main.c      ****   
  64:.\main.c      ****    return (signed int) y_mavg;
 401              		.loc 1 64 0 is_stmt 1
 402 00dc 064B     		ldr	r3, .L15+4
 403 00de 5C68     		ldr	r4, [r3, #4]
 404 00e0 1B68     		ldr	r3, [r3]
 405 00e2 181C     		mov	r0, r3
 406 00e4 211C     		mov	r1, r4
 407 00e6 FFF7FEFF 		bl	__aeabi_d2iz
 408 00ea 031C     		mov	r3, r0
  65:.\main.c      **** }
 409              		.loc 1 65 0
 410 00ec 181C     		mov	r0, r3
 411 00ee BD46     		mov	sp, r7
 412 00f0 03B0     		add	sp, sp, #12
 413              		@ sp needed
 414 00f2 90BD     		pop	{r4, r7, pc}
 415              	.L16:
 416              		.align	2
 417              	.L15:
 418 00f4 00000000 		.word	x_mavg
 419 00f8 00000000 		.word	y_mavg
 420 00fc 00000000 		.word	i
 421 0100 00000000 		.word	b_mavg
 422              		.cfi_endproc
 423              	.LFE38:
 424              		.size	mavg_filter, .-mavg_filter
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 10


 425              		.section	.text.mavg_filter2,"ax",%progbits
 426              		.align	2
 427              		.global	mavg_filter2
 428              		.code	16
 429              		.thumb_func
 430              		.type	mavg_filter2, %function
 431              	mavg_filter2:
 432              	.LFB39:
  66:.\main.c      **** 
  67:.\main.c      **** 
  68:.\main.c      **** /***********************************Moving average filter 2***********************************/
  69:.\main.c      **** signed int mavg_filter2(signed int data)
  70:.\main.c      **** {
 433              		.loc 1 70 0
 434              		.cfi_startproc
 435 0000 90B5     		push	{r4, r7, lr}
 436              		.cfi_def_cfa_offset 12
 437              		.cfi_offset 4, -12
 438              		.cfi_offset 7, -8
 439              		.cfi_offset 14, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              		.cfi_def_cfa_offset 24
 442 0004 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
 444 0006 7860     		str	r0, [r7, #4]
  71:.\main.c      ****    x2_mavg[0] =  (int16) data;                     // Read received sample and perform type casts
 445              		.loc 1 71 0
 446 0008 7B68     		ldr	r3, [r7, #4]
 447 000a 9BB2     		uxth	r3, r3
 448 000c 1BB2     		sxth	r3, r3
 449 000e 181C     		mov	r0, r3
 450 0010 FFF7FEFF 		bl	__aeabi_i2d
 451 0014 031C     		mov	r3, r0
 452 0016 0C1C     		mov	r4, r1
 453 0018 384A     		ldr	r2, .L23
 454 001a 1360     		str	r3, [r2]
 455 001c 5460     		str	r4, [r2, #4]
  72:.\main.c      ****     
  73:.\main.c      ****    y2_mavg = 0;                                     // 
 456              		.loc 1 73 0
 457 001e 384A     		ldr	r2, .L23+4
 458 0020 0023     		mov	r3, #0
 459 0022 0024     		mov	r4, #0
 460 0024 1360     		str	r3, [r2]
 461 0026 5460     		str	r4, [r2, #4]
  74:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 462              		.loc 1 74 0
 463 0028 364B     		ldr	r3, .L23+8
 464 002a 0022     		mov	r2, #0
 465 002c 1A80     		strh	r2, [r3]
 466 002e 30E0     		b	.L18
 467              	.L19:
  75:.\main.c      ****    {
  76:.\main.c      ****       y2_mavg += b2_mavg[i]*x2_mavg[i];             // 
 468              		.loc 1 76 0 discriminator 3
 469 0030 344B     		ldr	r3, .L23+8
 470 0032 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 11


 471 0034 1BB2     		sxth	r3, r3
 472 0036 344A     		ldr	r2, .L23+12
 473 0038 DB00     		lsl	r3, r3, #3
 474 003a D318     		add	r3, r2, r3
 475 003c 1968     		ldr	r1, [r3]
 476 003e 5A68     		ldr	r2, [r3, #4]
 477 0040 304B     		ldr	r3, .L23+8
 478 0042 1B88     		ldrh	r3, [r3]
 479 0044 1BB2     		sxth	r3, r3
 480 0046 2D48     		ldr	r0, .L23
 481 0048 DB00     		lsl	r3, r3, #3
 482 004a C318     		add	r3, r0, r3
 483 004c 5C68     		ldr	r4, [r3, #4]
 484 004e 1B68     		ldr	r3, [r3]
 485 0050 081C     		mov	r0, r1
 486 0052 111C     		mov	r1, r2
 487 0054 1A1C     		mov	r2, r3
 488 0056 231C     		mov	r3, r4
 489 0058 FFF7FEFF 		bl	__aeabi_dmul
 490 005c 031C     		mov	r3, r0
 491 005e 0C1C     		mov	r4, r1
 492 0060 191C     		mov	r1, r3
 493 0062 221C     		mov	r2, r4
 494 0064 264B     		ldr	r3, .L23+4
 495 0066 5C68     		ldr	r4, [r3, #4]
 496 0068 1B68     		ldr	r3, [r3]
 497 006a 081C     		mov	r0, r1
 498 006c 111C     		mov	r1, r2
 499 006e 1A1C     		mov	r2, r3
 500 0070 231C     		mov	r3, r4
 501 0072 FFF7FEFF 		bl	__aeabi_dadd
 502 0076 031C     		mov	r3, r0
 503 0078 0C1C     		mov	r4, r1
 504 007a 214A     		ldr	r2, .L23+4
 505 007c 1360     		str	r3, [r2]
 506 007e 5460     		str	r4, [r2, #4]
  74:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 507              		.loc 1 74 0 discriminator 3
 508 0080 204B     		ldr	r3, .L23+8
 509 0082 1B88     		ldrh	r3, [r3]
 510 0084 9BB2     		uxth	r3, r3
 511 0086 9BB2     		uxth	r3, r3
 512 0088 0133     		add	r3, r3, #1
 513 008a 9BB2     		uxth	r3, r3
 514 008c 9AB2     		uxth	r2, r3
 515 008e 1D4B     		ldr	r3, .L23+8
 516 0090 1A80     		strh	r2, [r3]
 517              	.L18:
  74:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 518              		.loc 1 74 0 is_stmt 0 discriminator 1
 519 0092 1C4B     		ldr	r3, .L23+8
 520 0094 1B88     		ldrh	r3, [r3]
 521 0096 1BB2     		sxth	r3, r3
 522 0098 092B     		cmp	r3, #9
 523 009a C9DD     		ble	.L19
  77:.\main.c      ****    } 
  78:.\main.c      ****    
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 12


  79:.\main.c      ****    for(i = FILTER_LENGTH_mavg2-1;i >= 0;i--)        // Roll x array in order to hold old sample inp
 524              		.loc 1 79 0 is_stmt 1
 525 009c 194B     		ldr	r3, .L23+8
 526 009e 0822     		mov	r2, #8
 527 00a0 1A80     		strh	r2, [r3]
 528 00a2 19E0     		b	.L20
 529              	.L21:
  80:.\main.c      ****    {
  81:.\main.c      ****       x2_mavg[i+1] = x2_mavg[i];                    // 
 530              		.loc 1 81 0 discriminator 3
 531 00a4 174B     		ldr	r3, .L23+8
 532 00a6 1B88     		ldrh	r3, [r3]
 533 00a8 1BB2     		sxth	r3, r3
 534 00aa 5A1C     		add	r2, r3, #1
 535 00ac 154B     		ldr	r3, .L23+8
 536 00ae 1B88     		ldrh	r3, [r3]
 537 00b0 1BB2     		sxth	r3, r3
 538 00b2 1249     		ldr	r1, .L23
 539 00b4 DB00     		lsl	r3, r3, #3
 540 00b6 CB18     		add	r3, r1, r3
 541 00b8 5C68     		ldr	r4, [r3, #4]
 542 00ba 1B68     		ldr	r3, [r3]
 543 00bc 0F49     		ldr	r1, .L23
 544 00be D200     		lsl	r2, r2, #3
 545 00c0 8A18     		add	r2, r1, r2
 546 00c2 1360     		str	r3, [r2]
 547 00c4 5460     		str	r4, [r2, #4]
  79:.\main.c      ****    {
 548              		.loc 1 79 0 discriminator 3
 549 00c6 0F4B     		ldr	r3, .L23+8
 550 00c8 1B88     		ldrh	r3, [r3]
 551 00ca 9BB2     		uxth	r3, r3
 552 00cc 9BB2     		uxth	r3, r3
 553 00ce 013B     		sub	r3, r3, #1
 554 00d0 9BB2     		uxth	r3, r3
 555 00d2 9AB2     		uxth	r2, r3
 556 00d4 0B4B     		ldr	r3, .L23+8
 557 00d6 1A80     		strh	r2, [r3]
 558              	.L20:
  79:.\main.c      ****    {
 559              		.loc 1 79 0 is_stmt 0 discriminator 1
 560 00d8 0A4B     		ldr	r3, .L23+8
 561 00da 1B88     		ldrh	r3, [r3]
 562 00dc 1BB2     		sxth	r3, r3
 563 00de 002B     		cmp	r3, #0
 564 00e0 E0DA     		bge	.L21
  82:.\main.c      ****    }
  83:.\main.c      ****       
  84:.\main.c      ****    return (signed int) y2_mavg;               // 
 565              		.loc 1 84 0 is_stmt 1
 566 00e2 074B     		ldr	r3, .L23+4
 567 00e4 5C68     		ldr	r4, [r3, #4]
 568 00e6 1B68     		ldr	r3, [r3]
 569 00e8 181C     		mov	r0, r3
 570 00ea 211C     		mov	r1, r4
 571 00ec FFF7FEFF 		bl	__aeabi_d2iz
 572 00f0 031C     		mov	r3, r0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 13


  85:.\main.c      **** }
 573              		.loc 1 85 0
 574 00f2 181C     		mov	r0, r3
 575 00f4 BD46     		mov	sp, r7
 576 00f6 03B0     		add	sp, sp, #12
 577              		@ sp needed
 578 00f8 90BD     		pop	{r4, r7, pc}
 579              	.L24:
 580 00fa C046     		.align	2
 581              	.L23:
 582 00fc 00000000 		.word	x2_mavg
 583 0100 00000000 		.word	y2_mavg
 584 0104 00000000 		.word	i
 585 0108 00000000 		.word	b2_mavg
 586              		.cfi_endproc
 587              	.LFE39:
 588              		.size	mavg_filter2, .-mavg_filter2
 589              		.section	.text.low_pass_filter,"ax",%progbits
 590              		.align	2
 591              		.global	low_pass_filter
 592              		.code	16
 593              		.thumb_func
 594              		.type	low_pass_filter, %function
 595              	low_pass_filter:
 596              	.LFB40:
  86:.\main.c      **** 
  87:.\main.c      **** /***********************************Lavpas filter***********************************/
  88:.\main.c      **** 
  89:.\main.c      **** int low_pass_filter(int data)
  90:.\main.c      **** {
 597              		.loc 1 90 0
 598              		.cfi_startproc
 599 0000 B0B5     		push	{r4, r5, r7, lr}
 600              		.cfi_def_cfa_offset 16
 601              		.cfi_offset 4, -16
 602              		.cfi_offset 5, -12
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 84B0     		sub	sp, sp, #16
 606              		.cfi_def_cfa_offset 32
 607 0004 00AF     		add	r7, sp, #0
 608              		.cfi_def_cfa_register 7
 609 0006 7860     		str	r0, [r7, #4]
  91:.\main.c      ****    int i;
  92:.\main.c      ****    x_low[0] =  (double) data;
 610              		.loc 1 92 0
 611 0008 7868     		ldr	r0, [r7, #4]
 612 000a FFF7FEFF 		bl	__aeabi_i2d
 613 000e 031C     		mov	r3, r0
 614 0010 0C1C     		mov	r4, r1
 615 0012 404A     		ldr	r2, .L33
 616 0014 1360     		str	r3, [r2]
 617 0016 5460     		str	r4, [r2, #4]
  93:.\main.c      ****    
  94:.\main.c      ****    y_low[0] = 0;
 618              		.loc 1 94 0
 619 0018 3F4A     		ldr	r2, .L33+4
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 14


 620 001a 0023     		mov	r3, #0
 621 001c 0024     		mov	r4, #0
 622 001e 1360     		str	r3, [r2]
 623 0020 5460     		str	r4, [r2, #4]
  95:.\main.c      ****   
  96:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_low;i++)                 // Run IIR filter for each received sample
 624              		.loc 1 96 0
 625 0022 0023     		mov	r3, #0
 626 0024 FB60     		str	r3, [r7, #12]
 627 0026 1EE0     		b	.L26
 628              	.L27:
  97:.\main.c      ****    {
  98:.\main.c      ****       y_low[0] += b_low[i]*x_low[i];
 629              		.loc 1 98 0 discriminator 3
 630 0028 3B4B     		ldr	r3, .L33+4
 631 002a 1C68     		ldr	r4, [r3]
 632 002c 5D68     		ldr	r5, [r3, #4]
 633 002e 3B4A     		ldr	r2, .L33+8
 634 0030 FB68     		ldr	r3, [r7, #12]
 635 0032 DB00     		lsl	r3, r3, #3
 636 0034 D318     		add	r3, r2, r3
 637 0036 1868     		ldr	r0, [r3]
 638 0038 5968     		ldr	r1, [r3, #4]
 639 003a 364A     		ldr	r2, .L33
 640 003c FB68     		ldr	r3, [r7, #12]
 641 003e DB00     		lsl	r3, r3, #3
 642 0040 D318     		add	r3, r2, r3
 643 0042 1A68     		ldr	r2, [r3]
 644 0044 5B68     		ldr	r3, [r3, #4]
 645 0046 FFF7FEFF 		bl	__aeabi_dmul
 646 004a 021C     		mov	r2, r0
 647 004c 0B1C     		mov	r3, r1
 648 004e 201C     		mov	r0, r4
 649 0050 291C     		mov	r1, r5
 650 0052 FFF7FEFF 		bl	__aeabi_dadd
 651 0056 031C     		mov	r3, r0
 652 0058 0C1C     		mov	r4, r1
 653 005a 2F4A     		ldr	r2, .L33+4
 654 005c 1360     		str	r3, [r2]
 655 005e 5460     		str	r4, [r2, #4]
  96:.\main.c      ****    {
 656              		.loc 1 96 0 discriminator 3
 657 0060 FB68     		ldr	r3, [r7, #12]
 658 0062 0133     		add	r3, r3, #1
 659 0064 FB60     		str	r3, [r7, #12]
 660              	.L26:
  96:.\main.c      ****    {
 661              		.loc 1 96 0 is_stmt 0 discriminator 1
 662 0066 FB68     		ldr	r3, [r7, #12]
 663 0068 022B     		cmp	r3, #2
 664 006a DDDD     		ble	.L27
  99:.\main.c      ****    } 
 100:.\main.c      ****    
 101:.\main.c      ****    for(i =1;i <= FILTER_LENGTH_low;i++)               // Roll x array in order to hold old sample i
 665              		.loc 1 101 0 is_stmt 1
 666 006c 0123     		mov	r3, #1
 667 006e FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 15


 668 0070 1EE0     		b	.L28
 669              	.L29:
 102:.\main.c      ****    {
 103:.\main.c      ****       y_low[0] -= a_low[i]*y_low[i];
 670              		.loc 1 103 0 discriminator 3
 671 0072 294B     		ldr	r3, .L33+4
 672 0074 1C68     		ldr	r4, [r3]
 673 0076 5D68     		ldr	r5, [r3, #4]
 674 0078 294A     		ldr	r2, .L33+12
 675 007a FB68     		ldr	r3, [r7, #12]
 676 007c DB00     		lsl	r3, r3, #3
 677 007e D318     		add	r3, r2, r3
 678 0080 1868     		ldr	r0, [r3]
 679 0082 5968     		ldr	r1, [r3, #4]
 680 0084 244A     		ldr	r2, .L33+4
 681 0086 FB68     		ldr	r3, [r7, #12]
 682 0088 DB00     		lsl	r3, r3, #3
 683 008a D318     		add	r3, r2, r3
 684 008c 1A68     		ldr	r2, [r3]
 685 008e 5B68     		ldr	r3, [r3, #4]
 686 0090 FFF7FEFF 		bl	__aeabi_dmul
 687 0094 021C     		mov	r2, r0
 688 0096 0B1C     		mov	r3, r1
 689 0098 201C     		mov	r0, r4
 690 009a 291C     		mov	r1, r5
 691 009c FFF7FEFF 		bl	__aeabi_dsub
 692 00a0 031C     		mov	r3, r0
 693 00a2 0C1C     		mov	r4, r1
 694 00a4 1C4A     		ldr	r2, .L33+4
 695 00a6 1360     		str	r3, [r2]
 696 00a8 5460     		str	r4, [r2, #4]
 101:.\main.c      ****    {
 697              		.loc 1 101 0 discriminator 3
 698 00aa FB68     		ldr	r3, [r7, #12]
 699 00ac 0133     		add	r3, r3, #1
 700 00ae FB60     		str	r3, [r7, #12]
 701              	.L28:
 101:.\main.c      ****    {
 702              		.loc 1 101 0 is_stmt 0 discriminator 1
 703 00b0 FB68     		ldr	r3, [r7, #12]
 704 00b2 022B     		cmp	r3, #2
 705 00b4 DDDD     		ble	.L29
 104:.\main.c      ****    }
 105:.\main.c      **** 
 106:.\main.c      ****    for(i = FILTER_LENGTH_low-1;i >= 0;i--)
 706              		.loc 1 106 0 is_stmt 1
 707 00b6 0123     		mov	r3, #1
 708 00b8 FB60     		str	r3, [r7, #12]
 709 00ba 1CE0     		b	.L30
 710              	.L31:
 107:.\main.c      ****     {
 108:.\main.c      ****        x_low[i+1]=x_low[i];
 711              		.loc 1 108 0 discriminator 3
 712 00bc FB68     		ldr	r3, [r7, #12]
 713 00be 5A1C     		add	r2, r3, #1
 714 00c0 1449     		ldr	r1, .L33
 715 00c2 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 16


 716 00c4 DB00     		lsl	r3, r3, #3
 717 00c6 CB18     		add	r3, r1, r3
 718 00c8 5C68     		ldr	r4, [r3, #4]
 719 00ca 1B68     		ldr	r3, [r3]
 720 00cc 1149     		ldr	r1, .L33
 721 00ce D200     		lsl	r2, r2, #3
 722 00d0 8A18     		add	r2, r1, r2
 723 00d2 1360     		str	r3, [r2]
 724 00d4 5460     		str	r4, [r2, #4]
 109:.\main.c      ****        y_low[i+1]=y_low[i];
 725              		.loc 1 109 0 discriminator 3
 726 00d6 FB68     		ldr	r3, [r7, #12]
 727 00d8 5A1C     		add	r2, r3, #1
 728 00da 0F49     		ldr	r1, .L33+4
 729 00dc FB68     		ldr	r3, [r7, #12]
 730 00de DB00     		lsl	r3, r3, #3
 731 00e0 CB18     		add	r3, r1, r3
 732 00e2 5C68     		ldr	r4, [r3, #4]
 733 00e4 1B68     		ldr	r3, [r3]
 734 00e6 0C49     		ldr	r1, .L33+4
 735 00e8 D200     		lsl	r2, r2, #3
 736 00ea 8A18     		add	r2, r1, r2
 737 00ec 1360     		str	r3, [r2]
 738 00ee 5460     		str	r4, [r2, #4]
 106:.\main.c      ****     {
 739              		.loc 1 106 0 discriminator 3
 740 00f0 FB68     		ldr	r3, [r7, #12]
 741 00f2 013B     		sub	r3, r3, #1
 742 00f4 FB60     		str	r3, [r7, #12]
 743              	.L30:
 106:.\main.c      ****     {
 744              		.loc 1 106 0 is_stmt 0 discriminator 1
 745 00f6 FB68     		ldr	r3, [r7, #12]
 746 00f8 002B     		cmp	r3, #0
 747 00fa DFDA     		bge	.L31
 110:.\main.c      ****     }
 111:.\main.c      **** 
 112:.\main.c      ****     return floor_and_convert(y_low[0]);
 748              		.loc 1 112 0 is_stmt 1
 749 00fc 064B     		ldr	r3, .L33+4
 750 00fe 5C68     		ldr	r4, [r3, #4]
 751 0100 1B68     		ldr	r3, [r3]
 752 0102 181C     		mov	r0, r3
 753 0104 211C     		mov	r1, r4
 754 0106 FFF7FEFF 		bl	floor_and_convert
 755 010a 031C     		mov	r3, r0
 113:.\main.c      **** }
 756              		.loc 1 113 0
 757 010c 181C     		mov	r0, r3
 758 010e BD46     		mov	sp, r7
 759 0110 04B0     		add	sp, sp, #16
 760              		@ sp needed
 761 0112 B0BD     		pop	{r4, r5, r7, pc}
 762              	.L34:
 763              		.align	2
 764              	.L33:
 765 0114 00000000 		.word	x_low
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 17


 766 0118 00000000 		.word	y_low
 767 011c 00000000 		.word	b_low
 768 0120 00000000 		.word	a_low
 769              		.cfi_endproc
 770              	.LFE40:
 771              		.size	low_pass_filter, .-low_pass_filter
 772              		.global	__aeabi_idiv
 773              		.section	.text.grader,"ax",%progbits
 774              		.align	2
 775              		.global	grader
 776              		.code	16
 777              		.thumb_func
 778              		.type	grader, %function
 779              	grader:
 780              	.LFB41:
 114:.\main.c      **** 
 115:.\main.c      **** /***********************************Omregning til grader***********************************/
 116:.\main.c      **** 
 117:.\main.c      **** //int grader(int data)
 118:.\main.c      **** //{
 119:.\main.c      **** //    if ((data < 194) && (data>= 159))
 120:.\main.c      **** //    {
 121:.\main.c      **** //        data=(90+(80-90)*(data-194)/(159-194));
 122:.\main.c      **** //        return data; 
 123:.\main.c      **** //    }
 124:.\main.c      **** //    else if((data < 159) && (data >= 96))
 125:.\main.c      **** //    {
 126:.\main.c      **** //        data=((80+(60-80))*(data-159)/(96-159));
 127:.\main.c      **** //        return data;
 128:.\main.c      **** //    }
 129:.\main.c      **** //    else if((data < 96) && (data >= 44))
 130:.\main.c      **** //    {
 131:.\main.c      **** //        data=((60+(40-60))*(data-96)/(44-96));
 132:.\main.c      **** //        return data;
 133:.\main.c      **** //    }
 134:.\main.c      **** //    else if((data < 44) && (data >= 12))
 135:.\main.c      **** //    {
 136:.\main.c      **** //        data =((40+(20-40))*(data-44)/(12-44));
 137:.\main.c      **** //        return data;
 138:.\main.c      **** //    }
 139:.\main.c      **** //    else if ((data < 12) && (data >= 0))
 140:.\main.c      **** //    {
 141:.\main.c      **** //        data =((20+(0-20))*(data-12)/(0-12));
 142:.\main.c      **** //       return data;
 143:.\main.c      **** //    }
 144:.\main.c      **** //   else
 145:.\main.c      **** //    {
 146:.\main.c      **** //        return data;
 147:.\main.c      **** //    }
 148:.\main.c      **** //}
 149:.\main.c      **** 
 150:.\main.c      **** int grader(int data)
 151:.\main.c      **** {
 781              		.loc 1 151 0
 782              		.cfi_startproc
 783 0000 80B5     		push	{r7, lr}
 784              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 18


 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 82B0     		sub	sp, sp, #8
 788              		.cfi_def_cfa_offset 16
 789 0004 00AF     		add	r7, sp, #0
 790              		.cfi_def_cfa_register 7
 791 0006 7860     		str	r0, [r7, #4]
 152:.\main.c      ****     if ((data <= 1) && (data >= -35))
 792              		.loc 1 152 0
 793 0008 7B68     		ldr	r3, [r7, #4]
 794 000a 012B     		cmp	r3, #1
 795 000c 11DC     		bgt	.L36
 796              		.loc 1 152 0 is_stmt 0 discriminator 1
 797 000e 7B68     		ldr	r3, [r7, #4]
 798 0010 2333     		add	r3, r3, #35
 799 0012 0EDB     		blt	.L36
 153:.\main.c      ****     {
 154:.\main.c      ****         data=(0+(10-0)*(data-1)/(-35-1));
 800              		.loc 1 154 0 is_stmt 1
 801 0014 7B68     		ldr	r3, [r7, #4]
 802 0016 5A1E     		sub	r2, r3, #1
 803 0018 131C     		mov	r3, r2
 804 001a 9B00     		lsl	r3, r3, #2
 805 001c 9B18     		add	r3, r3, r2
 806 001e 5B00     		lsl	r3, r3, #1
 807 0020 181C     		mov	r0, r3
 808 0022 2423     		mov	r3, #36
 809 0024 5942     		neg	r1, r3
 810 0026 FFF7FEFF 		bl	__aeabi_idiv
 811 002a 031C     		mov	r3, r0
 812 002c 7B60     		str	r3, [r7, #4]
 155:.\main.c      ****         return data; 
 813              		.loc 1 155 0
 814 002e 7B68     		ldr	r3, [r7, #4]
 815 0030 74E0     		b	.L37
 816              	.L36:
 156:.\main.c      ****     }
 157:.\main.c      ****     else if ((data <= -35) && (data >= -96))
 817              		.loc 1 157 0
 818 0032 7B68     		ldr	r3, [r7, #4]
 819 0034 2233     		add	r3, r3, #34
 820 0036 13DA     		bge	.L38
 821              		.loc 1 157 0 is_stmt 0 discriminator 1
 822 0038 7B68     		ldr	r3, [r7, #4]
 823 003a 6033     		add	r3, r3, #96
 824 003c 10DB     		blt	.L38
 158:.\main.c      ****     {
 159:.\main.c      ****         data=(10+(30-10)*(data-(-35))/(-96-(-35)));
 825              		.loc 1 159 0 is_stmt 1
 826 003e 7B68     		ldr	r3, [r7, #4]
 827 0040 2333     		add	r3, r3, #35
 828 0042 1A1C     		mov	r2, r3
 829 0044 131C     		mov	r3, r2
 830 0046 9B00     		lsl	r3, r3, #2
 831 0048 9B18     		add	r3, r3, r2
 832 004a 9B00     		lsl	r3, r3, #2
 833 004c 181C     		mov	r0, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 19


 834 004e 3D23     		mov	r3, #61
 835 0050 5942     		neg	r1, r3
 836 0052 FFF7FEFF 		bl	__aeabi_idiv
 837 0056 031C     		mov	r3, r0
 838 0058 0A33     		add	r3, r3, #10
 839 005a 7B60     		str	r3, [r7, #4]
 160:.\main.c      ****         return data;
 840              		.loc 1 160 0
 841 005c 7B68     		ldr	r3, [r7, #4]
 842 005e 5DE0     		b	.L37
 843              	.L38:
 161:.\main.c      ****     }
 162:.\main.c      ****     else if ((data <= -96) && (data >= -147))
 844              		.loc 1 162 0
 845 0060 7B68     		ldr	r3, [r7, #4]
 846 0062 5F33     		add	r3, r3, #95
 847 0064 13DA     		bge	.L39
 848              		.loc 1 162 0 is_stmt 0 discriminator 1
 849 0066 7B68     		ldr	r3, [r7, #4]
 850 0068 9333     		add	r3, r3, #147
 851 006a 10DB     		blt	.L39
 163:.\main.c      ****     {
 164:.\main.c      ****         data=(30+(50-30)*(data-(-96))/(-147-(-96)));
 852              		.loc 1 164 0 is_stmt 1
 853 006c 7B68     		ldr	r3, [r7, #4]
 854 006e 6033     		add	r3, r3, #96
 855 0070 1A1C     		mov	r2, r3
 856 0072 131C     		mov	r3, r2
 857 0074 9B00     		lsl	r3, r3, #2
 858 0076 9B18     		add	r3, r3, r2
 859 0078 9B00     		lsl	r3, r3, #2
 860 007a 181C     		mov	r0, r3
 861 007c 3323     		mov	r3, #51
 862 007e 5942     		neg	r1, r3
 863 0080 FFF7FEFF 		bl	__aeabi_idiv
 864 0084 031C     		mov	r3, r0
 865 0086 1E33     		add	r3, r3, #30
 866 0088 7B60     		str	r3, [r7, #4]
 165:.\main.c      ****         return data;
 867              		.loc 1 165 0
 868 008a 7B68     		ldr	r3, [r7, #4]
 869 008c 46E0     		b	.L37
 870              	.L39:
 166:.\main.c      ****     }
 167:.\main.c      ****     else if ((data <= -147) && (data >= -180))
 871              		.loc 1 167 0
 872 008e 7B68     		ldr	r3, [r7, #4]
 873 0090 9233     		add	r3, r3, #146
 874 0092 13DA     		bge	.L40
 875              		.loc 1 167 0 is_stmt 0 discriminator 1
 876 0094 7B68     		ldr	r3, [r7, #4]
 877 0096 B433     		add	r3, r3, #180
 878 0098 10DB     		blt	.L40
 168:.\main.c      ****     {
 169:.\main.c      ****         data=(50+(70-50)*(data-(-147))/(-180-(-147)));
 879              		.loc 1 169 0 is_stmt 1
 880 009a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 20


 881 009c 9333     		add	r3, r3, #147
 882 009e 1A1C     		mov	r2, r3
 883 00a0 131C     		mov	r3, r2
 884 00a2 9B00     		lsl	r3, r3, #2
 885 00a4 9B18     		add	r3, r3, r2
 886 00a6 9B00     		lsl	r3, r3, #2
 887 00a8 181C     		mov	r0, r3
 888 00aa 2123     		mov	r3, #33
 889 00ac 5942     		neg	r1, r3
 890 00ae FFF7FEFF 		bl	__aeabi_idiv
 891 00b2 031C     		mov	r3, r0
 892 00b4 3233     		add	r3, r3, #50
 893 00b6 7B60     		str	r3, [r7, #4]
 170:.\main.c      ****         return data;
 894              		.loc 1 170 0
 895 00b8 7B68     		ldr	r3, [r7, #4]
 896 00ba 2FE0     		b	.L37
 897              	.L40:
 171:.\main.c      ****     }
 172:.\main.c      ****     else if ((data <= -180) && (data >= -189))
 898              		.loc 1 172 0
 899 00bc 7B68     		ldr	r3, [r7, #4]
 900 00be B333     		add	r3, r3, #179
 901 00c0 13DA     		bge	.L41
 902              		.loc 1 172 0 is_stmt 0 discriminator 1
 903 00c2 7B68     		ldr	r3, [r7, #4]
 904 00c4 BD33     		add	r3, r3, #189
 905 00c6 10DB     		blt	.L41
 173:.\main.c      ****     {
 174:.\main.c      ****         data=(70+(80-70)*(data-(-180))/(-189-(-180)));
 906              		.loc 1 174 0 is_stmt 1
 907 00c8 7B68     		ldr	r3, [r7, #4]
 908 00ca B433     		add	r3, r3, #180
 909 00cc 1A1C     		mov	r2, r3
 910 00ce 131C     		mov	r3, r2
 911 00d0 9B00     		lsl	r3, r3, #2
 912 00d2 9B18     		add	r3, r3, r2
 913 00d4 5B00     		lsl	r3, r3, #1
 914 00d6 181C     		mov	r0, r3
 915 00d8 0923     		mov	r3, #9
 916 00da 5942     		neg	r1, r3
 917 00dc FFF7FEFF 		bl	__aeabi_idiv
 918 00e0 031C     		mov	r3, r0
 919 00e2 4633     		add	r3, r3, #70
 920 00e4 7B60     		str	r3, [r7, #4]
 175:.\main.c      ****         return data;
 921              		.loc 1 175 0
 922 00e6 7B68     		ldr	r3, [r7, #4]
 923 00e8 18E0     		b	.L37
 924              	.L41:
 176:.\main.c      ****     }
 177:.\main.c      ****     else if ((data <= -189) && (data >= -193))
 925              		.loc 1 177 0
 926 00ea 7B68     		ldr	r3, [r7, #4]
 927 00ec BC33     		add	r3, r3, #188
 928 00ee 11DA     		bge	.L42
 929              		.loc 1 177 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 21


 930 00f0 7B68     		ldr	r3, [r7, #4]
 931 00f2 C133     		add	r3, r3, #193
 932 00f4 0EDB     		blt	.L42
 178:.\main.c      ****     {
 179:.\main.c      ****         data=(80+(90-80)*(data-(-189))/(-193-(-189)));
 933              		.loc 1 179 0 is_stmt 1
 934 00f6 7B68     		ldr	r3, [r7, #4]
 935 00f8 BD33     		add	r3, r3, #189
 936 00fa 1A1C     		mov	r2, r3
 937 00fc 131C     		mov	r3, r2
 938 00fe 9B00     		lsl	r3, r3, #2
 939 0100 9B18     		add	r3, r3, r2
 940 0102 5B00     		lsl	r3, r3, #1
 941 0104 00D5     		bpl	.L43
 942 0106 0333     		add	r3, r3, #3
 943              	.L43:
 944 0108 9B10     		asr	r3, r3, #2
 945 010a 5B42     		neg	r3, r3
 946 010c 5033     		add	r3, r3, #80
 947 010e 7B60     		str	r3, [r7, #4]
 180:.\main.c      ****         return data;
 948              		.loc 1 180 0
 949 0110 7B68     		ldr	r3, [r7, #4]
 950 0112 03E0     		b	.L37
 951              	.L42:
 181:.\main.c      ****     }
 182:.\main.c      ****     
 183:.\main.c      ****     else
 184:.\main.c      ****     {
 185:.\main.c      ****         data = -200;
 952              		.loc 1 185 0
 953 0114 C823     		mov	r3, #200
 954 0116 5B42     		neg	r3, r3
 955 0118 7B60     		str	r3, [r7, #4]
 186:.\main.c      ****         return data;
 956              		.loc 1 186 0
 957 011a 7B68     		ldr	r3, [r7, #4]
 958              	.L37:
 187:.\main.c      ****     }
 188:.\main.c      **** }
 959              		.loc 1 188 0
 960 011c 181C     		mov	r0, r3
 961 011e BD46     		mov	sp, r7
 962 0120 02B0     		add	sp, sp, #8
 963              		@ sp needed
 964 0122 80BD     		pop	{r7, pc}
 965              		.cfi_endproc
 966              	.LFE41:
 967              		.size	grader, .-grader
 968              		.section	.text.ADC_interrupt,"ax",%progbits
 969              		.align	2
 970              		.global	ADC_interrupt
 971              		.code	16
 972              		.thumb_func
 973              		.type	ADC_interrupt, %function
 974              	ADC_interrupt:
 975              	.LFB42:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 22


 189:.\main.c      **** 
 190:.\main.c      **** /***********************************ISR***********************************/
 191:.\main.c      **** 
 192:.\main.c      **** CY_ISR(ADC_interrupt)
 193:.\main.c      **** {
 976              		.loc 1 193 0
 977              		.cfi_startproc
 978 0000 80B5     		push	{r7, lr}
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 7, -8
 981              		.cfi_offset 14, -4
 982 0002 00AF     		add	r7, sp, #0
 983              		.cfi_def_cfa_register 7
 194:.\main.c      ****     accgroen = ADC_GetResult16(0)-1024+52;
 984              		.loc 1 194 0
 985 0004 0020     		mov	r0, #0
 986 0006 FFF7FEFF 		bl	ADC_GetResult16
 987 000a 031C     		mov	r3, r0
 988 000c 9BB2     		uxth	r3, r3
 989 000e 064A     		ldr	r2, .L45
 990 0010 9446     		mov	ip, r2
 991 0012 6344     		add	r3, r3, ip
 992 0014 9BB2     		uxth	r3, r3
 993 0016 9AB2     		uxth	r2, r3
 994 0018 044B     		ldr	r3, .L45+4
 995 001a 1A80     		strh	r2, [r3]
 195:.\main.c      ****     //accgroen = ADC_GetResult16(0)-1010+232;
 196:.\main.c      ****          
 197:.\main.c      **** //    int i;
 198:.\main.c      **** //    for(i=0; i<num_of_channels;i++)
 199:.\main.c      **** //    {
 200:.\main.c      **** //        result[i] = ADC_GetResult16(i)-1024+52;
 201:.\main.c      **** //        accroed=result[0];
 202:.\main.c      **** //       
 203:.\main.c      **** //    }
 204:.\main.c      ****     data_ready = TRUE;
 996              		.loc 1 204 0
 997 001c 044B     		ldr	r3, .L45+8
 998 001e 0122     		mov	r2, #1
 999 0020 1A70     		strb	r2, [r3]
 205:.\main.c      **** }
 1000              		.loc 1 205 0
 1001 0022 BD46     		mov	sp, r7
 1002              		@ sp needed
 1003 0024 80BD     		pop	{r7, pc}
 1004              	.L46:
 1005 0026 C046     		.align	2
 1006              	.L45:
 1007 0028 34FCFFFF 		.word	-972
 1008 002c 00000000 		.word	accgroen
 1009 0030 00000000 		.word	data_ready
 1010              		.cfi_endproc
 1011              	.LFE42:
 1012              		.size	ADC_interrupt, .-ADC_interrupt
 1013              		.section	.text.main,"ax",%progbits
 1014              		.align	2
 1015              		.global	main
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 23


 1016              		.code	16
 1017              		.thumb_func
 1018              		.type	main, %function
 1019              	main:
 1020              	.LFB43:
 206:.\main.c      **** 
 207:.\main.c      **** /***********************************Main***********************************/
 208:.\main.c      **** int main()
 209:.\main.c      **** {
 1021              		.loc 1 209 0
 1022              		.cfi_startproc
 1023 0000 80B5     		push	{r7, lr}
 1024              		.cfi_def_cfa_offset 8
 1025              		.cfi_offset 7, -8
 1026              		.cfi_offset 14, -4
 1027 0002 82B0     		sub	sp, sp, #8
 1028              		.cfi_def_cfa_offset 16
 1029 0004 00AF     		add	r7, sp, #0
 1030              		.cfi_def_cfa_register 7
 210:.\main.c      ****     int16 mav_data;
 211:.\main.c      ****     ADC_ISR_StartEx(ADC_interrupt);
 1031              		.loc 1 211 0
 1032 0006 1B4B     		ldr	r3, .L50
 1033 0008 181C     		mov	r0, r3
 1034 000a FFF7FEFF 		bl	ADC_ISR_StartEx
 212:.\main.c      ****     CyGlobalIntEnable;
 1035              		.loc 1 212 0
 1036              	@ 212 ".\main.c" 1
 1037 000e 62B6     		CPSIE   i
 1038              	@ 0 "" 2
 213:.\main.c      ****     UART_Start();                       /* Initialize ADC */    
 1039              		.loc 1 213 0
 1040              		.code	16
 1041 0010 FFF7FEFF 		bl	UART_Start
 214:.\main.c      ****     ADC_Start();                        /* Initialize ADC */
 1042              		.loc 1 214 0
 1043 0014 FFF7FEFF 		bl	ADC_Start
 215:.\main.c      ****     ADC_StartConvert();                 /* Start ADC conversions */
 1044              		.loc 1 215 0
 1045 0018 FFF7FEFF 		bl	ADC_StartConvert
 216:.\main.c      ****     ADC_IRQ_Enable();                   /* Enable ADC interrupts */    
 1046              		.loc 1 216 0
 1047 001c FFF7FEFF 		bl	ADC_IRQ_Enable
 1048              	.L49:
 217:.\main.c      ****     
 218:.\main.c      ****     for (;;)
 219:.\main.c      ****     {      
 220:.\main.c      ****         if(data_ready)
 1049              		.loc 1 220 0
 1050 0020 154B     		ldr	r3, .L50+4
 1051 0022 1B78     		ldrb	r3, [r3]
 1052 0024 002B     		cmp	r3, #0
 1053 0026 24D0     		beq	.L48
 221:.\main.c      ****         {  
 222:.\main.c      ****             mav_data = mavg_filter(accgroen);
 1054              		.loc 1 222 0
 1055 0028 144B     		ldr	r3, .L50+8
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 24


 1056 002a 1B88     		ldrh	r3, [r3]
 1057 002c 1BB2     		sxth	r3, r3
 1058 002e 181C     		mov	r0, r3
 1059 0030 FFF7FEFF 		bl	mavg_filter
 1060 0034 021C     		mov	r2, r0
 1061 0036 BB1D     		add	r3, r7, #6
 1062 0038 1A80     		strh	r2, [r3]
 223:.\main.c      ****             gradergroen = grader(mav_data);
 1063              		.loc 1 223 0
 1064 003a BB1D     		add	r3, r7, #6
 1065 003c 0022     		mov	r2, #0
 1066 003e 9B5E     		ldrsh	r3, [r3, r2]
 1067 0040 181C     		mov	r0, r3
 1068 0042 FFF7FEFF 		bl	grader
 1069 0046 031C     		mov	r3, r0
 1070 0048 9AB2     		uxth	r2, r3
 1071 004a 0D4B     		ldr	r3, .L50+12
 1072 004c 1A80     		strh	r2, [r3]
 224:.\main.c      ****             //UART_UartPutChar(mav_data);
 225:.\main.c      ****             //UART_UartPutChar(mav_data>>8);
 226:.\main.c      ****             UART_UartPutChar(gradergroen);
 1073              		.loc 1 226 0
 1074 004e 0C4B     		ldr	r3, .L50+12
 1075 0050 1B88     		ldrh	r3, [r3]
 1076 0052 1BB2     		sxth	r3, r3
 1077 0054 181C     		mov	r0, r3
 1078 0056 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 227:.\main.c      ****             UART_UartPutChar(gradergroen>>8);
 1079              		.loc 1 227 0
 1080 005a 094B     		ldr	r3, .L50+12
 1081 005c 1B88     		ldrh	r3, [r3]
 1082 005e 1BB2     		sxth	r3, r3
 1083 0060 1B12     		asr	r3, r3, #8
 1084 0062 9BB2     		uxth	r3, r3
 1085 0064 1BB2     		sxth	r3, r3
 1086 0066 181C     		mov	r0, r3
 1087 0068 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 228:.\main.c      **** 
 229:.\main.c      ****             data_ready = FALSE;
 1088              		.loc 1 229 0
 1089 006c 024B     		ldr	r3, .L50+4
 1090 006e 0022     		mov	r2, #0
 1091 0070 1A70     		strb	r2, [r3]
 1092              	.L48:
 230:.\main.c      ****         }
 231:.\main.c      ****     }
 1093              		.loc 1 231 0
 1094 0072 D5E7     		b	.L49
 1095              	.L51:
 1096              		.align	2
 1097              	.L50:
 1098 0074 00000000 		.word	ADC_interrupt
 1099 0078 00000000 		.word	data_ready
 1100 007c 00000000 		.word	accgroen
 1101 0080 00000000 		.word	gradergroen
 1102              		.cfi_endproc
 1103              	.LFE43:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 25


 1104              		.size	main, .-main
 1105              		.text
 1106              	.Letext0:
 1107              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1108              		.section	.debug_info,"",%progbits
 1109              	.Ldebug_info0:
 1110 0000 65030000 		.4byte	0x365
 1111 0004 0400     		.2byte	0x4
 1112 0006 00000000 		.4byte	.Ldebug_abbrev0
 1113 000a 04       		.byte	0x4
 1114 000b 01       		.uleb128 0x1
 1115 000c DB000000 		.4byte	.LASF43
 1116 0010 01       		.byte	0x1
 1117 0011 D2000000 		.4byte	.LASF44
 1118 0015 D2010000 		.4byte	.LASF45
 1119 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1120 001d 00000000 		.4byte	0
 1121 0021 00000000 		.4byte	.Ldebug_line0
 1122 0025 02       		.uleb128 0x2
 1123 0026 01       		.byte	0x1
 1124 0027 06       		.byte	0x6
 1125 0028 85020000 		.4byte	.LASF0
 1126 002c 02       		.uleb128 0x2
 1127 002d 01       		.byte	0x1
 1128 002e 08       		.byte	0x8
 1129 002f A5000000 		.4byte	.LASF1
 1130 0033 02       		.uleb128 0x2
 1131 0034 02       		.byte	0x2
 1132 0035 05       		.byte	0x5
 1133 0036 30000000 		.4byte	.LASF2
 1134 003a 02       		.uleb128 0x2
 1135 003b 02       		.byte	0x2
 1136 003c 07       		.byte	0x7
 1137 003d 1D000000 		.4byte	.LASF3
 1138 0041 02       		.uleb128 0x2
 1139 0042 04       		.byte	0x4
 1140 0043 05       		.byte	0x5
 1141 0044 76020000 		.4byte	.LASF4
 1142 0048 02       		.uleb128 0x2
 1143 0049 04       		.byte	0x4
 1144 004a 07       		.byte	0x7
 1145 004b 75010000 		.4byte	.LASF5
 1146 004f 02       		.uleb128 0x2
 1147 0050 08       		.byte	0x8
 1148 0051 05       		.byte	0x5
 1149 0052 32020000 		.4byte	.LASF6
 1150 0056 02       		.uleb128 0x2
 1151 0057 08       		.byte	0x8
 1152 0058 07       		.byte	0x7
 1153 0059 9E010000 		.4byte	.LASF7
 1154 005d 03       		.uleb128 0x3
 1155 005e 04       		.byte	0x4
 1156 005f 05       		.byte	0x5
 1157 0060 696E7400 		.ascii	"int\000"
 1158 0064 02       		.uleb128 0x2
 1159 0065 04       		.byte	0x4
 1160 0066 07       		.byte	0x7
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 26


 1161 0067 87010000 		.4byte	.LASF8
 1162 006b 04       		.uleb128 0x4
 1163 006c 8B000000 		.4byte	.LASF9
 1164 0070 02       		.byte	0x2
 1165 0071 3801     		.2byte	0x138
 1166 0073 2C000000 		.4byte	0x2c
 1167 0077 04       		.uleb128 0x4
 1168 0078 69010000 		.4byte	.LASF10
 1169 007c 02       		.byte	0x2
 1170 007d 3A01     		.2byte	0x13a
 1171 007f 48000000 		.4byte	0x48
 1172 0083 04       		.uleb128 0x4
 1173 0084 7E000000 		.4byte	.LASF11
 1174 0088 02       		.byte	0x2
 1175 0089 3C01     		.2byte	0x13c
 1176 008b 33000000 		.4byte	0x33
 1177 008f 02       		.uleb128 0x2
 1178 0090 04       		.byte	0x4
 1179 0091 04       		.byte	0x4
 1180 0092 53000000 		.4byte	.LASF12
 1181 0096 02       		.uleb128 0x2
 1182 0097 08       		.byte	0x8
 1183 0098 04       		.byte	0x4
 1184 0099 B3000000 		.4byte	.LASF13
 1185 009d 02       		.uleb128 0x2
 1186 009e 01       		.byte	0x1
 1187 009f 08       		.byte	0x8
 1188 00a0 48020000 		.4byte	.LASF14
 1189 00a4 02       		.uleb128 0x2
 1190 00a5 04       		.byte	0x4
 1191 00a6 07       		.byte	0x7
 1192 00a7 20020000 		.4byte	.LASF15
 1193 00ab 05       		.uleb128 0x5
 1194 00ac 4D020000 		.4byte	.LASF16
 1195 00b0 01       		.byte	0x1
 1196 00b1 28       		.byte	0x28
 1197 00b2 5D000000 		.4byte	0x5d
 1198 00b6 00000000 		.4byte	.LFB37
 1199 00ba 5C000000 		.4byte	.LFE37-.LFB37
 1200 00be 01       		.uleb128 0x1
 1201 00bf 9C       		.byte	0x9c
 1202 00c0 D1000000 		.4byte	0xd1
 1203 00c4 06       		.uleb128 0x6
 1204 00c5 7900     		.ascii	"y\000"
 1205 00c7 01       		.byte	0x1
 1206 00c8 28       		.byte	0x28
 1207 00c9 96000000 		.4byte	0x96
 1208 00cd 02       		.uleb128 0x2
 1209 00ce 91       		.byte	0x91
 1210 00cf 68       		.sleb128 -24
 1211 00d0 00       		.byte	0
 1212 00d1 05       		.uleb128 0x5
 1213 00d2 72000000 		.4byte	.LASF17
 1214 00d6 01       		.byte	0x1
 1215 00d7 31       		.byte	0x31
 1216 00d8 5D000000 		.4byte	0x5d
 1217 00dc 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 27


 1218 00e0 04010000 		.4byte	.LFE38-.LFB38
 1219 00e4 01       		.uleb128 0x1
 1220 00e5 9C       		.byte	0x9c
 1221 00e6 F9000000 		.4byte	0xf9
 1222 00ea 07       		.uleb128 0x7
 1223 00eb 59000000 		.4byte	.LASF18
 1224 00ef 01       		.byte	0x1
 1225 00f0 31       		.byte	0x31
 1226 00f1 5D000000 		.4byte	0x5d
 1227 00f5 02       		.uleb128 0x2
 1228 00f6 91       		.byte	0x91
 1229 00f7 6C       		.sleb128 -20
 1230 00f8 00       		.byte	0
 1231 00f9 05       		.uleb128 0x5
 1232 00fa 5F020000 		.4byte	.LASF19
 1233 00fe 01       		.byte	0x1
 1234 00ff 45       		.byte	0x45
 1235 0100 5D000000 		.4byte	0x5d
 1236 0104 00000000 		.4byte	.LFB39
 1237 0108 0C010000 		.4byte	.LFE39-.LFB39
 1238 010c 01       		.uleb128 0x1
 1239 010d 9C       		.byte	0x9c
 1240 010e 21010000 		.4byte	0x121
 1241 0112 07       		.uleb128 0x7
 1242 0113 59000000 		.4byte	.LASF18
 1243 0117 01       		.byte	0x1
 1244 0118 45       		.byte	0x45
 1245 0119 5D000000 		.4byte	0x5d
 1246 011d 02       		.uleb128 0x2
 1247 011e 91       		.byte	0x91
 1248 011f 6C       		.sleb128 -20
 1249 0120 00       		.byte	0
 1250 0121 05       		.uleb128 0x5
 1251 0122 43000000 		.4byte	.LASF20
 1252 0126 01       		.byte	0x1
 1253 0127 59       		.byte	0x59
 1254 0128 5D000000 		.4byte	0x5d
 1255 012c 00000000 		.4byte	.LFB40
 1256 0130 24010000 		.4byte	.LFE40-.LFB40
 1257 0134 01       		.uleb128 0x1
 1258 0135 9C       		.byte	0x9c
 1259 0136 55010000 		.4byte	0x155
 1260 013a 07       		.uleb128 0x7
 1261 013b 59000000 		.4byte	.LASF18
 1262 013f 01       		.byte	0x1
 1263 0140 59       		.byte	0x59
 1264 0141 5D000000 		.4byte	0x5d
 1265 0145 02       		.uleb128 0x2
 1266 0146 91       		.byte	0x91
 1267 0147 64       		.sleb128 -28
 1268 0148 08       		.uleb128 0x8
 1269 0149 6900     		.ascii	"i\000"
 1270 014b 01       		.byte	0x1
 1271 014c 5B       		.byte	0x5b
 1272 014d 5D000000 		.4byte	0x5d
 1273 0151 02       		.uleb128 0x2
 1274 0152 91       		.byte	0x91
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 28


 1275 0153 6C       		.sleb128 -20
 1276 0154 00       		.byte	0
 1277 0155 05       		.uleb128 0x5
 1278 0156 99020000 		.4byte	.LASF21
 1279 015a 01       		.byte	0x1
 1280 015b 96       		.byte	0x96
 1281 015c 5D000000 		.4byte	0x5d
 1282 0160 00000000 		.4byte	.LFB41
 1283 0164 24010000 		.4byte	.LFE41-.LFB41
 1284 0168 01       		.uleb128 0x1
 1285 0169 9C       		.byte	0x9c
 1286 016a 7D010000 		.4byte	0x17d
 1287 016e 07       		.uleb128 0x7
 1288 016f 59000000 		.4byte	.LASF18
 1289 0173 01       		.byte	0x1
 1290 0174 96       		.byte	0x96
 1291 0175 5D000000 		.4byte	0x5d
 1292 0179 02       		.uleb128 0x2
 1293 017a 91       		.byte	0x91
 1294 017b 74       		.sleb128 -12
 1295 017c 00       		.byte	0
 1296 017d 09       		.uleb128 0x9
 1297 017e 97000000 		.4byte	.LASF46
 1298 0182 01       		.byte	0x1
 1299 0183 C0       		.byte	0xc0
 1300 0184 00000000 		.4byte	.LFB42
 1301 0188 34000000 		.4byte	.LFE42-.LFB42
 1302 018c 01       		.uleb128 0x1
 1303 018d 9C       		.byte	0x9c
 1304 018e 0A       		.uleb128 0xa
 1305 018f 70010000 		.4byte	.LASF47
 1306 0193 01       		.byte	0x1
 1307 0194 D0       		.byte	0xd0
 1308 0195 5D000000 		.4byte	0x5d
 1309 0199 00000000 		.4byte	.LFB43
 1310 019d 84000000 		.4byte	.LFE43-.LFB43
 1311 01a1 01       		.uleb128 0x1
 1312 01a2 9C       		.byte	0x9c
 1313 01a3 B6010000 		.4byte	0x1b6
 1314 01a7 0B       		.uleb128 0xb
 1315 01a8 29020000 		.4byte	.LASF22
 1316 01ac 01       		.byte	0x1
 1317 01ad D2       		.byte	0xd2
 1318 01ae 83000000 		.4byte	0x83
 1319 01b2 02       		.uleb128 0x2
 1320 01b3 91       		.byte	0x91
 1321 01b4 76       		.sleb128 -10
 1322 01b5 00       		.byte	0
 1323 01b6 0C       		.uleb128 0xc
 1324 01b7 96000000 		.4byte	0x96
 1325 01bb C6010000 		.4byte	0x1c6
 1326 01bf 0D       		.uleb128 0xd
 1327 01c0 A4000000 		.4byte	0xa4
 1328 01c4 09       		.byte	0x9
 1329 01c5 00       		.byte	0
 1330 01c6 0E       		.uleb128 0xe
 1331 01c7 00000000 		.4byte	.LASF23
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 29


 1332 01cb 01       		.byte	0x1
 1333 01cc 0D       		.byte	0xd
 1334 01cd B6010000 		.4byte	0x1b6
 1335 01d1 05       		.uleb128 0x5
 1336 01d2 03       		.byte	0x3
 1337 01d3 00000000 		.4byte	x_mavg
 1338 01d7 0E       		.uleb128 0xe
 1339 01d8 84000000 		.4byte	.LASF24
 1340 01dc 01       		.byte	0x1
 1341 01dd 0E       		.byte	0xe
 1342 01de 96000000 		.4byte	0x96
 1343 01e2 05       		.uleb128 0x5
 1344 01e3 03       		.byte	0x3
 1345 01e4 00000000 		.4byte	y_mavg
 1346 01e8 0E       		.uleb128 0xe
 1347 01e9 10000000 		.4byte	.LASF25
 1348 01ed 01       		.byte	0x1
 1349 01ee 0F       		.byte	0xf
 1350 01ef B6010000 		.4byte	0x1b6
 1351 01f3 05       		.uleb128 0x5
 1352 01f4 03       		.byte	0x3
 1353 01f5 00000000 		.4byte	b_mavg
 1354 01f9 0E       		.uleb128 0xe
 1355 01fa BC010000 		.4byte	.LASF26
 1356 01fe 01       		.byte	0x1
 1357 01ff 14       		.byte	0x14
 1358 0200 B6010000 		.4byte	0x1b6
 1359 0204 05       		.uleb128 0x5
 1360 0205 03       		.byte	0x3
 1361 0206 00000000 		.4byte	x2_mavg
 1362 020a 0E       		.uleb128 0xe
 1363 020b 40020000 		.4byte	.LASF27
 1364 020f 01       		.byte	0x1
 1365 0210 15       		.byte	0x15
 1366 0211 96000000 		.4byte	0x96
 1367 0215 05       		.uleb128 0x5
 1368 0216 03       		.byte	0x3
 1369 0217 00000000 		.4byte	y2_mavg
 1370 021b 0E       		.uleb128 0xe
 1371 021c 5E000000 		.4byte	.LASF28
 1372 0220 01       		.byte	0x1
 1373 0221 16       		.byte	0x16
 1374 0222 B6010000 		.4byte	0x1b6
 1375 0226 05       		.uleb128 0x5
 1376 0227 03       		.byte	0x3
 1377 0228 00000000 		.4byte	b2_mavg
 1378 022c 0C       		.uleb128 0xc
 1379 022d 96000000 		.4byte	0x96
 1380 0231 3C020000 		.4byte	0x23c
 1381 0235 0D       		.uleb128 0xd
 1382 0236 A4000000 		.4byte	0xa4
 1383 023a 02       		.byte	0x2
 1384 023b 00       		.byte	0
 1385 023c 0E       		.uleb128 0xe
 1386 023d 17000000 		.4byte	.LASF29
 1387 0241 01       		.byte	0x1
 1388 0242 1A       		.byte	0x1a
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 30


 1389 0243 2C020000 		.4byte	0x22c
 1390 0247 05       		.uleb128 0x5
 1391 0248 03       		.byte	0x3
 1392 0249 00000000 		.4byte	x_low
 1393 024d 0E       		.uleb128 0xe
 1394 024e 91000000 		.4byte	.LASF30
 1395 0252 01       		.byte	0x1
 1396 0253 1B       		.byte	0x1b
 1397 0254 2C020000 		.4byte	0x22c
 1398 0258 05       		.uleb128 0x5
 1399 0259 03       		.byte	0x3
 1400 025a 00000000 		.4byte	y_low
 1401 025e 0E       		.uleb128 0xe
 1402 025f 7F020000 		.4byte	.LASF31
 1403 0263 01       		.byte	0x1
 1404 0264 1C       		.byte	0x1c
 1405 0265 2C020000 		.4byte	0x22c
 1406 0269 05       		.uleb128 0x5
 1407 026a 03       		.byte	0x3
 1408 026b 00000000 		.4byte	b_low
 1409 026f 0E       		.uleb128 0xe
 1410 0270 C4010000 		.4byte	.LASF32
 1411 0274 01       		.byte	0x1
 1412 0275 1D       		.byte	0x1d
 1413 0276 2C020000 		.4byte	0x22c
 1414 027a 05       		.uleb128 0x5
 1415 027b 03       		.byte	0x3
 1416 027c 00000000 		.4byte	a_low
 1417 0280 0E       		.uleb128 0xe
 1418 0281 C5000000 		.4byte	.LASF33
 1419 0285 01       		.byte	0x1
 1420 0286 1F       		.byte	0x1f
 1421 0287 9D000000 		.4byte	0x9d
 1422 028b 05       		.uleb128 0x5
 1423 028c 03       		.byte	0x3
 1424 028d 00000000 		.4byte	current_byte
 1425 0291 0E       		.uleb128 0xe
 1426 0292 07000000 		.4byte	.LASF34
 1427 0296 01       		.byte	0x1
 1428 0297 20       		.byte	0x20
 1429 0298 83000000 		.4byte	0x83
 1430 029c 05       		.uleb128 0x5
 1431 029d 03       		.byte	0x3
 1432 029e 00000000 		.4byte	value_in
 1433 02a2 0C       		.uleb128 0xc
 1434 02a3 83000000 		.4byte	0x83
 1435 02a7 B2020000 		.4byte	0x2b2
 1436 02ab 0D       		.uleb128 0xd
 1437 02ac A4000000 		.4byte	0xa4
 1438 02b0 01       		.byte	0x1
 1439 02b1 00       		.byte	0
 1440 02b2 0E       		.uleb128 0xe
 1441 02b3 94010000 		.4byte	.LASF35
 1442 02b7 01       		.byte	0x1
 1443 02b8 20       		.byte	0x20
 1444 02b9 A2020000 		.4byte	0x2a2
 1445 02bd 05       		.uleb128 0x5
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 31


 1446 02be 03       		.byte	0x3
 1447 02bf 00000000 		.4byte	value_out
 1448 02c3 0F       		.uleb128 0xf
 1449 02c4 6900     		.ascii	"i\000"
 1450 02c6 01       		.byte	0x1
 1451 02c7 20       		.byte	0x20
 1452 02c8 83000000 		.4byte	0x83
 1453 02cc 05       		.uleb128 0x5
 1454 02cd 03       		.byte	0x3
 1455 02ce 00000000 		.4byte	i
 1456 02d2 0F       		.uleb128 0xf
 1457 02d3 6A00     		.ascii	"j\000"
 1458 02d5 01       		.byte	0x1
 1459 02d6 20       		.byte	0x20
 1460 02d7 83000000 		.4byte	0x83
 1461 02db 05       		.uleb128 0x5
 1462 02dc 03       		.byte	0x3
 1463 02dd 00000000 		.4byte	j
 1464 02e1 0E       		.uleb128 0xe
 1465 02e2 CA010000 		.4byte	.LASF36
 1466 02e6 01       		.byte	0x1
 1467 02e7 20       		.byte	0x20
 1468 02e8 83000000 		.4byte	0x83
 1469 02ec 05       		.uleb128 0x5
 1470 02ed 03       		.byte	0x3
 1471 02ee 00000000 		.4byte	avg_new
 1472 02f2 0E       		.uleb128 0xe
 1473 02f3 66000000 		.4byte	.LASF37
 1474 02f7 01       		.byte	0x1
 1475 02f8 20       		.byte	0x20
 1476 02f9 83000000 		.4byte	0x83
 1477 02fd 05       		.uleb128 0x5
 1478 02fe 03       		.byte	0x3
 1479 02ff 00000000 		.4byte	gradergroen
 1480 0303 0E       		.uleb128 0xe
 1481 0304 6C020000 		.4byte	.LASF38
 1482 0308 01       		.byte	0x1
 1483 0309 21       		.byte	0x21
 1484 030a 9D000000 		.4byte	0x9d
 1485 030e 05       		.uleb128 0x5
 1486 030f 03       		.byte	0x3
 1487 0310 00000000 		.4byte	FirstCall
 1488 0314 0E       		.uleb128 0xe
 1489 0315 91020000 		.4byte	.LASF39
 1490 0319 01       		.byte	0x1
 1491 031a 23       		.byte	0x23
 1492 031b 83000000 		.4byte	0x83
 1493 031f 05       		.uleb128 0x5
 1494 0320 03       		.byte	0x3
 1495 0321 00000000 		.4byte	accroed
 1496 0325 0E       		.uleb128 0xe
 1497 0326 3A000000 		.4byte	.LASF40
 1498 032a 01       		.byte	0x1
 1499 032b 24       		.byte	0x24
 1500 032c 83000000 		.4byte	0x83
 1501 0330 05       		.uleb128 0x5
 1502 0331 03       		.byte	0x3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 32


 1503 0332 00000000 		.4byte	accgroen
 1504 0336 0C       		.uleb128 0xc
 1505 0337 83000000 		.4byte	0x83
 1506 033b 46030000 		.4byte	0x346
 1507 033f 0D       		.uleb128 0xd
 1508 0340 A4000000 		.4byte	0xa4
 1509 0344 00       		.byte	0
 1510 0345 00       		.byte	0
 1511 0346 0E       		.uleb128 0xe
 1512 0347 B5010000 		.4byte	.LASF41
 1513 034b 01       		.byte	0x1
 1514 034c 25       		.byte	0x25
 1515 034d 36030000 		.4byte	0x336
 1516 0351 05       		.uleb128 0x5
 1517 0352 03       		.byte	0x3
 1518 0353 00000000 		.4byte	result
 1519 0357 0E       		.uleb128 0xe
 1520 0358 BA000000 		.4byte	.LASF42
 1521 035c 01       		.byte	0x1
 1522 035d 26       		.byte	0x26
 1523 035e 6B000000 		.4byte	0x6b
 1524 0362 05       		.uleb128 0x5
 1525 0363 03       		.byte	0x3
 1526 0364 00000000 		.4byte	data_ready
 1527 0368 00       		.byte	0
 1528              		.section	.debug_abbrev,"",%progbits
 1529              	.Ldebug_abbrev0:
 1530 0000 01       		.uleb128 0x1
 1531 0001 11       		.uleb128 0x11
 1532 0002 01       		.byte	0x1
 1533 0003 25       		.uleb128 0x25
 1534 0004 0E       		.uleb128 0xe
 1535 0005 13       		.uleb128 0x13
 1536 0006 0B       		.uleb128 0xb
 1537 0007 03       		.uleb128 0x3
 1538 0008 0E       		.uleb128 0xe
 1539 0009 1B       		.uleb128 0x1b
 1540 000a 0E       		.uleb128 0xe
 1541 000b 55       		.uleb128 0x55
 1542 000c 17       		.uleb128 0x17
 1543 000d 11       		.uleb128 0x11
 1544 000e 01       		.uleb128 0x1
 1545 000f 10       		.uleb128 0x10
 1546 0010 17       		.uleb128 0x17
 1547 0011 00       		.byte	0
 1548 0012 00       		.byte	0
 1549 0013 02       		.uleb128 0x2
 1550 0014 24       		.uleb128 0x24
 1551 0015 00       		.byte	0
 1552 0016 0B       		.uleb128 0xb
 1553 0017 0B       		.uleb128 0xb
 1554 0018 3E       		.uleb128 0x3e
 1555 0019 0B       		.uleb128 0xb
 1556 001a 03       		.uleb128 0x3
 1557 001b 0E       		.uleb128 0xe
 1558 001c 00       		.byte	0
 1559 001d 00       		.byte	0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 33


 1560 001e 03       		.uleb128 0x3
 1561 001f 24       		.uleb128 0x24
 1562 0020 00       		.byte	0
 1563 0021 0B       		.uleb128 0xb
 1564 0022 0B       		.uleb128 0xb
 1565 0023 3E       		.uleb128 0x3e
 1566 0024 0B       		.uleb128 0xb
 1567 0025 03       		.uleb128 0x3
 1568 0026 08       		.uleb128 0x8
 1569 0027 00       		.byte	0
 1570 0028 00       		.byte	0
 1571 0029 04       		.uleb128 0x4
 1572 002a 16       		.uleb128 0x16
 1573 002b 00       		.byte	0
 1574 002c 03       		.uleb128 0x3
 1575 002d 0E       		.uleb128 0xe
 1576 002e 3A       		.uleb128 0x3a
 1577 002f 0B       		.uleb128 0xb
 1578 0030 3B       		.uleb128 0x3b
 1579 0031 05       		.uleb128 0x5
 1580 0032 49       		.uleb128 0x49
 1581 0033 13       		.uleb128 0x13
 1582 0034 00       		.byte	0
 1583 0035 00       		.byte	0
 1584 0036 05       		.uleb128 0x5
 1585 0037 2E       		.uleb128 0x2e
 1586 0038 01       		.byte	0x1
 1587 0039 3F       		.uleb128 0x3f
 1588 003a 19       		.uleb128 0x19
 1589 003b 03       		.uleb128 0x3
 1590 003c 0E       		.uleb128 0xe
 1591 003d 3A       		.uleb128 0x3a
 1592 003e 0B       		.uleb128 0xb
 1593 003f 3B       		.uleb128 0x3b
 1594 0040 0B       		.uleb128 0xb
 1595 0041 27       		.uleb128 0x27
 1596 0042 19       		.uleb128 0x19
 1597 0043 49       		.uleb128 0x49
 1598 0044 13       		.uleb128 0x13
 1599 0045 11       		.uleb128 0x11
 1600 0046 01       		.uleb128 0x1
 1601 0047 12       		.uleb128 0x12
 1602 0048 06       		.uleb128 0x6
 1603 0049 40       		.uleb128 0x40
 1604 004a 18       		.uleb128 0x18
 1605 004b 9642     		.uleb128 0x2116
 1606 004d 19       		.uleb128 0x19
 1607 004e 01       		.uleb128 0x1
 1608 004f 13       		.uleb128 0x13
 1609 0050 00       		.byte	0
 1610 0051 00       		.byte	0
 1611 0052 06       		.uleb128 0x6
 1612 0053 05       		.uleb128 0x5
 1613 0054 00       		.byte	0
 1614 0055 03       		.uleb128 0x3
 1615 0056 08       		.uleb128 0x8
 1616 0057 3A       		.uleb128 0x3a
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 34


 1617 0058 0B       		.uleb128 0xb
 1618 0059 3B       		.uleb128 0x3b
 1619 005a 0B       		.uleb128 0xb
 1620 005b 49       		.uleb128 0x49
 1621 005c 13       		.uleb128 0x13
 1622 005d 02       		.uleb128 0x2
 1623 005e 18       		.uleb128 0x18
 1624 005f 00       		.byte	0
 1625 0060 00       		.byte	0
 1626 0061 07       		.uleb128 0x7
 1627 0062 05       		.uleb128 0x5
 1628 0063 00       		.byte	0
 1629 0064 03       		.uleb128 0x3
 1630 0065 0E       		.uleb128 0xe
 1631 0066 3A       		.uleb128 0x3a
 1632 0067 0B       		.uleb128 0xb
 1633 0068 3B       		.uleb128 0x3b
 1634 0069 0B       		.uleb128 0xb
 1635 006a 49       		.uleb128 0x49
 1636 006b 13       		.uleb128 0x13
 1637 006c 02       		.uleb128 0x2
 1638 006d 18       		.uleb128 0x18
 1639 006e 00       		.byte	0
 1640 006f 00       		.byte	0
 1641 0070 08       		.uleb128 0x8
 1642 0071 34       		.uleb128 0x34
 1643 0072 00       		.byte	0
 1644 0073 03       		.uleb128 0x3
 1645 0074 08       		.uleb128 0x8
 1646 0075 3A       		.uleb128 0x3a
 1647 0076 0B       		.uleb128 0xb
 1648 0077 3B       		.uleb128 0x3b
 1649 0078 0B       		.uleb128 0xb
 1650 0079 49       		.uleb128 0x49
 1651 007a 13       		.uleb128 0x13
 1652 007b 02       		.uleb128 0x2
 1653 007c 18       		.uleb128 0x18
 1654 007d 00       		.byte	0
 1655 007e 00       		.byte	0
 1656 007f 09       		.uleb128 0x9
 1657 0080 2E       		.uleb128 0x2e
 1658 0081 00       		.byte	0
 1659 0082 3F       		.uleb128 0x3f
 1660 0083 19       		.uleb128 0x19
 1661 0084 03       		.uleb128 0x3
 1662 0085 0E       		.uleb128 0xe
 1663 0086 3A       		.uleb128 0x3a
 1664 0087 0B       		.uleb128 0xb
 1665 0088 3B       		.uleb128 0x3b
 1666 0089 0B       		.uleb128 0xb
 1667 008a 27       		.uleb128 0x27
 1668 008b 19       		.uleb128 0x19
 1669 008c 11       		.uleb128 0x11
 1670 008d 01       		.uleb128 0x1
 1671 008e 12       		.uleb128 0x12
 1672 008f 06       		.uleb128 0x6
 1673 0090 40       		.uleb128 0x40
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 35


 1674 0091 18       		.uleb128 0x18
 1675 0092 9642     		.uleb128 0x2116
 1676 0094 19       		.uleb128 0x19
 1677 0095 00       		.byte	0
 1678 0096 00       		.byte	0
 1679 0097 0A       		.uleb128 0xa
 1680 0098 2E       		.uleb128 0x2e
 1681 0099 01       		.byte	0x1
 1682 009a 3F       		.uleb128 0x3f
 1683 009b 19       		.uleb128 0x19
 1684 009c 03       		.uleb128 0x3
 1685 009d 0E       		.uleb128 0xe
 1686 009e 3A       		.uleb128 0x3a
 1687 009f 0B       		.uleb128 0xb
 1688 00a0 3B       		.uleb128 0x3b
 1689 00a1 0B       		.uleb128 0xb
 1690 00a2 49       		.uleb128 0x49
 1691 00a3 13       		.uleb128 0x13
 1692 00a4 11       		.uleb128 0x11
 1693 00a5 01       		.uleb128 0x1
 1694 00a6 12       		.uleb128 0x12
 1695 00a7 06       		.uleb128 0x6
 1696 00a8 40       		.uleb128 0x40
 1697 00a9 18       		.uleb128 0x18
 1698 00aa 9642     		.uleb128 0x2116
 1699 00ac 19       		.uleb128 0x19
 1700 00ad 01       		.uleb128 0x1
 1701 00ae 13       		.uleb128 0x13
 1702 00af 00       		.byte	0
 1703 00b0 00       		.byte	0
 1704 00b1 0B       		.uleb128 0xb
 1705 00b2 34       		.uleb128 0x34
 1706 00b3 00       		.byte	0
 1707 00b4 03       		.uleb128 0x3
 1708 00b5 0E       		.uleb128 0xe
 1709 00b6 3A       		.uleb128 0x3a
 1710 00b7 0B       		.uleb128 0xb
 1711 00b8 3B       		.uleb128 0x3b
 1712 00b9 0B       		.uleb128 0xb
 1713 00ba 49       		.uleb128 0x49
 1714 00bb 13       		.uleb128 0x13
 1715 00bc 02       		.uleb128 0x2
 1716 00bd 18       		.uleb128 0x18
 1717 00be 00       		.byte	0
 1718 00bf 00       		.byte	0
 1719 00c0 0C       		.uleb128 0xc
 1720 00c1 01       		.uleb128 0x1
 1721 00c2 01       		.byte	0x1
 1722 00c3 49       		.uleb128 0x49
 1723 00c4 13       		.uleb128 0x13
 1724 00c5 01       		.uleb128 0x1
 1725 00c6 13       		.uleb128 0x13
 1726 00c7 00       		.byte	0
 1727 00c8 00       		.byte	0
 1728 00c9 0D       		.uleb128 0xd
 1729 00ca 21       		.uleb128 0x21
 1730 00cb 00       		.byte	0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 36


 1731 00cc 49       		.uleb128 0x49
 1732 00cd 13       		.uleb128 0x13
 1733 00ce 2F       		.uleb128 0x2f
 1734 00cf 0B       		.uleb128 0xb
 1735 00d0 00       		.byte	0
 1736 00d1 00       		.byte	0
 1737 00d2 0E       		.uleb128 0xe
 1738 00d3 34       		.uleb128 0x34
 1739 00d4 00       		.byte	0
 1740 00d5 03       		.uleb128 0x3
 1741 00d6 0E       		.uleb128 0xe
 1742 00d7 3A       		.uleb128 0x3a
 1743 00d8 0B       		.uleb128 0xb
 1744 00d9 3B       		.uleb128 0x3b
 1745 00da 0B       		.uleb128 0xb
 1746 00db 49       		.uleb128 0x49
 1747 00dc 13       		.uleb128 0x13
 1748 00dd 3F       		.uleb128 0x3f
 1749 00de 19       		.uleb128 0x19
 1750 00df 02       		.uleb128 0x2
 1751 00e0 18       		.uleb128 0x18
 1752 00e1 00       		.byte	0
 1753 00e2 00       		.byte	0
 1754 00e3 0F       		.uleb128 0xf
 1755 00e4 34       		.uleb128 0x34
 1756 00e5 00       		.byte	0
 1757 00e6 03       		.uleb128 0x3
 1758 00e7 08       		.uleb128 0x8
 1759 00e8 3A       		.uleb128 0x3a
 1760 00e9 0B       		.uleb128 0xb
 1761 00ea 3B       		.uleb128 0x3b
 1762 00eb 0B       		.uleb128 0xb
 1763 00ec 49       		.uleb128 0x49
 1764 00ed 13       		.uleb128 0x13
 1765 00ee 3F       		.uleb128 0x3f
 1766 00ef 19       		.uleb128 0x19
 1767 00f0 02       		.uleb128 0x2
 1768 00f1 18       		.uleb128 0x18
 1769 00f2 00       		.byte	0
 1770 00f3 00       		.byte	0
 1771 00f4 00       		.byte	0
 1772              		.section	.debug_aranges,"",%progbits
 1773 0000 4C000000 		.4byte	0x4c
 1774 0004 0200     		.2byte	0x2
 1775 0006 00000000 		.4byte	.Ldebug_info0
 1776 000a 04       		.byte	0x4
 1777 000b 00       		.byte	0
 1778 000c 0000     		.2byte	0
 1779 000e 0000     		.2byte	0
 1780 0010 00000000 		.4byte	.LFB37
 1781 0014 5C000000 		.4byte	.LFE37-.LFB37
 1782 0018 00000000 		.4byte	.LFB38
 1783 001c 04010000 		.4byte	.LFE38-.LFB38
 1784 0020 00000000 		.4byte	.LFB39
 1785 0024 0C010000 		.4byte	.LFE39-.LFB39
 1786 0028 00000000 		.4byte	.LFB40
 1787 002c 24010000 		.4byte	.LFE40-.LFB40
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 37


 1788 0030 00000000 		.4byte	.LFB41
 1789 0034 24010000 		.4byte	.LFE41-.LFB41
 1790 0038 00000000 		.4byte	.LFB42
 1791 003c 34000000 		.4byte	.LFE42-.LFB42
 1792 0040 00000000 		.4byte	.LFB43
 1793 0044 84000000 		.4byte	.LFE43-.LFB43
 1794 0048 00000000 		.4byte	0
 1795 004c 00000000 		.4byte	0
 1796              		.section	.debug_ranges,"",%progbits
 1797              	.Ldebug_ranges0:
 1798 0000 00000000 		.4byte	.LFB37
 1799 0004 5C000000 		.4byte	.LFE37
 1800 0008 00000000 		.4byte	.LFB38
 1801 000c 04010000 		.4byte	.LFE38
 1802 0010 00000000 		.4byte	.LFB39
 1803 0014 0C010000 		.4byte	.LFE39
 1804 0018 00000000 		.4byte	.LFB40
 1805 001c 24010000 		.4byte	.LFE40
 1806 0020 00000000 		.4byte	.LFB41
 1807 0024 24010000 		.4byte	.LFE41
 1808 0028 00000000 		.4byte	.LFB42
 1809 002c 34000000 		.4byte	.LFE42
 1810 0030 00000000 		.4byte	.LFB43
 1811 0034 84000000 		.4byte	.LFE43
 1812 0038 00000000 		.4byte	0
 1813 003c 00000000 		.4byte	0
 1814              		.section	.debug_line,"",%progbits
 1815              	.Ldebug_line0:
 1816 0000 A1010000 		.section	.debug_str,"MS",%progbits,1
 1816      02004300 
 1816      00000201 
 1816      FB0E0D00 
 1816      01010101 
 1817              	.LASF23:
 1818 0000 785F6D61 		.ascii	"x_mavg\000"
 1818      766700
 1819              	.LASF34:
 1820 0007 76616C75 		.ascii	"value_in\000"
 1820      655F696E 
 1820      00
 1821              	.LASF25:
 1822 0010 625F6D61 		.ascii	"b_mavg\000"
 1822      766700
 1823              	.LASF29:
 1824 0017 785F6C6F 		.ascii	"x_low\000"
 1824      7700
 1825              	.LASF3:
 1826 001d 73686F72 		.ascii	"short unsigned int\000"
 1826      7420756E 
 1826      7369676E 
 1826      65642069 
 1826      6E7400
 1827              	.LASF2:
 1828 0030 73686F72 		.ascii	"short int\000"
 1828      7420696E 
 1828      7400
 1829              	.LASF40:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 38


 1830 003a 61636367 		.ascii	"accgroen\000"
 1830      726F656E 
 1830      00
 1831              	.LASF20:
 1832 0043 6C6F775F 		.ascii	"low_pass_filter\000"
 1832      70617373 
 1832      5F66696C 
 1832      74657200 
 1833              	.LASF12:
 1834 0053 666C6F61 		.ascii	"float\000"
 1834      7400
 1835              	.LASF18:
 1836 0059 64617461 		.ascii	"data\000"
 1836      00
 1837              	.LASF28:
 1838 005e 62325F6D 		.ascii	"b2_mavg\000"
 1838      61766700 
 1839              	.LASF37:
 1840 0066 67726164 		.ascii	"gradergroen\000"
 1840      65726772 
 1840      6F656E00 
 1841              	.LASF17:
 1842 0072 6D617667 		.ascii	"mavg_filter\000"
 1842      5F66696C 
 1842      74657200 
 1843              	.LASF11:
 1844 007e 696E7431 		.ascii	"int16\000"
 1844      3600
 1845              	.LASF24:
 1846 0084 795F6D61 		.ascii	"y_mavg\000"
 1846      766700
 1847              	.LASF9:
 1848 008b 75696E74 		.ascii	"uint8\000"
 1848      3800
 1849              	.LASF30:
 1850 0091 795F6C6F 		.ascii	"y_low\000"
 1850      7700
 1851              	.LASF46:
 1852 0097 4144435F 		.ascii	"ADC_interrupt\000"
 1852      696E7465 
 1852      72727570 
 1852      7400
 1853              	.LASF1:
 1854 00a5 756E7369 		.ascii	"unsigned char\000"
 1854      676E6564 
 1854      20636861 
 1854      7200
 1855              	.LASF13:
 1856 00b3 646F7562 		.ascii	"double\000"
 1856      6C6500
 1857              	.LASF42:
 1858 00ba 64617461 		.ascii	"data_ready\000"
 1858      5F726561 
 1858      647900
 1859              	.LASF33:
 1860 00c5 63757272 		.ascii	"current_byte\000"
 1860      656E745F 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 39


 1860      62797465 
 1860      00
 1861              	.LASF44:
 1862 00d2 2E5C6D61 		.ascii	".\\main.c\000"
 1862      696E2E63 
 1862      00
 1863              	.LASF43:
 1864 00db 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1864      4320342E 
 1864      392E3320 
 1864      32303135 
 1864      30333033 
 1865 010e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1865      20726576 
 1865      6973696F 
 1865      6E203232 
 1865      31323230 
 1866 0141 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1866      66756E63 
 1866      74696F6E 
 1866      2D736563 
 1866      74696F6E 
 1867              	.LASF10:
 1868 0169 75696E74 		.ascii	"uint32\000"
 1868      333200
 1869              	.LASF47:
 1870 0170 6D61696E 		.ascii	"main\000"
 1870      00
 1871              	.LASF5:
 1872 0175 6C6F6E67 		.ascii	"long unsigned int\000"
 1872      20756E73 
 1872      69676E65 
 1872      6420696E 
 1872      7400
 1873              	.LASF8:
 1874 0187 756E7369 		.ascii	"unsigned int\000"
 1874      676E6564 
 1874      20696E74 
 1874      00
 1875              	.LASF35:
 1876 0194 76616C75 		.ascii	"value_out\000"
 1876      655F6F75 
 1876      7400
 1877              	.LASF7:
 1878 019e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1878      206C6F6E 
 1878      6720756E 
 1878      7369676E 
 1878      65642069 
 1879              	.LASF41:
 1880 01b5 72657375 		.ascii	"result\000"
 1880      6C7400
 1881              	.LASF26:
 1882 01bc 78325F6D 		.ascii	"x2_mavg\000"
 1882      61766700 
 1883              	.LASF32:
 1884 01c4 615F6C6F 		.ascii	"a_low\000"
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 40


 1884      7700
 1885              	.LASF36:
 1886 01ca 6176675F 		.ascii	"avg_new\000"
 1886      6E657700 
 1887              	.LASF45:
 1888 01d2 433A5C55 		.ascii	"C:\\Users\\Linette Helena\\Desktop\\Det pisse meget"
 1888      73657273 
 1888      5C4C696E 
 1888      65747465 
 1888      2048656C 
 1889 0201 20726967 		.ascii	" rigtigt!\\ADC_med_filtre.cydsn\000"
 1889      74696774 
 1889      215C4144 
 1889      435F6D65 
 1889      645F6669 
 1890              	.LASF15:
 1891 0220 73697A65 		.ascii	"sizetype\000"
 1891      74797065 
 1891      00
 1892              	.LASF22:
 1893 0229 6D61765F 		.ascii	"mav_data\000"
 1893      64617461 
 1893      00
 1894              	.LASF6:
 1895 0232 6C6F6E67 		.ascii	"long long int\000"
 1895      206C6F6E 
 1895      6720696E 
 1895      7400
 1896              	.LASF27:
 1897 0240 79325F6D 		.ascii	"y2_mavg\000"
 1897      61766700 
 1898              	.LASF14:
 1899 0248 63686172 		.ascii	"char\000"
 1899      00
 1900              	.LASF16:
 1901 024d 666C6F6F 		.ascii	"floor_and_convert\000"
 1901      725F616E 
 1901      645F636F 
 1901      6E766572 
 1901      7400
 1902              	.LASF19:
 1903 025f 6D617667 		.ascii	"mavg_filter2\000"
 1903      5F66696C 
 1903      74657232 
 1903      00
 1904              	.LASF38:
 1905 026c 46697273 		.ascii	"FirstCall\000"
 1905      7443616C 
 1905      6C00
 1906              	.LASF4:
 1907 0276 6C6F6E67 		.ascii	"long int\000"
 1907      20696E74 
 1907      00
 1908              	.LASF31:
 1909 027f 625F6C6F 		.ascii	"b_low\000"
 1909      7700
 1910              	.LASF0:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccJSdHnn.s 			page 41


 1911 0285 7369676E 		.ascii	"signed char\000"
 1911      65642063 
 1911      68617200 
 1912              	.LASF39:
 1913 0291 61636372 		.ascii	"accroed\000"
 1913      6F656400 
 1914              	.LASF21:
 1915 0299 67726164 		.ascii	"grader\000"
 1915      657200
 1916              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
